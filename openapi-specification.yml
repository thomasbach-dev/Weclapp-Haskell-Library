openapi: 3.0.1
info:
  title: weclapp api
  contact:
    name: weclapp
    url: https://www.weclapp.com
    email: support@weclapp.com
  version: "1"
servers:
- url: https://www.weclapp.com/webapp/api/v1
security:
- API token: []
paths:
  /accountingTransaction:
    get:
      tags:
      - accountingTransaction
      description: query accountingTransaction
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: accountingTransaction response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/accountingTransaction'
  /accountingTransaction/count:
    get:
      tags:
      - accountingTransaction
      description: count accountingTransaction
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /accountingTransaction/id/{id}:
    get:
      tags:
      - accountingTransaction
      description: query accountingTransaction
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountingTransaction'
  /archivedEmail:
    get:
      tags:
      - archivedEmail
      description: query archivedEmail
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: entityId
        in: query
        required: true
        schema:
          type: string
      - name: entityName
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: archivedEmail response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/archivedEmail'
  /archivedEmail/count:
    get:
      tags:
      - archivedEmail
      description: count archivedEmail
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: entityId
        in: query
        required: true
        schema:
          type: string
      - name: entityName
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /archivedEmail/id/{id}:
    get:
      tags:
      - archivedEmail
      description: query archivedEmail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/archivedEmail'
    delete:
      tags:
      - archivedEmail
      description: delete a archivedEmail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: archivedEmail delete response
          content: {}
  /article:
    get:
      tags:
      - article
      description: query article
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: article response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/article'
    post:
      tags:
      - article
      description: create a article
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/article'
        required: true
      responses:
        201:
          description: article create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/article'
      x-codegen-request-body-name: body
  /article/count:
    get:
      tags:
      - article
      description: count article
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /article/id/{id}:
    get:
      tags:
      - article
      description: query article
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/article'
    put:
      tags:
      - article
      description: update article
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/article'
        required: true
      responses:
        200:
          description: article update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/article'
      x-codegen-request-body-name: body
    delete:
      tags:
      - article
      description: delete a article
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: article delete response
          content: {}
  /article/id/{id}/downloadArticleImage:
    get:
      tags:
      - article
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: articleImageId
        in: query
        required: true
        schema:
          type: string
      - name: preview
        in: query
        schema:
          type: boolean
      - name: scaleWidth
        in: query
        schema:
          type: integer
          format: int32
      - name: scaleHeight
        in: query
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: downloadArticleImage response
          content: {}
  /article/id/{id}/downloadMainArticleImage:
    get:
      tags:
      - article
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: preview
        in: query
        schema:
          type: boolean
      - name: scaleWidth
        in: query
        schema:
          type: integer
          format: int32
      - name: scaleHeight
        in: query
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: downloadMainArticleImage response
          content: {}
  /article/id/{id}/uploadArticleImage:
    post:
      tags:
      - article
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: mainImage
        in: query
        schema:
          type: boolean
      responses:
        200:
          description: uploadArticleImage response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties: {}
  /articleAccountingCode:
    get:
      tags:
      - articleAccountingCode
      description: query articleAccountingCode
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: articleAccountingCode response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - articleAccountingCode
      description: create a articleAccountingCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: articleAccountingCode create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /articleAccountingCode/count:
    get:
      tags:
      - articleAccountingCode
      description: count articleAccountingCode
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /articleAccountingCode/id/{id}:
    get:
      tags:
      - articleAccountingCode
      description: query articleAccountingCode
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - articleAccountingCode
      description: update articleAccountingCode
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: articleAccountingCode update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - articleAccountingCode
      description: delete a articleAccountingCode
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: articleAccountingCode delete response
          content: {}
  /articleCategory:
    get:
      tags:
      - articleCategory
      description: query articleCategory
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: articleCategory response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/articleCategory'
    post:
      tags:
      - articleCategory
      description: create a articleCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/articleCategory'
        required: true
      responses:
        201:
          description: articleCategory create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/articleCategory'
      x-codegen-request-body-name: body
  /articleCategory/count:
    get:
      tags:
      - articleCategory
      description: count articleCategory
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /articleCategory/id/{id}:
    get:
      tags:
      - articleCategory
      description: query articleCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/articleCategory'
    put:
      tags:
      - articleCategory
      description: update articleCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/articleCategory'
        required: true
      responses:
        200:
          description: articleCategory update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/articleCategory'
      x-codegen-request-body-name: body
    delete:
      tags:
      - articleCategory
      description: delete a articleCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: articleCategory delete response
          content: {}
  /articleCategory/id/{id}/downloadImage:
    get:
      tags:
      - articleCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: scaleWidth
        in: query
        schema:
          type: integer
          format: int32
      - name: scaleHeight
        in: query
        schema:
          type: integer
          format: int32
      - name: imageId
        in: query
        schema:
          type: string
      responses:
        200:
          description: downloadImage response
          content: {}
  /articleCategory/id/{id}/uploadImage:
    post:
      tags:
      - articleCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: uploadImage response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties: {}
  /articlePrice:
    get:
      tags:
      - articlePrice
      description: query articlePrice
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: articlePrice response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/articlePrice'
  /articlePrice/count:
    get:
      tags:
      - articlePrice
      description: count articlePrice
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /articlePrice/id/{id}:
    get:
      tags:
      - articlePrice
      description: query articlePrice
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/articlePrice'
  /articleRating:
    get:
      tags:
      - articleRating
      description: query articleRating
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: articleRating response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - articleRating
      description: create a articleRating
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: articleRating create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /articleRating/count:
    get:
      tags:
      - articleRating
      description: count articleRating
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /articleRating/id/{id}:
    get:
      tags:
      - articleRating
      description: query articleRating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - articleRating
      description: update articleRating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: articleRating update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - articleRating
      description: delete a articleRating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: articleRating delete response
          content: {}
  /articleSupplySource:
    get:
      tags:
      - articleSupplySource
      description: query articleSupplySource
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: articleSupplySource response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/articleSupplySource'
    post:
      tags:
      - articleSupplySource
      description: create a articleSupplySource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/articleSupplySource'
        required: true
      responses:
        201:
          description: articleSupplySource create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/articleSupplySource'
      x-codegen-request-body-name: body
  /articleSupplySource/count:
    get:
      tags:
      - articleSupplySource
      description: count articleSupplySource
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /articleSupplySource/id/{id}:
    get:
      tags:
      - articleSupplySource
      description: query articleSupplySource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/articleSupplySource'
    put:
      tags:
      - articleSupplySource
      description: update articleSupplySource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/articleSupplySource'
        required: true
      responses:
        200:
          description: articleSupplySource update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/articleSupplySource'
      x-codegen-request-body-name: body
  /batchNumber:
    get:
      tags:
      - batchNumber
      description: query batchNumber
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: batchNumber response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/batchNumber'
  /batchNumber/count:
    get:
      tags:
      - batchNumber
      description: count batchNumber
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /batchNumber/id/{id}:
    get:
      tags:
      - batchNumber
      description: query batchNumber
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batchNumber'
  /blanketPurchaseOrder:
    get:
      tags:
      - blanketPurchaseOrder
      description: query blanketPurchaseOrder
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: blanketPurchaseOrder response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/blanketPurchaseOrder'
    post:
      tags:
      - blanketPurchaseOrder
      description: create a blanketPurchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/blanketPurchaseOrder'
        required: true
      responses:
        201:
          description: blanketPurchaseOrder create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blanketPurchaseOrder'
      x-codegen-request-body-name: body
  /blanketPurchaseOrder/count:
    get:
      tags:
      - blanketPurchaseOrder
      description: count blanketPurchaseOrder
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /blanketPurchaseOrder/id/{id}:
    get:
      tags:
      - blanketPurchaseOrder
      description: query blanketPurchaseOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blanketPurchaseOrder'
    put:
      tags:
      - blanketPurchaseOrder
      description: update blanketPurchaseOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/blanketPurchaseOrder'
        required: true
      responses:
        200:
          description: blanketPurchaseOrder update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blanketPurchaseOrder'
      x-codegen-request-body-name: body
    delete:
      tags:
      - blanketPurchaseOrder
      description: delete a blanketPurchaseOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: blanketPurchaseOrder delete response
          content: {}
  /blanketPurchaseOrder/id/{id}/downloadLatestBlanketPurchaseOrderPdf:
    get:
      tags:
      - blanketPurchaseOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: downloadLatestBlanketPurchaseOrderPdf response
          content: {}
  /blanketPurchaseOrder/id/{id}/generateReleases:
    post:
      tags:
      - blanketPurchaseOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - firstScheduledDeliveryDate
              - fixReleasedQuantity
              - repeatInterval
              - repeatType
              type: object
              properties:
                firstScheduledDeliveryDate:
                  type: integer
                  format: timestamp
                repeatInterval:
                  type: integer
                  format: int32
                repeatType:
                  type: string
                  enum:
                  - DAY
                  - MONTH
                  - WEEK
                  - YEAR
                fixReleasedQuantity:
                  type: boolean
                releasedQuantity:
                  type: string
                  format: number
        required: true
      responses:
        200:
          description: generateReleases response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/blanketPurchaseOrder'
      x-codegen-request-body-name: body
  /campaign:
    get:
      tags:
      - campaign
      description: query campaign
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: campaign response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/campaign'
    post:
      tags:
      - campaign
      description: create a campaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/campaign'
        required: true
      responses:
        201:
          description: campaign create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/campaign'
      x-codegen-request-body-name: body
  /campaign/count:
    get:
      tags:
      - campaign
      description: count campaign
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /campaign/id/{id}:
    get:
      tags:
      - campaign
      description: query campaign
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/campaign'
    put:
      tags:
      - campaign
      description: update campaign
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/campaign'
        required: true
      responses:
        200:
          description: campaign update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/campaign'
      x-codegen-request-body-name: body
    delete:
      tags:
      - campaign
      description: delete a campaign
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: campaign delete response
          content: {}
  /campaignParticipant:
    get:
      tags:
      - campaignParticipant
      description: query campaignParticipant
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: campaignParticipant response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/campaignParticipant'
    post:
      tags:
      - campaignParticipant
      description: create a campaignParticipant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/campaignParticipant'
        required: true
      responses:
        201:
          description: campaignParticipant create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/campaignParticipant'
      x-codegen-request-body-name: body
  /campaignParticipant/count:
    get:
      tags:
      - campaignParticipant
      description: count campaignParticipant
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /campaignParticipant/id/{id}:
    get:
      tags:
      - campaignParticipant
      description: query campaignParticipant
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/campaignParticipant'
    put:
      tags:
      - campaignParticipant
      description: update campaignParticipant
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/campaignParticipant'
        required: true
      responses:
        200:
          description: campaignParticipant update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/campaignParticipant'
      x-codegen-request-body-name: body
    delete:
      tags:
      - campaignParticipant
      description: delete a campaignParticipant
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: campaignParticipant delete response
          content: {}
  /cashAccount:
    get:
      tags:
      - cashAccount
      description: query cashAccount
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: cashAccount response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/cashAccount'
  /cashAccount/count:
    get:
      tags:
      - cashAccount
      description: count cashAccount
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /cashAccount/id/{id}:
    get:
      tags:
      - cashAccount
      description: query cashAccount
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cashAccount'
  /comment:
    get:
      tags:
      - comment
      description: query comment
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: entityId
        in: query
        required: true
        schema:
          type: string
      - name: entityName
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: comment response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/comment'
    post:
      tags:
      - comment
      description: create a comment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'
        required: true
      responses:
        201:
          description: comment create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'
      x-codegen-request-body-name: body
  /comment/count:
    get:
      tags:
      - comment
      description: count comment
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: entityId
        in: query
        required: true
        schema:
          type: string
      - name: entityName
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /comment/id/{id}:
    get:
      tags:
      - comment
      description: query comment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'
    put:
      tags:
      - comment
      description: update comment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'
        required: true
      responses:
        200:
          description: comment update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'
      x-codegen-request-body-name: body
    delete:
      tags:
      - comment
      description: delete a comment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: comment delete response
          content: {}
  /commercialLanguage:
    get:
      tags:
      - commercialLanguage
      description: query commercialLanguage
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: commercialLanguage response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/commercialLanguage'
  /commercialLanguage/count:
    get:
      tags:
      - commercialLanguage
      description: count commercialLanguage
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /commercialLanguage/id/{id}:
    get:
      tags:
      - commercialLanguage
      description: query commercialLanguage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commercialLanguage'
  /companySize:
    get:
      tags:
      - companySize
      description: query companySize
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: companySize response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - companySize
      description: create a companySize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: companySize create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /companySize/count:
    get:
      tags:
      - companySize
      description: count companySize
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /companySize/id/{id}:
    get:
      tags:
      - companySize
      description: query companySize
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - companySize
      description: update companySize
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: companySize update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - companySize
      description: delete a companySize
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: companySize delete response
          content: {}
  /contact:
    get:
      tags:
      - contact
      description: query contact
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: contact response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/contact'
    post:
      tags:
      - contact
      description: create a contact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contact'
        required: true
      responses:
        201:
          description: contact create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contact'
      x-codegen-request-body-name: body
  /contact/count:
    get:
      tags:
      - contact
      description: count contact
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /contact/id/{id}:
    get:
      tags:
      - contact
      description: query contact
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contact'
    put:
      tags:
      - contact
      description: update contact
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contact'
        required: true
      responses:
        200:
          description: contact update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contact'
      x-codegen-request-body-name: body
    delete:
      tags:
      - contact
      description: delete a contact
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: contact delete response
          content: {}
  /contact/id/{id}/downloadImage:
    get:
      tags:
      - contact
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: scaleWidth
        in: query
        schema:
          type: integer
          format: int32
      - name: scaleHeight
        in: query
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: downloadImage response
          content: {}
  /contact/id/{id}/uploadImage:
    post:
      tags:
      - contact
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: uploadImage response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties: {}
  /costCenter:
    get:
      tags:
      - costCenter
      description: query costCenter
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: costCenter response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/costCenter'
  /costCenter/count:
    get:
      tags:
      - costCenter
      description: count costCenter
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /costCenter/id/{id}:
    get:
      tags:
      - costCenter
      description: query costCenter
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/costCenter'
  /costCenterGroup:
    get:
      tags:
      - costCenterGroup
      description: query costCenterGroup
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: costCenterGroup response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - costCenterGroup
      description: create a costCenterGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: costCenterGroup create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /costCenterGroup/count:
    get:
      tags:
      - costCenterGroup
      description: count costCenterGroup
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /costCenterGroup/id/{id}:
    get:
      tags:
      - costCenterGroup
      description: query costCenterGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - costCenterGroup
      description: update costCenterGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: costCenterGroup update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - costCenterGroup
      description: delete a costCenterGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: costCenterGroup delete response
          content: {}
  /currency:
    get:
      tags:
      - currency
      description: query currency
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: currency response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/currency'
  /currency/companyCurrency:
    get:
      tags:
      - currency
      responses:
        200:
          description: companyCurrency response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/currency'
  /currency/count:
    get:
      tags:
      - currency
      description: count currency
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /currency/id/{id}:
    get:
      tags:
      - currency
      description: query currency
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency'
  /customAttributeDefinition:
    get:
      tags:
      - customAttributeDefinition
      description: query customAttributeDefinition
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: customAttributeDefinition response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customAttributeDefinition'
  /customAttributeDefinition/count:
    get:
      tags:
      - customAttributeDefinition
      description: count customAttributeDefinition
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /customAttributeDefinition/id/{id}:
    get:
      tags:
      - customAttributeDefinition
      description: query customAttributeDefinition
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customAttributeDefinition'
  /customer:
    get:
      tags:
      - customer
      description: query customer
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: customer response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customer'
    post:
      tags:
      - customer
      description: create a customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer'
        required: true
      responses:
        201:
          description: customer create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
      x-codegen-request-body-name: body
  /customer/count:
    get:
      tags:
      - customer
      description: count customer
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /customer/id/{id}:
    get:
      tags:
      - customer
      description: query customer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
    put:
      tags:
      - customer
      description: update customer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer'
        required: true
      responses:
        200:
          description: customer update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
      x-codegen-request-body-name: body
    delete:
      tags:
      - customer
      description: delete a customer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: customer delete response
          content: {}
  /customer/id/{id}/downloadImage:
    get:
      tags:
      - customer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: scaleWidth
        in: query
        schema:
          type: integer
          format: int32
      - name: scaleHeight
        in: query
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: downloadImage response
          content: {}
  /customer/id/{id}/uploadImage:
    post:
      tags:
      - customer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: uploadImage response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties: {}
  /customerCategory:
    get:
      tags:
      - customerCategory
      description: query customerCategory
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: customerCategory response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - customerCategory
      description: create a customerCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: customerCategory create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /customerCategory/count:
    get:
      tags:
      - customerCategory
      description: count customerCategory
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /customerCategory/id/{id}:
    get:
      tags:
      - customerCategory
      description: query customerCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - customerCategory
      description: update customerCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: customerCategory update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - customerCategory
      description: delete a customerCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: customerCategory delete response
          content: {}
  /customerLeadLossReason:
    get:
      tags:
      - customerLeadLossReason
      description: query customerLeadLossReason
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: customerLeadLossReason response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - customerLeadLossReason
      description: create a customerLeadLossReason
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: customerLeadLossReason create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /customerLeadLossReason/count:
    get:
      tags:
      - customerLeadLossReason
      description: count customerLeadLossReason
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /customerLeadLossReason/id/{id}:
    get:
      tags:
      - customerLeadLossReason
      description: query customerLeadLossReason
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - customerLeadLossReason
      description: update customerLeadLossReason
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: customerLeadLossReason update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - customerLeadLossReason
      description: delete a customerLeadLossReason
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: customerLeadLossReason delete response
          content: {}
  /customerTopic:
    get:
      tags:
      - customerTopic
      description: query customerTopic
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: customerTopic response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - customerTopic
      description: create a customerTopic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: customerTopic create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /customerTopic/count:
    get:
      tags:
      - customerTopic
      description: count customerTopic
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /customerTopic/id/{id}:
    get:
      tags:
      - customerTopic
      description: query customerTopic
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - customerTopic
      description: update customerTopic
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: customerTopic update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - customerTopic
      description: delete a customerTopic
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: customerTopic delete response
          content: {}
  /customsTariffNumber:
    get:
      tags:
      - customsTariffNumber
      description: query customsTariffNumber
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: customsTariffNumber response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - customsTariffNumber
      description: create a customsTariffNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: customsTariffNumber create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /customsTariffNumber/count:
    get:
      tags:
      - customsTariffNumber
      description: count customsTariffNumber
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /customsTariffNumber/id/{id}:
    get:
      tags:
      - customsTariffNumber
      description: query customsTariffNumber
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - customsTariffNumber
      description: update customsTariffNumber
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: customsTariffNumber update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - customsTariffNumber
      description: delete a customsTariffNumber
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: customsTariffNumber delete response
          content: {}
  /document:
    get:
      tags:
      - document
      description: query document
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: entityId
        in: query
        required: true
        schema:
          type: string
      - name: entityName
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: document response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/document'
  /document/count:
    get:
      tags:
      - document
      description: count document
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: entityId
        in: query
        required: true
        schema:
          type: string
      - name: entityName
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /document/id/{id}:
    get:
      tags:
      - document
      description: query document
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document'
    put:
      tags:
      - document
      description: update document
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/document'
        required: true
      responses:
        200:
          description: document update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document'
      x-codegen-request-body-name: body
    delete:
      tags:
      - document
      description: delete a document
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: document delete response
          content: {}
  /document/id/{id}/download:
    get:
      tags:
      - document
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: download response
          content: {}
  /document/id/{id}/downloadDocumentVersion:
    get:
      tags:
      - document
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: downloadDocumentVersion response
          content: {}
  /document/id/{id}/upload:
    post:
      tags:
      - document
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: comment
        in: query
        schema:
          type: string
      responses:
        200:
          description: upload response
          content: {}
  /document/upload:
    post:
      tags:
      - document
      parameters:
      - name: entityName
        in: query
        required: true
        schema:
          type: string
      - name: entityId
        in: query
        required: true
        schema:
          type: string
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: description
        in: query
        schema:
          type: string
      responses:
        200:
          description: upload response
          content: {}
  /externalConnection:
    get:
      tags:
      - externalConnection
      description: query externalConnection
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: externalConnection response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/externalConnection'
  /externalConnection/count:
    get:
      tags:
      - externalConnection
      description: count externalConnection
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /externalConnection/id/{id}:
    get:
      tags:
      - externalConnection
      description: query externalConnection
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalConnection'
  /fulfillmentProvider:
    get:
      tags:
      - fulfillmentProvider
      description: query fulfillmentProvider
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: fulfillmentProvider response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/fulfillmentProvider'
  /fulfillmentProvider/count:
    get:
      tags:
      - fulfillmentProvider
      description: count fulfillmentProvider
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /fulfillmentProvider/id/{id}:
    get:
      tags:
      - fulfillmentProvider
      description: query fulfillmentProvider
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fulfillmentProvider'
  /incomingGoods:
    get:
      tags:
      - incomingGoods
      description: query incomingGoods
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: incomingGoods response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/incomingGoods'
    post:
      tags:
      - incomingGoods
      description: create a incomingGoods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/incomingGoods'
        required: true
      responses:
        201:
          description: incomingGoods create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/incomingGoods'
      x-codegen-request-body-name: body
  /incomingGoods/count:
    get:
      tags:
      - incomingGoods
      description: count incomingGoods
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /incomingGoods/id/{id}:
    get:
      tags:
      - incomingGoods
      description: query incomingGoods
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/incomingGoods'
    put:
      tags:
      - incomingGoods
      description: update incomingGoods
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/incomingGoods'
        required: true
      responses:
        200:
          description: incomingGoods update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/incomingGoods'
      x-codegen-request-body-name: body
  /incomingGoods/id/{id}/createCompensationShipment:
    post:
      tags:
      - incomingGoods
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: createCompensationShipment response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/shipment'
      x-codegen-request-body-name: body
  /incomingGoods/id/{id}/createCreditNote:
    post:
      tags:
      - incomingGoods
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: createCreditNote response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/salesInvoice'
      x-codegen-request-body-name: body
  /lead:
    get:
      tags:
      - lead
      description: query lead
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: lead response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/lead'
    post:
      tags:
      - lead
      description: create a lead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lead'
        required: true
      responses:
        201:
          description: lead create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lead'
      x-codegen-request-body-name: body
  /lead/count:
    get:
      tags:
      - lead
      description: count lead
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /lead/id/{id}:
    get:
      tags:
      - lead
      description: query lead
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lead'
    put:
      tags:
      - lead
      description: update lead
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lead'
        required: true
      responses:
        200:
          description: lead update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lead'
      x-codegen-request-body-name: body
    delete:
      tags:
      - lead
      description: delete a lead
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: lead delete response
          content: {}
  /lead/id/{id}/convertLeadToCustomer:
    get:
      tags:
      - lead
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: convertLeadToCustomer response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/customer'
  /lead/id/{id}/downloadImage:
    get:
      tags:
      - lead
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: scaleWidth
        in: query
        schema:
          type: integer
          format: int32
      - name: scaleHeight
        in: query
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: downloadImage response
          content: {}
  /lead/id/{id}/uploadImage:
    post:
      tags:
      - lead
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: uploadImage response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties: {}
  /leadRating:
    get:
      tags:
      - leadRating
      description: query leadRating
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: leadRating response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - leadRating
      description: create a leadRating
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: leadRating create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /leadRating/count:
    get:
      tags:
      - leadRating
      description: count leadRating
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /leadRating/id/{id}:
    get:
      tags:
      - leadRating
      description: query leadRating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - leadRating
      description: update leadRating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: leadRating update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - leadRating
      description: delete a leadRating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: leadRating delete response
          content: {}
  /leadSource:
    get:
      tags:
      - leadSource
      description: query leadSource
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: leadSource response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - leadSource
      description: create a leadSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: leadSource create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /leadSource/count:
    get:
      tags:
      - leadSource
      description: count leadSource
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /leadSource/id/{id}:
    get:
      tags:
      - leadSource
      description: query leadSource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - leadSource
      description: update leadSource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: leadSource update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - leadSource
      description: delete a leadSource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: leadSource delete response
          content: {}
  /ledgerAccount:
    get:
      tags:
      - ledgerAccount
      description: query ledgerAccount
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: ledgerAccount response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/ledgerAccount'
    post:
      tags:
      - ledgerAccount
      description: create a ledgerAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ledgerAccount'
        required: true
      responses:
        201:
          description: ledgerAccount create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ledgerAccount'
      x-codegen-request-body-name: body
  /ledgerAccount/count:
    get:
      tags:
      - ledgerAccount
      description: count ledgerAccount
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /ledgerAccount/id/{id}:
    get:
      tags:
      - ledgerAccount
      description: query ledgerAccount
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ledgerAccount'
    put:
      tags:
      - ledgerAccount
      description: update ledgerAccount
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ledgerAccount'
        required: true
      responses:
        200:
          description: ledgerAccount update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ledgerAccount'
      x-codegen-request-body-name: body
    delete:
      tags:
      - ledgerAccount
      description: delete a ledgerAccount
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: ledgerAccount delete response
          content: {}
  /legalForm:
    get:
      tags:
      - legalForm
      description: query legalForm
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: legalForm response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - legalForm
      description: create a legalForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: legalForm create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /legalForm/count:
    get:
      tags:
      - legalForm
      description: count legalForm
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /legalForm/id/{id}:
    get:
      tags:
      - legalForm
      description: query legalForm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - legalForm
      description: update legalForm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: legalForm update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - legalForm
      description: delete a legalForm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: legalForm delete response
          content: {}
  /manufacturer:
    get:
      tags:
      - manufacturer
      description: query manufacturer
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: manufacturer response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - manufacturer
      description: create a manufacturer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: manufacturer create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /manufacturer/count:
    get:
      tags:
      - manufacturer
      description: count manufacturer
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /manufacturer/id/{id}:
    get:
      tags:
      - manufacturer
      description: query manufacturer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - manufacturer
      description: update manufacturer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: manufacturer update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - manufacturer
      description: delete a manufacturer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: manufacturer delete response
          content: {}
  /meta/queryFilterProperties:
    get:
      tags:
      - meta
      parameters:
      - name: resource
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: queryFilterProperties response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties: {}
  /meta/querySortProperties:
    get:
      tags:
      - meta
      parameters:
      - name: resource
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: querySortProperties response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties: {}
  /meta/resources:
    get:
      tags:
      - meta
      responses:
        200:
          description: resources response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties: {}
  /notification:
    get:
      tags:
      - notification
      description: query notification
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: notification response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/notification'
  /notification/count:
    get:
      tags:
      - notification
      description: count notification
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /notification/id/{id}:
    get:
      tags:
      - notification
      description: query notification
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notification'
  /notification/id/{id}/markRead:
    post:
      tags:
      - notification
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: markRead response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/notification'
      x-codegen-request-body-name: body
  /opportunity:
    get:
      tags:
      - opportunity
      description: query opportunity
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: opportunity response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/opportunity'
    post:
      tags:
      - opportunity
      description: create a opportunity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opportunity'
        required: true
      responses:
        201:
          description: opportunity create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opportunity'
      x-codegen-request-body-name: body
  /opportunity/count:
    get:
      tags:
      - opportunity
      description: count opportunity
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /opportunity/id/{id}:
    get:
      tags:
      - opportunity
      description: query opportunity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opportunity'
    put:
      tags:
      - opportunity
      description: update opportunity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/opportunity'
        required: true
      responses:
        200:
          description: opportunity update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/opportunity'
      x-codegen-request-body-name: body
    delete:
      tags:
      - opportunity
      description: delete a opportunity
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: opportunity delete response
          content: {}
  /opportunityTopic:
    get:
      tags:
      - opportunityTopic
      description: query opportunityTopic
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: opportunityTopic response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - opportunityTopic
      description: create a opportunityTopic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: opportunityTopic create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /opportunityTopic/count:
    get:
      tags:
      - opportunityTopic
      description: count opportunityTopic
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /opportunityTopic/id/{id}:
    get:
      tags:
      - opportunityTopic
      description: query opportunityTopic
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - opportunityTopic
      description: update opportunityTopic
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: opportunityTopic update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - opportunityTopic
      description: delete a opportunityTopic
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: opportunityTopic delete response
          content: {}
  /opportunityWinLossReason:
    get:
      tags:
      - opportunityWinLossReason
      description: query opportunityWinLossReason
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: opportunityWinLossReason response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - opportunityWinLossReason
      description: create a opportunityWinLossReason
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: opportunityWinLossReason create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /opportunityWinLossReason/count:
    get:
      tags:
      - opportunityWinLossReason
      description: count opportunityWinLossReason
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /opportunityWinLossReason/id/{id}:
    get:
      tags:
      - opportunityWinLossReason
      description: query opportunityWinLossReason
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - opportunityWinLossReason
      description: update opportunityWinLossReason
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: opportunityWinLossReason update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - opportunityWinLossReason
      description: delete a opportunityWinLossReason
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: opportunityWinLossReason delete response
          content: {}
  /party:
    get:
      tags:
      - party
      description: query party
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: party response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/party'
    post:
      tags:
      - party
      description: create a party
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/party'
        required: true
      responses:
        201:
          description: party create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/party'
      x-codegen-request-body-name: body
  /party/count:
    get:
      tags:
      - party
      description: count party
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /party/id/{id}:
    get:
      tags:
      - party
      description: query party
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/party'
    put:
      tags:
      - party
      description: update party
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/party'
        required: true
      responses:
        200:
          description: party update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/party'
      x-codegen-request-body-name: body
    delete:
      tags:
      - party
      description: delete a party
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: party delete response
          content: {}
  /party/id/{id}/downloadImage:
    get:
      tags:
      - party
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: scaleWidth
        in: query
        schema:
          type: integer
          format: int32
      - name: scaleHeight
        in: query
        schema:
          type: integer
          format: int32
      - name: imageId
        in: query
        schema:
          type: string
      responses:
        200:
          description: downloadImage response
          content: {}
  /party/id/{id}/uploadImage:
    post:
      tags:
      - party
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: uploadImage response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties: {}
  /partyRating:
    get:
      tags:
      - partyRating
      description: query partyRating
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: partyRating response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - partyRating
      description: create a partyRating
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: partyRating create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /partyRating/count:
    get:
      tags:
      - partyRating
      description: count partyRating
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /partyRating/id/{id}:
    get:
      tags:
      - partyRating
      description: query partyRating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - partyRating
      description: update partyRating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: partyRating update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - partyRating
      description: delete a partyRating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: partyRating delete response
          content: {}
  /paymentMethod:
    get:
      tags:
      - paymentMethod
      description: query paymentMethod
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: paymentMethod response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/paymentMethod'
    post:
      tags:
      - paymentMethod
      description: create a paymentMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentMethod'
        required: true
      responses:
        201:
          description: paymentMethod create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentMethod'
      x-codegen-request-body-name: body
  /paymentMethod/count:
    get:
      tags:
      - paymentMethod
      description: count paymentMethod
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /paymentMethod/id/{id}:
    get:
      tags:
      - paymentMethod
      description: query paymentMethod
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentMethod'
    put:
      tags:
      - paymentMethod
      description: update paymentMethod
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentMethod'
        required: true
      responses:
        200:
          description: paymentMethod update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentMethod'
      x-codegen-request-body-name: body
    delete:
      tags:
      - paymentMethod
      description: delete a paymentMethod
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: paymentMethod delete response
          content: {}
  /personalAccountingCode:
    get:
      tags:
      - personalAccountingCode
      description: query personalAccountingCode
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: personalAccountingCode response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - personalAccountingCode
      description: create a personalAccountingCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: personalAccountingCode create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /personalAccountingCode/count:
    get:
      tags:
      - personalAccountingCode
      description: count personalAccountingCode
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /personalAccountingCode/id/{id}:
    get:
      tags:
      - personalAccountingCode
      description: query personalAccountingCode
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - personalAccountingCode
      description: update personalAccountingCode
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: personalAccountingCode update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - personalAccountingCode
      description: delete a personalAccountingCode
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: personalAccountingCode delete response
          content: {}
  /productionOrder:
    get:
      tags:
      - productionOrder
      description: query productionOrder
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: productionOrder response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/productionOrder'
    post:
      tags:
      - productionOrder
      description: create a productionOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productionOrder'
        required: true
      responses:
        201:
          description: productionOrder create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productionOrder'
      x-codegen-request-body-name: body
  /productionOrder/count:
    get:
      tags:
      - productionOrder
      description: count productionOrder
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /productionOrder/fastProductionBooking:
    post:
      tags:
      - productionOrder
      requestBody:
        content:
          application/json:
            schema:
              required:
              - productionOrderNumber
              - quantity
              type: object
              properties:
                quantity:
                  type: string
                  format: number
                productionOrderNumber:
                  type: string
        required: true
      responses:
        200:
          description: fastProductionBooking response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/fastProductionBookingResult'
      x-codegen-request-body-name: body
  /productionOrder/id/{id}:
    get:
      tags:
      - productionOrder
      description: query productionOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productionOrder'
    put:
      tags:
      - productionOrder
      description: update productionOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productionOrder'
        required: true
      responses:
        200:
          description: productionOrder update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productionOrder'
      x-codegen-request-body-name: body
    delete:
      tags:
      - productionOrder
      description: delete a productionOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: productionOrder delete response
          content: {}
  /productionOrder/id/{id}/downloadLatestProductionOrderPdf:
    get:
      tags:
      - productionOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: downloadLatestProductionOrderPdf response
          content: {}
  /purchaseInvoice:
    get:
      tags:
      - purchaseInvoice
      description: query purchaseInvoice
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: purchaseInvoice response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/purchaseInvoice'
    post:
      tags:
      - purchaseInvoice
      description: create a purchaseInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purchaseInvoice'
        required: true
      responses:
        201:
          description: purchaseInvoice create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/purchaseInvoice'
      x-codegen-request-body-name: body
  /purchaseInvoice/count:
    get:
      tags:
      - purchaseInvoice
      description: count purchaseInvoice
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /purchaseInvoice/id/{id}:
    get:
      tags:
      - purchaseInvoice
      description: query purchaseInvoice
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/purchaseInvoice'
    put:
      tags:
      - purchaseInvoice
      description: update purchaseInvoice
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purchaseInvoice'
        required: true
      responses:
        200:
          description: purchaseInvoice update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/purchaseInvoice'
      x-codegen-request-body-name: body
  /purchaseOrder:
    get:
      tags:
      - purchaseOrder
      description: query purchaseOrder
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: purchaseOrder response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/purchaseOrder'
    post:
      tags:
      - purchaseOrder
      description: create a purchaseOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purchaseOrder'
        required: true
      responses:
        201:
          description: purchaseOrder create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/purchaseOrder'
      x-codegen-request-body-name: body
  /purchaseOrder/count:
    get:
      tags:
      - purchaseOrder
      description: count purchaseOrder
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /purchaseOrder/id/{id}:
    get:
      tags:
      - purchaseOrder
      description: query purchaseOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/purchaseOrder'
    put:
      tags:
      - purchaseOrder
      description: update purchaseOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purchaseOrder'
        required: true
      responses:
        200:
          description: purchaseOrder update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/purchaseOrder'
      x-codegen-request-body-name: body
  /purchaseOrder/id/{id}/createIncomingGoods:
    post:
      tags:
      - purchaseOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: createIncomingGoods response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/incomingGoods'
      x-codegen-request-body-name: body
  /purchaseOrder/id/{id}/createPurchaseInvoice:
    post:
      tags:
      - purchaseOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: createPurchaseInvoice response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/purchaseInvoice'
      x-codegen-request-body-name: body
  /purchaseOrder/id/{id}/processDropshipping:
    post:
      tags:
      - purchaseOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: processDropshipping response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/purchaseOrder'
      x-codegen-request-body-name: body
  /purchaseOrderRequest:
    get:
      tags:
      - purchaseOrderRequest
      description: query purchaseOrderRequest
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: purchaseOrderRequest response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/purchaseOrderRequest'
    post:
      tags:
      - purchaseOrderRequest
      description: create a purchaseOrderRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purchaseOrderRequest'
        required: true
      responses:
        201:
          description: purchaseOrderRequest create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/purchaseOrderRequest'
      x-codegen-request-body-name: body
  /purchaseOrderRequest/count:
    get:
      tags:
      - purchaseOrderRequest
      description: count purchaseOrderRequest
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /purchaseOrderRequest/id/{id}:
    get:
      tags:
      - purchaseOrderRequest
      description: query purchaseOrderRequest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/purchaseOrderRequest'
    put:
      tags:
      - purchaseOrderRequest
      description: update purchaseOrderRequest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/purchaseOrderRequest'
        required: true
      responses:
        200:
          description: purchaseOrderRequest update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/purchaseOrderRequest'
      x-codegen-request-body-name: body
    delete:
      tags:
      - purchaseOrderRequest
      description: delete a purchaseOrderRequest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: purchaseOrderRequest delete response
          content: {}
  /purchaseOrderRequest/id/{id}/createBlanketPurchaseOrder:
    post:
      tags:
      - purchaseOrderRequest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - offerItemId
              - orderedQuantity
              type: object
              properties:
                offerItemId:
                  type: integer
                  format: int32
                orderedQuantity:
                  type: string
                  format: number
        required: true
      responses:
        200:
          description: createBlanketPurchaseOrder response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
      x-codegen-request-body-name: body
  /purchaseOrderRequest/id/{id}/createPurchaseOrder:
    post:
      tags:
      - purchaseOrderRequest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - offerId
              - offerItemToUpdateSupplierInformation
              type: object
              properties:
                offerId:
                  type: integer
                  format: int32
                salesOrderId:
                  type: integer
                  format: int32
                offerItemToUpdateSupplierInformation:
                  type: array
                  items:
                    $ref: '#/components/schemas/purchaseOrderRequestOfferItemInformation'
        required: true
      responses:
        200:
          description: createPurchaseOrder response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/purchaseOrder'
      x-codegen-request-body-name: body
  /quotation:
    get:
      tags:
      - quotation
      description: query quotation
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: quotation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/quotation'
    post:
      tags:
      - quotation
      description: create a quotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quotation'
        required: true
      responses:
        201:
          description: quotation create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quotation'
      x-codegen-request-body-name: body
  /quotation/count:
    get:
      tags:
      - quotation
      description: count quotation
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /quotation/id/{id}:
    get:
      tags:
      - quotation
      description: query quotation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quotation'
    put:
      tags:
      - quotation
      description: update quotation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quotation'
        required: true
      responses:
        200:
          description: quotation update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quotation'
      x-codegen-request-body-name: body
    delete:
      tags:
      - quotation
      description: delete a quotation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: quotation delete response
          content: {}
  /quotation/id/{id}/createNewVersion:
    post:
      tags:
      - quotation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: createNewVersion response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/quotation'
      x-codegen-request-body-name: body
  /quotation/id/{id}/createQuotationPdf:
    post:
      tags:
      - quotation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: createQuotationPdf response
          content: {}
      x-codegen-request-body-name: body
  /quotation/id/{id}/downloadLatestQuotationPdf:
    get:
      tags:
      - quotation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: downloadLatestQuotationPdf response
          content: {}
  /remotePrintJob:
    get:
      tags:
      - remotePrintJob
      description: query remotePrintJob
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: remotePrintJob response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/remotePrintJob'
    post:
      tags:
      - remotePrintJob
      description: create a remotePrintJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/remotePrintJob'
        required: true
      responses:
        201:
          description: remotePrintJob create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/remotePrintJob'
      x-codegen-request-body-name: body
  /remotePrintJob/count:
    get:
      tags:
      - remotePrintJob
      description: count remotePrintJob
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /remotePrintJob/createPrintJobWithDocument:
    post:
      tags:
      - remotePrintJob
      parameters:
      - name: weclappOsId
        in: query
        required: true
        schema:
          type: string
      - name: printerName
        in: query
        required: true
        schema:
          type: string
      - name: quantity
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: documentName
        in: query
        required: true
        schema:
          type: string
      - name: documentDescription
        in: query
        schema:
          type: string
      responses:
        200:
          description: createPrintJobWithDocument response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/remotePrintJob'
  /remotePrintJob/id/{id}:
    get:
      tags:
      - remotePrintJob
      description: query remotePrintJob
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/remotePrintJob'
    put:
      tags:
      - remotePrintJob
      description: update remotePrintJob
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/remotePrintJob'
        required: true
      responses:
        200:
          description: remotePrintJob update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/remotePrintJob'
      x-codegen-request-body-name: body
    delete:
      tags:
      - remotePrintJob
      description: delete a remotePrintJob
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: remotePrintJob delete response
          content: {}
  /salesChannel/activeSalesChannels:
    get:
      tags:
      - salesChannel
      responses:
        200:
          description: activeSalesChannels response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/salesChannel'
  /salesInvoice:
    get:
      tags:
      - salesInvoice
      description: query salesInvoice
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: salesInvoice response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/salesInvoice'
    post:
      tags:
      - salesInvoice
      description: create a salesInvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/salesInvoice'
        required: true
      responses:
        201:
          description: salesInvoice create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/salesInvoice'
      x-codegen-request-body-name: body
  /salesInvoice/count:
    get:
      tags:
      - salesInvoice
      description: count salesInvoice
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /salesInvoice/id/{id}:
    get:
      tags:
      - salesInvoice
      description: query salesInvoice
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/salesInvoice'
    put:
      tags:
      - salesInvoice
      description: update salesInvoice
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/salesInvoice'
        required: true
      responses:
        200:
          description: salesInvoice update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/salesInvoice'
      x-codegen-request-body-name: body
    delete:
      tags:
      - salesInvoice
      description: delete a salesInvoice
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: salesInvoice delete response
          content: {}
  /salesInvoice/id/{id}/createCreditNote:
    post:
      tags:
      - salesInvoice
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                itemIds:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        200:
          description: createCreditNote response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/salesInvoice'
      x-codegen-request-body-name: body
  /salesInvoice/id/{id}/downloadLatestSalesInvoicePdf:
    get:
      tags:
      - salesInvoice
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: downloadLatestSalesInvoicePdf response
          content: {}
  /salesOrder:
    get:
      tags:
      - salesOrder
      description: query salesOrder
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: salesOrder response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/salesOrder'
    post:
      tags:
      - salesOrder
      description: create a salesOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/salesOrder'
        required: true
      responses:
        201:
          description: salesOrder create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/salesOrder'
      x-codegen-request-body-name: body
  /salesOrder/count:
    get:
      tags:
      - salesOrder
      description: count salesOrder
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /salesOrder/defaultValuesForCreate:
    get:
      tags:
      - salesOrder
      parameters:
      - name: customerId
        in: query
        required: true
        schema:
          type: string
      - name: responsibleUserId
        in: query
        schema:
          type: string
      responses:
        200:
          description: defaultValuesForCreate response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/salesOrder'
  /salesOrder/id/{id}:
    get:
      tags:
      - salesOrder
      description: query salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/salesOrder'
    put:
      tags:
      - salesOrder
      description: update salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/salesOrder'
        required: true
      responses:
        200:
          description: salesOrder update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/salesOrder'
      x-codegen-request-body-name: body
  /salesOrder/id/{id}/cancelOrManuallyClose:
    post:
      tags:
      - salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: cancelOrManuallyClose response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/salesOrder'
      x-codegen-request-body-name: body
  /salesOrder/id/{id}/createAdvancePaymentRequest:
    post:
      tags:
      - salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: createAdvancePaymentRequest response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/salesInvoice'
      x-codegen-request-body-name: body
  /salesOrder/id/{id}/createCustomerReturn:
    post:
      tags:
      - salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: createCustomerReturn response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/incomingGoods'
      x-codegen-request-body-name: body
  /salesOrder/id/{id}/createDropshipping:
    post:
      tags:
      - salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - supplierId
              type: object
              properties:
                supplierId:
                  type: string
        required: true
      responses:
        200:
          description: createDropshipping response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/purchaseOrder'
      x-codegen-request-body-name: body
  /salesOrder/id/{id}/createPartPaymentInvoice:
    post:
      tags:
      - salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: createPartPaymentInvoice response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/salesInvoice'
      x-codegen-request-body-name: body
  /salesOrder/id/{id}/createPrepaymentFinalInvoice:
    post:
      tags:
      - salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: createPrepaymentFinalInvoice response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/salesInvoice'
      x-codegen-request-body-name: body
  /salesOrder/id/{id}/createPurchaseOrder:
    post:
      tags:
      - salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - supplierId
              type: object
              properties:
                supplierId:
                  type: string
                warehouseId:
                  type: string
        required: true
      responses:
        200:
          description: createPurchaseOrder response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/purchaseOrder'
      x-codegen-request-body-name: body
  /salesOrder/id/{id}/createSalesInvoice:
    post:
      tags:
      - salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: createSalesInvoice response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/salesInvoice'
      x-codegen-request-body-name: body
  /salesOrder/id/{id}/createShipment:
    post:
      tags:
      - salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: createShipment response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/shipment'
      x-codegen-request-body-name: body
  /salesOrder/id/{id}/downloadLatestOrderConfirmationPdf:
    get:
      tags:
      - salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: downloadLatestOrderConfirmationPdf response
          content: {}
  /salesOrder/id/{id}/manuallyClose:
    post:
      tags:
      - salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: manuallyClose response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/salesOrder'
      x-codegen-request-body-name: body
  /salesOrder/id/{id}/shipOrderForExternalFulfillment:
    post:
      tags:
      - salesOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: shipOrderForExternalFulfillment response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/salesOrder'
      x-codegen-request-body-name: body
  /salesStage:
    get:
      tags:
      - salesStage
      description: query salesStage
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: salesStage response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/salesStage'
    post:
      tags:
      - salesStage
      description: create a salesStage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/salesStage'
        required: true
      responses:
        201:
          description: salesStage create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/salesStage'
      x-codegen-request-body-name: body
  /salesStage/count:
    get:
      tags:
      - salesStage
      description: count salesStage
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /salesStage/id/{id}:
    get:
      tags:
      - salesStage
      description: query salesStage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/salesStage'
    put:
      tags:
      - salesStage
      description: update salesStage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/salesStage'
        required: true
      responses:
        200:
          description: salesStage update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/salesStage'
      x-codegen-request-body-name: body
    delete:
      tags:
      - salesStage
      description: delete a salesStage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: salesStage delete response
          content: {}
  /sector:
    get:
      tags:
      - sector
      description: query sector
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: sector response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - sector
      description: create a sector
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: sector create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /sector/count:
    get:
      tags:
      - sector
      description: count sector
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /sector/id/{id}:
    get:
      tags:
      - sector
      description: query sector
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - sector
      description: update sector
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: sector update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - sector
      description: delete a sector
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: sector delete response
          content: {}
  /serialNumber:
    get:
      tags:
      - serialNumber
      description: query serialNumber
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: serialNumber response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/serialNumber'
  /serialNumber/count:
    get:
      tags:
      - serialNumber
      description: count serialNumber
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /serialNumber/id/{id}:
    get:
      tags:
      - serialNumber
      description: query serialNumber
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serialNumber'
  /shipment:
    get:
      tags:
      - shipment
      description: query shipment
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: shipment response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/shipment'
    post:
      tags:
      - shipment
      description: create a shipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shipment'
        required: true
      responses:
        201:
          description: shipment create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipment'
      x-codegen-request-body-name: body
  /shipment/count:
    get:
      tags:
      - shipment
      description: count shipment
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /shipment/id/{id}:
    get:
      tags:
      - shipment
      description: query shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipment'
    put:
      tags:
      - shipment
      description: update shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shipment'
        required: true
      responses:
        200:
          description: shipment update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipment'
      x-codegen-request-body-name: body
  /shipment/id/{id}/createSalesInvoice:
    post:
      tags:
      - shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: createSalesInvoice response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/salesInvoice'
      x-codegen-request-body-name: body
  /shipment/id/{id}/createShippingLabelPdf:
    post:
      tags:
      - shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: description
        in: query
        schema:
          type: string
      responses:
        200:
          description: createShippingLabelPdf response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties: {}
  /shipment/id/{id}/downloadLatestDeliveryNotePdf:
    get:
      tags:
      - shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: downloadLatestDeliveryNotePdf response
          content: {}
  /shipment/id/{id}/downloadLatestPickingListPdf:
    get:
      tags:
      - shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: downloadLatestPickingListPdf response
          content: {}
  /shipment/id/{id}/downloadLatestShippingLabelPdf:
    get:
      tags:
      - shipment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: downloadLatestShippingLabelPdf response
          content: {}
  /shipmentMethod:
    get:
      tags:
      - shipmentMethod
      description: query shipmentMethod
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: shipmentMethod response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/shipmentMethod'
    post:
      tags:
      - shipmentMethod
      description: create a shipmentMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shipmentMethod'
        required: true
      responses:
        201:
          description: shipmentMethod create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentMethod'
      x-codegen-request-body-name: body
  /shipmentMethod/count:
    get:
      tags:
      - shipmentMethod
      description: count shipmentMethod
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /shipmentMethod/id/{id}:
    get:
      tags:
      - shipmentMethod
      description: query shipmentMethod
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentMethod'
    put:
      tags:
      - shipmentMethod
      description: update shipmentMethod
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shipmentMethod'
        required: true
      responses:
        200:
          description: shipmentMethod update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentMethod'
      x-codegen-request-body-name: body
    delete:
      tags:
      - shipmentMethod
      description: delete a shipmentMethod
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: shipmentMethod delete response
          content: {}
  /shipmentReturnAssessment:
    get:
      tags:
      - shipmentReturnAssessment
      description: query shipmentReturnAssessment
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: shipmentReturnAssessment response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/shipmentReturnDescription'
    post:
      tags:
      - shipmentReturnAssessment
      description: create a shipmentReturnAssessment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shipmentReturnDescription'
        required: true
      responses:
        201:
          description: shipmentReturnAssessment create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentReturnDescription'
      x-codegen-request-body-name: body
  /shipmentReturnAssessment/count:
    get:
      tags:
      - shipmentReturnAssessment
      description: count shipmentReturnAssessment
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /shipmentReturnAssessment/id/{id}:
    get:
      tags:
      - shipmentReturnAssessment
      description: query shipmentReturnAssessment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentReturnDescription'
    put:
      tags:
      - shipmentReturnAssessment
      description: update shipmentReturnAssessment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shipmentReturnDescription'
        required: true
      responses:
        200:
          description: shipmentReturnAssessment update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentReturnDescription'
      x-codegen-request-body-name: body
    delete:
      tags:
      - shipmentReturnAssessment
      description: delete a shipmentReturnAssessment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: shipmentReturnAssessment delete response
          content: {}
  /shipmentReturnError:
    get:
      tags:
      - shipmentReturnError
      description: query shipmentReturnError
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: shipmentReturnError response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/shipmentReturnDescription'
    post:
      tags:
      - shipmentReturnError
      description: create a shipmentReturnError
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shipmentReturnDescription'
        required: true
      responses:
        201:
          description: shipmentReturnError create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentReturnDescription'
      x-codegen-request-body-name: body
  /shipmentReturnError/count:
    get:
      tags:
      - shipmentReturnError
      description: count shipmentReturnError
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /shipmentReturnError/id/{id}:
    get:
      tags:
      - shipmentReturnError
      description: query shipmentReturnError
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentReturnDescription'
    put:
      tags:
      - shipmentReturnError
      description: update shipmentReturnError
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shipmentReturnDescription'
        required: true
      responses:
        200:
          description: shipmentReturnError update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentReturnDescription'
      x-codegen-request-body-name: body
    delete:
      tags:
      - shipmentReturnError
      description: delete a shipmentReturnError
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: shipmentReturnError delete response
          content: {}
  /shipmentReturnReason:
    get:
      tags:
      - shipmentReturnReason
      description: query shipmentReturnReason
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: shipmentReturnReason response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/shipmentReturnDescription'
    post:
      tags:
      - shipmentReturnReason
      description: create a shipmentReturnReason
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shipmentReturnDescription'
        required: true
      responses:
        201:
          description: shipmentReturnReason create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentReturnDescription'
      x-codegen-request-body-name: body
  /shipmentReturnReason/count:
    get:
      tags:
      - shipmentReturnReason
      description: count shipmentReturnReason
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /shipmentReturnReason/id/{id}:
    get:
      tags:
      - shipmentReturnReason
      description: query shipmentReturnReason
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentReturnDescription'
    put:
      tags:
      - shipmentReturnReason
      description: update shipmentReturnReason
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shipmentReturnDescription'
        required: true
      responses:
        200:
          description: shipmentReturnReason update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentReturnDescription'
      x-codegen-request-body-name: body
    delete:
      tags:
      - shipmentReturnReason
      description: delete a shipmentReturnReason
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: shipmentReturnReason delete response
          content: {}
  /shipmentReturnRectification:
    get:
      tags:
      - shipmentReturnRectification
      description: query shipmentReturnRectification
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: shipmentReturnRectification response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/shipmentReturnDescription'
    post:
      tags:
      - shipmentReturnRectification
      description: create a shipmentReturnRectification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shipmentReturnDescription'
        required: true
      responses:
        201:
          description: shipmentReturnRectification create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentReturnDescription'
      x-codegen-request-body-name: body
  /shipmentReturnRectification/count:
    get:
      tags:
      - shipmentReturnRectification
      description: count shipmentReturnRectification
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /shipmentReturnRectification/id/{id}:
    get:
      tags:
      - shipmentReturnRectification
      description: query shipmentReturnRectification
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentReturnDescription'
    put:
      tags:
      - shipmentReturnRectification
      description: update shipmentReturnRectification
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shipmentReturnDescription'
        required: true
      responses:
        200:
          description: shipmentReturnRectification update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shipmentReturnDescription'
      x-codegen-request-body-name: body
    delete:
      tags:
      - shipmentReturnRectification
      description: delete a shipmentReturnRectification
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: shipmentReturnRectification delete response
          content: {}
  /shippingCarrier:
    get:
      tags:
      - shippingCarrier
      description: query shippingCarrier
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: shippingCarrier response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/shippingCarrier'
    post:
      tags:
      - shippingCarrier
      description: create a shippingCarrier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shippingCarrier'
        required: true
      responses:
        201:
          description: shippingCarrier create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shippingCarrier'
      x-codegen-request-body-name: body
  /shippingCarrier/count:
    get:
      tags:
      - shippingCarrier
      description: count shippingCarrier
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /shippingCarrier/id/{id}:
    get:
      tags:
      - shippingCarrier
      description: query shippingCarrier
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shippingCarrier'
    put:
      tags:
      - shippingCarrier
      description: update shippingCarrier
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shippingCarrier'
        required: true
      responses:
        200:
          description: shippingCarrier update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shippingCarrier'
      x-codegen-request-body-name: body
    delete:
      tags:
      - shippingCarrier
      description: delete a shippingCarrier
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: shippingCarrier delete response
          content: {}
  /supplier:
    get:
      tags:
      - supplier
      description: query supplier
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: supplier response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/supplier'
    post:
      tags:
      - supplier
      description: create a supplier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/supplier'
        required: true
      responses:
        201:
          description: supplier create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/supplier'
      x-codegen-request-body-name: body
  /supplier/count:
    get:
      tags:
      - supplier
      description: count supplier
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /supplier/id/{id}:
    get:
      tags:
      - supplier
      description: query supplier
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/supplier'
    put:
      tags:
      - supplier
      description: update supplier
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/supplier'
        required: true
      responses:
        200:
          description: supplier update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/supplier'
      x-codegen-request-body-name: body
    delete:
      tags:
      - supplier
      description: delete a supplier
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: supplier delete response
          content: {}
  /supplier/id/{id}/downloadImage:
    get:
      tags:
      - supplier
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: scaleWidth
        in: query
        schema:
          type: integer
          format: int32
      - name: scaleHeight
        in: query
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: downloadImage response
          content: {}
  /supplier/id/{id}/uploadImage:
    post:
      tags:
      - supplier
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: uploadImage response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties: {}
  /tax:
    get:
      tags:
      - tax
      description: query tax
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: tax response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/tax'
    post:
      tags:
      - tax
      description: create a tax
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tax'
        required: true
      responses:
        201:
          description: tax create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tax'
      x-codegen-request-body-name: body
  /tax/count:
    get:
      tags:
      - tax
      description: count tax
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /tax/findSalesTax:
    get:
      tags:
      - tax
      parameters:
      - name: dispatchCountryCode
        in: query
        required: true
        schema:
          type: string
      - name: recipientCountryCode
        in: query
        schema:
          type: string
      - name: taxRateType
        in: query
        schema:
          type: string
      - name: partyType
        in: query
        schema:
          type: string
      - name: date
        in: query
        schema:
          type: integer
          format: timestamp
      responses:
        200:
          description: findSalesTax response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/tax'
  /tax/id/{id}:
    get:
      tags:
      - tax
      description: query tax
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tax'
    put:
      tags:
      - tax
      description: update tax
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tax'
        required: true
      responses:
        200:
          description: tax update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tax'
      x-codegen-request-body-name: body
    delete:
      tags:
      - tax
      description: delete a tax
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: tax delete response
          content: {}
  /termOfPayment:
    get:
      tags:
      - termOfPayment
      description: query termOfPayment
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: termOfPayment response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/termOfPayment'
    post:
      tags:
      - termOfPayment
      description: create a termOfPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/termOfPayment'
        required: true
      responses:
        201:
          description: termOfPayment create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/termOfPayment'
      x-codegen-request-body-name: body
  /termOfPayment/count:
    get:
      tags:
      - termOfPayment
      description: count termOfPayment
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /termOfPayment/id/{id}:
    get:
      tags:
      - termOfPayment
      description: query termOfPayment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/termOfPayment'
    put:
      tags:
      - termOfPayment
      description: update termOfPayment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/termOfPayment'
        required: true
      responses:
        200:
          description: termOfPayment update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/termOfPayment'
      x-codegen-request-body-name: body
    delete:
      tags:
      - termOfPayment
      description: delete a termOfPayment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: termOfPayment delete response
          content: {}
  /title:
    get:
      tags:
      - title
      description: query title
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: title response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/customValue'
    post:
      tags:
      - title
      description: create a title
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        201:
          description: title create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
  /title/count:
    get:
      tags:
      - title
      description: count title
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /title/id/{id}:
    get:
      tags:
      - title
      description: query title
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
    put:
      tags:
      - title
      description: update title
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customValue'
        required: true
      responses:
        200:
          description: title update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customValue'
      x-codegen-request-body-name: body
    delete:
      tags:
      - title
      description: delete a title
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: title delete response
          content: {}
  /unit:
    get:
      tags:
      - unit
      description: query unit
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: unit response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/unit'
    post:
      tags:
      - unit
      description: create a unit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/unit'
        required: true
      responses:
        201:
          description: unit create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unit'
      x-codegen-request-body-name: body
  /unit/count:
    get:
      tags:
      - unit
      description: count unit
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /unit/id/{id}:
    get:
      tags:
      - unit
      description: query unit
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unit'
    put:
      tags:
      - unit
      description: update unit
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/unit'
        required: true
      responses:
        200:
          description: unit update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unit'
      x-codegen-request-body-name: body
    delete:
      tags:
      - unit
      description: delete a unit
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: unit delete response
          content: {}
  /user:
    get:
      tags:
      - user
      description: query user
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: user response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/user'
  /user/count:
    get:
      tags:
      - user
      description: count user
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /user/currentUser:
    get:
      tags:
      - user
      responses:
        200:
          description: currentUser response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/user'
  /user/id/{id}:
    get:
      tags:
      - user
      description: query user
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
  /user/id/{id}/userImage:
    get:
      tags:
      - user
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: scaleWidth
        in: query
        schema:
          type: integer
          format: int32
      - name: scaleHeight
        in: query
        schema:
          type: integer
          format: int32
      - name: imageId
        in: query
        schema:
          type: string
      responses:
        200:
          description: userImage response
          content: {}
  /user/id/{id}/userImageThumbnail:
    get:
      tags:
      - user
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: scaleWidth
        in: query
        schema:
          type: integer
          format: int32
      - name: scaleHeight
        in: query
        schema:
          type: integer
          format: int32
      - name: imageId
        in: query
        schema:
          type: string
      responses:
        200:
          description: userImageThumbnail response
          content: {}
  /variantArticle:
    get:
      tags:
      - variantArticle
      description: query variantArticle
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: variantArticle response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/variantArticle'
    post:
      tags:
      - variantArticle
      description: create a variantArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variantArticle'
        required: true
      responses:
        201:
          description: variantArticle create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variantArticle'
      x-codegen-request-body-name: body
  /variantArticle/count:
    get:
      tags:
      - variantArticle
      description: count variantArticle
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /variantArticle/id/{id}:
    get:
      tags:
      - variantArticle
      description: query variantArticle
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variantArticle'
    put:
      tags:
      - variantArticle
      description: update variantArticle
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variantArticle'
        required: true
      responses:
        200:
          description: variantArticle update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variantArticle'
      x-codegen-request-body-name: body
    delete:
      tags:
      - variantArticle
      description: delete a variantArticle
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: variantArticle delete response
          content: {}
  /variantArticleAttribute:
    get:
      tags:
      - variantArticleAttribute
      description: query variantArticleAttribute
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: variantArticleAttribute response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/variantArticleAttribute'
    post:
      tags:
      - variantArticleAttribute
      description: create a variantArticleAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variantArticleAttribute'
        required: true
      responses:
        201:
          description: variantArticleAttribute create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variantArticleAttribute'
      x-codegen-request-body-name: body
  /variantArticleAttribute/count:
    get:
      tags:
      - variantArticleAttribute
      description: count variantArticleAttribute
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /variantArticleAttribute/id/{id}:
    get:
      tags:
      - variantArticleAttribute
      description: query variantArticleAttribute
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variantArticleAttribute'
    put:
      tags:
      - variantArticleAttribute
      description: update variantArticleAttribute
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variantArticleAttribute'
        required: true
      responses:
        200:
          description: variantArticleAttribute update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variantArticleAttribute'
      x-codegen-request-body-name: body
    delete:
      tags:
      - variantArticleAttribute
      description: delete a variantArticleAttribute
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: variantArticleAttribute delete response
          content: {}
  /variantArticleVariant:
    get:
      tags:
      - variantArticleVariant
      description: query variantArticleVariant
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: variantArticleVariant response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/variantArticleVariant'
  /variantArticleVariant/count:
    get:
      tags:
      - variantArticleVariant
      description: count variantArticleVariant
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /variantArticleVariant/id/{id}:
    get:
      tags:
      - variantArticleVariant
      description: query variantArticleVariant
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/variantArticleVariant'
  /warehouse:
    get:
      tags:
      - warehouse
      description: query warehouse
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: warehouse response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/warehouse'
  /warehouse/count:
    get:
      tags:
      - warehouse
      description: count warehouse
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /warehouse/id/{id}:
    get:
      tags:
      - warehouse
      description: query warehouse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/warehouse'
  /warehouseLevel:
    get:
      tags:
      - warehouseLevel
      description: query warehouseLevel
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: warehouseLevel response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/warehouseLevel'
  /warehouseLevel/count:
    get:
      tags:
      - warehouseLevel
      description: count warehouseLevel
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /warehouseLevel/id/{id}:
    get:
      tags:
      - warehouseLevel
      description: query warehouseLevel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/warehouseLevel'
  /warehouseStock:
    get:
      tags:
      - warehouseStock
      description: query warehouseStock
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: warehouseStock response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/warehouseStock'
  /warehouseStock/count:
    get:
      tags:
      - warehouseStock
      description: count warehouseStock
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /warehouseStock/id/{id}:
    get:
      tags:
      - warehouseStock
      description: query warehouseStock
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/warehouseStock'
  /warehouseStockMovement:
    get:
      tags:
      - warehouseStockMovement
      description: query warehouseStockMovement
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: warehouseStockMovement response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/warehouseStockMovement'
  /warehouseStockMovement/bookIncomingMovement:
    post:
      tags:
      - warehouseStockMovement
      requestBody:
        content:
          application/json:
            schema:
              required:
              - articleId
              - quantity
              - targetWarehouseLevelId
              type: object
              properties:
                articleId:
                  type: string
                quantity:
                  type: string
                  format: number
                articleValuationPrice:
                  type: string
                  format: number
                targetWarehouseLevelId:
                  type: string
                movementNote:
                  type: string
                batchNumber:
                  type: string
                batchNumberExpirationDate:
                  type: integer
                  format: timestamp
                serialNumbers:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        200:
          description: bookIncomingMovement response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties: {}
      x-codegen-request-body-name: body
  /warehouseStockMovement/bookOutgoingMovement:
    post:
      tags:
      - warehouseStockMovement
      requestBody:
        content:
          application/json:
            schema:
              required:
              - articleId
              - quantity
              - sourceWarehouseLevelId
              type: object
              properties:
                articleId:
                  type: string
                quantity:
                  type: string
                  format: number
                sourceWarehouseLevelId:
                  type: string
                movementNote:
                  type: string
                batchNumber:
                  type: string
                serialNumbers:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        200:
          description: bookOutgoingMovement response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties: {}
      x-codegen-request-body-name: body
  /warehouseStockMovement/bookTransferMovement:
    post:
      tags:
      - warehouseStockMovement
      requestBody:
        content:
          application/json:
            schema:
              required:
              - articleId
              - quantity
              - sourceWarehouseLevelId
              - targetWarehouseLevelId
              type: object
              properties:
                articleId:
                  type: string
                quantity:
                  type: string
                  format: number
                sourceWarehouseLevelId:
                  type: string
                targetWarehouseLevelId:
                  type: string
                movementNote:
                  type: string
                batchNumber:
                  type: string
                serialNumbers:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        200:
          description: bookTransferMovement response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties: {}
      x-codegen-request-body-name: body
  /warehouseStockMovement/count:
    get:
      tags:
      - warehouseStockMovement
      description: count warehouseStockMovement
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /warehouseStockMovement/id/{id}:
    get:
      tags:
      - warehouseStockMovement
      description: query warehouseStockMovement
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/warehouseStockMovement'
  /webhook:
    get:
      tags:
      - webhook
      description: query webhook
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: webhook response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/webhook'
    post:
      tags:
      - webhook
      description: create a webhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook'
        required: true
      responses:
        201:
          description: webhook create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
      x-codegen-request-body-name: body
  /webhook/count:
    get:
      tags:
      - webhook
      description: count webhook
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /webhook/id/{id}:
    get:
      tags:
      - webhook
      description: query webhook
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
    put:
      tags:
      - webhook
      description: update webhook
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook'
        required: true
      responses:
        200:
          description: webhook update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
      x-codegen-request-body-name: body
    delete:
      tags:
      - webhook
      description: delete a webhook
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: webhook delete response
          content: {}
  /weclappOs:
    get:
      tags:
      - weclappOs
      description: query weclappOs
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: weclappOs response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/weclappOs'
    post:
      tags:
      - weclappOs
      description: create a weclappOs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/weclappOs'
        required: true
      responses:
        201:
          description: weclappOs create response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/weclappOs'
      x-codegen-request-body-name: body
  /weclappOs/count:
    get:
      tags:
      - weclappOs
      description: count weclappOs
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: pageSize
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        200:
          description: count
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    format: int64
  /weclappOs/id/{id}:
    get:
      tags:
      - weclappOs
      description: query weclappOs
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: get by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/weclappOs'
    put:
      tags:
      - weclappOs
      description: update weclappOs
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/weclappOs'
        required: true
      responses:
        200:
          description: weclappOs update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/weclappOs'
      x-codegen-request-body-name: body
    delete:
      tags:
      - weclappOs
      description: delete a weclappOs
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: weclappOs delete response
          content: {}
components:
  schemas:
    accountingTransaction:
      required:
      - currencyId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        accountingImportDate:
          type: integer
          format: timestamp
        conversionRate:
          type: string
          format: number
        conversionRateDate:
          type: integer
          format: timestamp
        createdDate:
          type: integer
          format: timestamp
        currencyId:
          type: string
          x-relatedEntityName: currency
        currencyName:
          type: string
        draft:
          type: boolean
        externalRecordNumber:
          type: string
        internalRecordNumber:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        reverseTransaction:
          type: boolean
        status:
          type: string
          enum:
          - DRAFT
          - ESTABLISHED
          - PREBATCHBOOKING
        transactionDate:
          type: integer
          format: timestamp
        transactionDetails:
          type: array
          items:
            $ref: '#/components/schemas/accountingTransactionDetail'
        transactionEstablishDate:
          type: integer
          format: timestamp
        transactionNumber:
          type: string
        type:
          type: string
          enum:
          - IMPERSONAL
          - INCOMING_CREDIT_NOTE
          - INCOMING_INVOICE
          - INCOMING_PAYMENT
          - OUTGOING_CREDIT_NOTE
          - OUTGOING_INVOICE
          - OUTGOING_PAYMENT
    accountingTransactionDetail:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        accountId:
          type: string
          x-relatedEntityName: ledgerAccount
        accountNumber:
          type: string
        amount:
          type: string
          format: number
        createdDate:
          type: integer
          format: timestamp
        currencyId:
          type: string
          x-relatedEntityName: currency
        currencyName:
          type: string
        debitCredit:
          type: string
          enum:
          - CREDIT
          - DEBIT
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        taxId:
          type: string
          x-relatedEntityName: tax
        taxName:
          type: string
        transactionDetailType:
          type: string
          enum:
          - DEFAULT
          - DISCOUNT
          - DUNNING_FEE
          - IMPORT_SALES_TAX
          - MONETARY_TRAFFIC
          - PAYMENT_TOLERANCE
          - REVERSE_CHARGE_TAX
          - REVERSE_CHARGE_TAX_CONTRA
          - TAX
          - TAXATION_ON_PAYMENT
          - TAXATION_ON_PAYMENT_CONTRA
    address:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        city:
          type: string
        company:
          type: string
        company2:
          type: string
        countryCode:
          type: string
        createdDate:
          type: integer
          format: timestamp
        deliveryAddress:
          type: boolean
        firstName:
          type: string
        globalLocationNumber:
          type: string
        invoiceAddress:
          type: boolean
        lastModifiedDate:
          type: integer
          format: timestamp
        lastName:
          type: string
        phoneNumber:
          type: string
        postOfficeBoxCity:
          type: string
        postOfficeBoxNumber:
          type: string
        postOfficeBoxZipCode:
          type: string
        primeAddress:
          type: boolean
        salutation:
          type: string
          enum:
          - COMPANY
          - FAMILY
          - MR
          - MRS
          - NO_SALUTATION
        state:
          type: string
        street1:
          type: string
        street2:
          type: string
        title:
          type: string
        titleId:
          type: string
          x-relatedEntityName: title
        zipcode:
          type: string
    archivedEmail:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        bccAddresses:
          type: array
          items:
            type: string
        body:
          type: string
        ccAddresses:
          type: array
          items:
            type: string
        createdDate:
          type: integer
          format: timestamp
        fromAddress:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        messageIdentifier:
          type: string
        receivedDate:
          type: integer
          format: timestamp
        replyToAddress:
          type: array
          items:
            type: string
        subject:
          type: string
        toAddresses:
          type: array
          items:
            type: string
    article:
      required:
      - name
      - unitId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        accountId:
          type: string
          x-relatedEntityName: ledgerAccount
        accountNumber:
          type: string
        accountingCodeId:
          type: string
          x-relatedEntityName: articleAccountingCode
        active:
          type: boolean
        applyCashDiscount:
          type: boolean
        articleAlternativeQuantities:
          type: array
          items:
            $ref: '#/components/schemas/articleAlternativeQuantity'
        articleCalculationPrices:
          type: array
          items:
            $ref: '#/components/schemas/articleCalculationPrice'
        articleCategoryId:
          type: string
          x-relatedEntityName: articleCategory
        articleGrossWeight:
          type: string
          format: number
        articleHeight:
          type: string
          format: number
        articleImages:
          type: array
          items:
            $ref: '#/components/schemas/articleImage'
        articleLength:
          type: string
          format: number
        articleNetWeight:
          type: string
          format: number
        articleNumber:
          type: string
        articlePrices:
          type: array
          items:
            $ref: '#/components/schemas/articlePriceWithoutArticleReference'
        articleType:
          type: string
          enum:
          - BASIC
          - SALES_BILL_OF_MATERIAL
          - SERVICE
          - SHIPPING_COST
          - STORABLE
        articleWidth:
          type: string
          format: number
        availableForSalesChannels:
          type: array
          items:
            type: string
        availableInSale:
          type: boolean
        averageDeliveryTime:
          type: integer
          format: int32
        batchNumberRequired:
          type: boolean
        billOfMaterialPartDeliveryPossible:
          type: boolean
        catalogCode:
          type: string
        countryOfOriginCode:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        customsDescription:
          type: string
        customsTariffNumber:
          type: string
        customsTariffNumberId:
          type: string
          x-relatedEntityName: customsTariffNumber
        defaultWarehouseLevels:
          type: array
          items:
            $ref: '#/components/schemas/onlyId'
        description:
          type: string
        ean:
          type: string
        expenseAccountId:
          type: string
          x-relatedEntityName: ledgerAccount
        expenseAccountNumber:
          type: string
        expirationDays:
          type: integer
          format: int32
        fixedPurchaseQuantity:
          type: string
          format: number
        lastModifiedDate:
          type: integer
          format: timestamp
        longText:
          type: string
        lowLevelCode:
          type: integer
          format: int32
        manufacturerId:
          type: string
          x-relatedEntityName: manufacturer
        manufacturerName:
          type: string
        manufacturerPartNumber:
          type: string
        marginCalculationPriceType:
          type: string
          enum:
          - ARTICLE_CALCULATION_PRICE
          - MOVING_AVERAGE
          - PURCHASE_PRICE_PRODUCTION_COST
        matchCode:
          type: string
        minimumPurchaseQuantity:
          type: string
          format: number
        minimumStockQuantity:
          type: string
          format: number
        name:
          type: string
        procurementLeadDays:
          type: integer
          format: int32
        productionArticle:
          type: boolean
        productionBillOfMaterialItems:
          type: array
          items:
            $ref: '#/components/schemas/billOfMaterial'
        purchaseCostCenterId:
          type: string
          x-relatedEntityName: costCenter
        purchaseCostCenterNumber:
          type: string
        ratingId:
          type: string
          x-relatedEntityName: articleRating
        ratingName:
          type: string
        recordItemGroupName:
          type: string
        safetyStockDays:
          type: integer
          format: int32
        salesBillOfMaterialItems:
          type: array
          items:
            $ref: '#/components/schemas/salesBillOfMaterialArticleItem'
        salesCostCenterId:
          type: string
          x-relatedEntityName: costCenter
        salesCostCenterNumber:
          type: string
        serialNumberRequired:
          type: boolean
        shortDescription1:
          type: string
        shortDescription2:
          type: string
        showOnDeliveryNote:
          type: boolean
        supplySources:
          type: array
          items:
            $ref: '#/components/schemas/supplySource'
        systemCode:
          type: string
        tags:
          type: array
          items:
            type: string
        targetStockQuantity:
          type: string
          format: number
        taxRateType:
          type: string
          enum:
          - REDUCED
          - SLIGHTLY_REDUCED
          - STANDARD
          - SUPER_REDUCED
          - ZERO
        unitId:
          type: string
          x-relatedEntityName: unit
        unitName:
          type: string
        useAvailableForSalesChannels:
          type: boolean
        useSalesBillOfMaterialItemPrices:
          type: boolean
        useSalesBillOfMaterialItemPricesForPurchase:
          type: boolean
    articleAlternativeQuantity:
      required:
      - warehouseId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        minimumOrderQuantity:
          type: string
          format: number
        minimumStockQuantity:
          type: string
          format: number
        targetStockQuantity:
          type: string
          format: number
        warehouseId:
          type: string
          x-relatedEntityName: warehouse
        warehouseName:
          type: string
    articleCalculationPrice:
      required:
      - articleCalculationPriceType
      - price
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleCalculationPriceType:
          type: string
          enum:
          - CALCULATION_PRICE
          - RECOMMENDED_RETAIL_PRICE
        createdDate:
          type: integer
          format: timestamp
        endDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        positionNumber:
          type: integer
          format: int32
        price:
          type: string
          format: number
        salesChannel:
          type: string
        startDate:
          type: integer
          format: timestamp
    articleCategory:
      required:
      - name
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        description:
          type: string
        imageId:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
        parentCategoryId:
          type: string
          x-relatedEntityName: articleCategory
    articleImage:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        fileName:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        mainImage:
          type: boolean
    articlePrice:
      required:
      - articleId
      - currencyId
      - price
      - priceScaleType
      - priceScaleValue
      - salesChannel
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        currencyId:
          type: string
          x-relatedEntityName: currency
        currencyName:
          type: string
        customerId:
          type: string
          x-relatedEntityName: party
        description:
          type: string
        distributionChannel:
          type: string
        endDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        positionNumber:
          type: integer
          format: int32
        price:
          type: string
          format: number
        priceScaleType:
          type: string
          enum:
          - SCALE_FROM
          - SCALE_TO
        priceScaleValue:
          type: string
          format: number
        reductionAdditions:
          type: array
          items:
            $ref: '#/components/schemas/reductionAddition'
        salesChannel:
          type: string
        startDate:
          type: integer
          format: timestamp
    articlePriceWithoutArticleReference:
      required:
      - currencyId
      - price
      - priceScaleType
      - priceScaleValue
      - salesChannel
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        currencyId:
          type: string
          x-relatedEntityName: currency
        currencyName:
          type: string
        customerId:
          type: string
          x-relatedEntityName: party
        description:
          type: string
        endDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        positionNumber:
          type: integer
          format: int32
        price:
          type: string
          format: number
        priceScaleType:
          type: string
          enum:
          - SCALE_FROM
          - SCALE_TO
        priceScaleValue:
          type: string
          format: number
        reductionAdditions:
          type: array
          items:
            $ref: '#/components/schemas/reductionAddition'
        salesChannel:
          type: string
        startDate:
          type: integer
          format: timestamp
    articlePriceWithoutSalesChannel:
      required:
      - currencyId
      - price
      - priceScaleType
      - priceScaleValue
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        currencyId:
          type: string
          x-relatedEntityName: currency
        currencyName:
          type: string
        customerId:
          type: string
          x-relatedEntityName: party
        description:
          type: string
        endDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        positionNumber:
          type: integer
          format: int32
        price:
          type: string
          format: number
        priceScaleType:
          type: string
          enum:
          - SCALE_FROM
          - SCALE_TO
        priceScaleValue:
          type: string
          format: number
        reductionAdditions:
          type: array
          items:
            $ref: '#/components/schemas/reductionAddition'
        startDate:
          type: integer
          format: timestamp
    articleSupplySource:
      required:
      - name
      - unitId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleNumber:
          type: string
        articlePrices:
          type: array
          items:
            $ref: '#/components/schemas/articlePriceWithoutSalesChannel'
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        description:
          type: string
        ean:
          type: string
        fixedPurchaseQuantity:
          type: string
          format: number
        lastModifiedDate:
          type: integer
          format: timestamp
        manufacturerPartNumber:
          type: string
        matchCode:
          type: string
        minimumPurchaseQuantity:
          type: string
          format: number
        name:
          type: string
        procurementLeadDays:
          type: integer
          format: int32
        shortDescription1:
          type: string
        shortDescription2:
          type: string
        supplierId:
          type: string
          x-relatedEntityName: party
        supplierNumber:
          type: string
        supplierStockQuantity:
          type: string
          format: number
        taxRateType:
          type: string
          enum:
          - REDUCED
          - SLIGHTLY_REDUCED
          - STANDARD
          - SUPER_REDUCED
          - ZERO
        unitId:
          type: string
          x-relatedEntityName: unit
        unitName:
          type: string
    batchNumber:
      required:
      - articleId
      - batchNumber
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        batchNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        expirationDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
    billOfMaterial:
      required:
      - articleId
      - quantity
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        positionNumber:
          type: integer
          format: int32
        quantity:
          type: string
          format: number
    blanketPurchaseOrder:
      required:
      - articleId
      - status
      - supplierId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        blanketPurchaseOrderNumber:
          type: string
        calculationMode:
          type: string
          enum:
          - ROUND_SUMS_TO_0_05
        comment:
          type: string
        commercialLanguage:
          type: string
        confirmationNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        deliveryAddress:
          $ref: '#/components/schemas/recordAddress'
        description:
          type: string
        discountPercentage:
          type: string
          format: number
        endDate:
          type: integer
          format: timestamp
        formSettingsFromDistributionChannel:
          type: string
        headerDiscount:
          type: string
          format: number
        headerSurcharge:
          type: string
          format: number
        invoiceAddress:
          $ref: '#/components/schemas/recordAddress'
        lastModifiedDate:
          type: integer
          format: timestamp
        nonStandardTaxId:
          type: string
          x-relatedEntityName: tax
        orderDate:
          type: integer
          format: timestamp
        orderQuantity:
          type: string
          format: number
        paymentMethodId:
          type: string
          x-relatedEntityName: paymentMethod
        recipientCountryCode:
          type: string
        recordAddress:
          $ref: '#/components/schemas/recordAddress'
        recordComment:
          type: string
        recordCurrencyId:
          type: string
          x-relatedEntityName: currency
        recordEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        recordFreeText:
          type: string
        recordOpening:
          type: string
        releases:
          type: array
          items:
            $ref: '#/components/schemas/releases'
        responsibleUserId:
          type: string
          x-relatedEntityName: user
        sentToRecipient:
          type: boolean
        shipmentMethodId:
          type: string
          x-relatedEntityName: shipmentMethod
        startDate:
          type: integer
          format: timestamp
        status:
          type: string
          enum:
          - CANCELLED
          - CLOSED
          - CONFIRMED
          - DOCUMENT_PRINTED
          - NEW
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/blanketPurchaseOrderStatusHistory'
        supplierBlanketPurchaseOrderNumber:
          type: string
        supplierId:
          type: string
          x-relatedEntityName: party
        tags:
          type: array
          items:
            type: string
        taxId:
          type: string
          x-relatedEntityName: tax
        termOfPaymentId:
          type: string
          x-relatedEntityName: termOfPayment
        unitPrice:
          type: string
          format: number
        useManualUnitPrice:
          type: boolean
        warehouseId:
          type: string
          x-relatedEntityName: warehouse
    blanketPurchaseOrderStatusHistory:
      type: object
      properties:
        status:
          type: string
          enum:
          - CANCELLED
          - CLOSED
          - CONFIRMED
          - DOCUMENT_PRINTED
          - NEW
        statusDate:
          type: integer
          format: timestamp
        userId:
          type: string
          x-relatedEntityName: user
    campaign:
      required:
      - campaignName
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        campaignEndDate:
          type: integer
          format: timestamp
        campaignName:
          type: string
        campaignNumber:
          type: string
        campaignStartDate:
          type: integer
          format: timestamp
        campaignType:
          type: string
          enum:
          - ADVERTISEMENT
          - BULKMAIL
          - EMAIL
          - EVENT
          - EXPOSITION
          - FAIR
          - OTHER
          - PUBLICRELATION
          - TELEMARKETING
          - WEBINAR
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        responsibleUserId:
          type: string
          x-relatedEntityName: user
        responsibleUserUsername:
          type: string
    campaignParticipant:
      required:
      - partyId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        campaignId:
          type: string
          x-relatedEntityName: campaign
        campaignNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        participation:
          type: boolean
        partyId:
          type: string
          x-relatedEntityName: party
    cashAccount:
      required:
      - currencyId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        currencyId:
          type: string
          x-relatedEntityName: currency
        currencyName:
          type: string
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        openingBalance:
          type: string
          format: number
    comment:
      required:
      - comment
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        authorName:
          type: string
        authorUserId:
          type: string
          x-relatedEntityName: user
        authorUserUsername:
          type: string
        comment:
          type: string
        createdDate:
          type: integer
          format: timestamp
        entityId:
          type: string
        entityName:
          type: string
        htmlComment:
          type: string
        lastEditDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        parentCommentId:
          type: string
          x-relatedEntityName: comment
        privateComment:
          type: boolean
        publicComment:
          type: boolean
        recipientUsers:
          type: array
          items:
            $ref: '#/components/schemas/onlyId'
        solution:
          type: boolean
    commercialLanguage:
      required:
      - languageCode
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        countryCode:
          type: string
        createdDate:
          type: integer
          format: timestamp
        languageCode:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
    commissionSalesPartner:
      required:
      - commissionType
      - salesPartnerCustomerId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        commissionFix:
          type: string
          format: number
        commissionPercentage:
          type: string
          format: number
        commissionType:
          type: string
          enum:
          - FIX
          - FIX_AND_MARGIN
          - FIX_AND_REVENUE
          - MARGIN
          - NO_COMMISSION
          - REVENUE
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        salesPartnerCustomerId:
          type: string
          x-relatedEntityName: party
        salesPartnerCustomerNumber:
          type: string
    contact:
      required:
      - partyType
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/address'
        birthDate:
          type: integer
          format: timestamp
        company:
          type: string
        company2:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        customerCategoryId:
          type: string
          x-relatedEntityName: customerCategory
        customerCategoryName:
          type: string
        deliveryAddressId:
          type: string
        description:
          type: string
        email:
          type: string
        fax:
          type: string
        firstName:
          type: string
        fixPhone2:
          type: string
        invoiceAddressId:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        lastName:
          type: string
        middleName:
          type: string
        mobilePhone1:
          type: string
        mobilePhone2:
          type: string
        onlineAccounts:
          type: array
          items:
            $ref: '#/components/schemas/onlineAccount'
        optIn:
          type: boolean
        optInLetter:
          type: boolean
        optInPhone:
          type: boolean
        optInSms:
          type: boolean
        partyType:
          type: string
          enum:
          - ORGANIZATION
          - PERSON
        personCompany:
          type: string
        personDepartment:
          type: string
        personRole:
          type: string
        phone:
          type: string
        phoneHome:
          type: string
        primaryAddressId:
          type: string
        salutation:
          type: string
          enum:
          - COMPANY
          - FAMILY
          - MR
          - MRS
          - NO_SALUTATION
        tags:
          type: array
          items:
            type: string
        title:
          type: string
        titleId:
          type: string
          x-relatedEntityName: title
        website:
          type: string
    costCenter:
      required:
      - costCenterNumber
      - costCenterType
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        costCenterGroupId:
          type: string
          x-relatedEntityName: costCenterGroup
        costCenterNumber:
          type: string
        costCenterType:
          type: string
          enum:
          - DIRECT_COST_CENTER
          - INDIRECT_COST_CENTER
          - SERVICE_COST_CENTER
        createdDate:
          type: integer
          format: timestamp
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
    costCenterWithDistributionPercentage:
      required:
      - costCenterId
      - distributionPercentage
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        costCenterId:
          type: string
          x-relatedEntityName: costCenter
        costCenterNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        distributionPercentage:
          type: string
          format: number
        lastModifiedDate:
          type: integer
          format: timestamp
    currency:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        currencySymbol:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
    customAttribute:
      type: object
      properties:
        attributeDefinitionId:
          type: string
          x-relatedEntityName: customAttributeDefinition
        booleanValue:
          type: boolean
        dateValue:
          type: integer
          format: timestamp
        entityId:
          type: string
        entityReferences:
          type: array
          items:
            $ref: '#/components/schemas/entityReference'
        numberValue:
          type: string
          format: number
        selectedValueId:
          type: string
        selectedValues:
          type: array
          items:
            $ref: '#/components/schemas/onlyId'
        stringValue:
          type: string
    customAttributeDefinition:
      required:
      - attributeKey
      - attributeType
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        active:
          type: boolean
        attributeDescription:
          type: string
        attributeEntityType:
          type: string
          enum:
          - article
          - campaign
          - contract
          - customer
          - incomingGoods
          - opportunity
          - party
          - productionOrder
          - project
          - purchaseInvoice
          - purchaseOrder
          - quotation
          - recurringInvoice
          - salesInvoice
          - salesOrder
          - serialNumber
          - shipment
          - supplier
          - ticket
          - user
        attributeKey:
          type: string
        attributeLabels:
          type: array
          items:
            $ref: '#/components/schemas/customAttributeDefinitionLabel'
        attributeType:
          type: string
          enum:
          - BOOLEAN
          - DATE
          - DECIMAL
          - ENTITY
          - INTEGER
          - LARGE_TEXT
          - LIST
          - MULTISELECT_LIST
          - REFERENCE
          - STRING
          - URL
        createdDate:
          type: integer
          format: timestamp
        entities:
          type: array
          items:
            type: string
        groupName:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        legacyEntities:
          type: array
          items:
            type: string
        mandatory:
          type: boolean
        publicPageTypes:
          type: array
          items:
            type: string
            enum:
            - PURCHASE_ORDER_REQUEST
            - QUOTATION
        readOnly:
          type: boolean
        selectableValues:
          type: array
          items:
            $ref: '#/components/schemas/customAttributeDefinitionListValue'
        showInOverview:
          type: boolean
        showOnCreationDialog:
          type: boolean
        systemCustomAttribute:
          type: boolean
    customAttributeDefinitionLabel:
      required:
      - locale
      type: object
      properties:
        labelText:
          type: string
        locale:
          type: string
    customAttributeDefinitionListValue:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        active:
          type: boolean
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        positionNumber:
          type: integer
          format: int32
        value:
          type: string
    customValue:
      required:
      - name
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        active:
          type: boolean
        createdDate:
          type: integer
          format: timestamp
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
        positionNumber:
          type: integer
          format: int32
    customer:
      required:
      - partyType
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/address'
        amountInsured:
          type: string
          format: number
        annualRevenue:
          type: string
          format: number
        bankAccounts:
          type: array
          items:
            $ref: '#/components/schemas/partyBankAccount'
        birthDate:
          type: integer
          format: timestamp
        blockNotice:
          type: string
        blocked:
          type: boolean
        commercialLanguageId:
          type: string
          x-relatedEntityName: commercialLanguage
        commissionSalesPartners:
          type: array
          items:
            $ref: '#/components/schemas/commissionSalesPartner'
        company:
          type: string
        company2:
          type: string
        companySizeId:
          type: string
          x-relatedEntityName: companySize
        companySizeName:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/contact'
        createdDate:
          type: integer
          format: timestamp
        creditLimit:
          type: string
          format: number
        currencyId:
          type: string
          x-relatedEntityName: currency
        currencyName:
          type: string
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        customerCategoryId:
          type: string
          x-relatedEntityName: customerCategory
        customerCategoryName:
          type: string
        customerNumber:
          type: string
        customerRatingId:
          type: string
          x-relatedEntityName: partyRating
        customerRatingName:
          type: string
        customerSupplierNumber:
          type: string
        customerTopics:
          type: array
          items:
            $ref: '#/components/schemas/entity'
        defaultHeaderDiscount:
          type: string
          format: number
        defaultHeaderSurcharge:
          type: string
          format: number
        deliveryAddressId:
          type: string
        deliveryBlock:
          type: boolean
        description:
          type: string
        email:
          type: string
        fax:
          type: string
        firstName:
          type: string
        insolvent:
          type: boolean
        insured:
          type: boolean
        invoiceAddressId:
          type: string
        invoiceRecipientId:
          type: string
          x-relatedEntityName: party
        lastModifiedDate:
          type: integer
          format: timestamp
        lastName:
          type: string
        leadSourceId:
          type: string
          x-relatedEntityName: leadSource
        leadSourceName:
          type: string
        lossDescription:
          type: string
        lossReasonId:
          type: string
          x-relatedEntityName: customerLeadLossReason
        lossReasonName:
          type: string
        middleName:
          type: string
        mobilePhone1:
          type: string
        oldCustomerNumber:
          type: string
        onlineAccounts:
          type: array
          items:
            $ref: '#/components/schemas/onlineAccount'
        optIn:
          type: boolean
        optInLetter:
          type: boolean
        optInPhone:
          type: boolean
        optInSms:
          type: boolean
        parentPartyId:
          type: string
          x-relatedEntityName: party
        partyType:
          type: string
          enum:
          - ORGANIZATION
          - PERSON
        paymentMethodId:
          type: string
          x-relatedEntityName: paymentMethod
        paymentMethodName:
          type: string
        personCompany:
          type: string
        personDepartment:
          type: string
        personRole:
          type: string
        phone:
          type: string
        primaryAddressId:
          type: string
        primaryContactId:
          type: string
          x-relatedEntityName: party
        referenceNumber:
          type: string
        responsibleUserFixed:
          type: boolean
        responsibleUserId:
          type: string
          x-relatedEntityName: user
        responsibleUserUsername:
          type: string
        salesChannel:
          type: string
        salesPartner:
          type: boolean
        salesPartnerDefaultCommissionFix:
          type: string
          format: number
        salesPartnerDefaultCommissionPercentage:
          type: string
          format: number
        salesPartnerDefaultCommissionType:
          type: string
          enum:
          - FIX
          - FIX_AND_MARGIN
          - FIX_AND_REVENUE
          - MARGIN
          - NO_COMMISSION
          - REVENUE
        salesStageId:
          type: string
          x-relatedEntityName: salesStage
        salesStageName:
          type: string
        salutation:
          type: string
          enum:
          - COMPANY
          - FAMILY
          - MR
          - MRS
          - NO_SALUTATION
        satisfaction:
          type: string
          enum:
          - NEUTRAL
          - SATISFIED
          - UNSATISFIED
        sectorId:
          type: string
          x-relatedEntityName: sector
        sectorName:
          type: string
        shipmentMethodId:
          type: string
          x-relatedEntityName: shipmentMethod
        shipmentMethodName:
          type: string
        tags:
          type: array
          items:
            type: string
        termOfPaymentId:
          type: string
          x-relatedEntityName: termOfPayment
        termOfPaymentName:
          type: string
        title:
          type: string
        titleId:
          type: string
          x-relatedEntityName: title
        useCustomsTariffNumber:
          type: boolean
        vatRegistrationNumber:
          type: string
        website:
          type: string
    document:
      required:
      - mediaType
      - name
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        mediaType:
          type: string
        name:
          type: string
        userId:
          type: string
          x-relatedEntityName: user
        versions:
          type: array
          items:
            $ref: '#/components/schemas/documentVersion'
    documentVersion:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        comment:
          type: string
        createdDate:
          type: integer
          format: timestamp
        documentVersion:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
    ecommerceOrder:
      required:
      - ecommerceId
      - externalConnectionId
      type: object
      properties:
        ecommerceId:
          type: string
        externalConnectionId:
          type: string
          x-relatedEntityName: externalConnection
    emailAddresses:
      type: object
      properties:
        bccAddresses:
          type: string
        ccAddresses:
          type: string
        toAddresses:
          type: string
    entity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    entityReference:
      type: object
      properties:
        entityId:
          type: string
        entityName:
          type: string
    externalConnection:
      required:
      - connectionType
      - name
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        connectionType:
          type: string
          enum:
          - AMAZON
          - CLEVERREACH
          - DATEV_CONNECT_ONLINE_PROD
          - DATEV_CONNECT_ONLINE_STAGING
          - EBAY
          - EPOST
          - FIGO_REG_SHIELD_PROD
          - FIGO_REG_SHIELD_STAGING
          - FINTEC_SYSTEMS
          - GOOGLEV3
          - ITSCOPE
          - JIRA
          - MAGENTO
          - MAGENTO2
          - MAILCHIMP
          - MAPBOX
          - OPEN_ID_CONNECT
          - RAKUTEN
          - REAL
          - SENDINBLUE
          - SHIPCLOUD
          - SHOPIFY
          - SHOPWARE
          - SHOPWARE6
          - STRIPE_PROD
          - STRIPE_STAGING
          - SYNAXON
          - TEAMVIEWER
          - VERSACOMMERCE
          - WECLAPP2WECLAPP
          - WOOCOMMERCE
          - XTCOMMERCE
          - ZENDESK
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
    fastProductionBookingResult:
      type: object
      properties:
        message:
          type: string
          enum:
          - INVALID_ORDER
          - INVALID_ORDER_NUMBER
          - INVALID_QUANTITY
          - SUCCESS
        success:
          type: boolean
    fulfillmentProvider:
      required:
      - fulfillmentProviderType
      - name
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        fulfillmentProviderType:
          type: string
          enum:
          - AMAZON
          - EXTERNAL
          - INTERNAL
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
        warehouseId:
          type: string
          x-relatedEntityName: warehouse
    incomingGoods:
      required:
      - status
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        commercialLanguage:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        customerDeliveryAddress:
          $ref: '#/components/schemas/recordAddress'
        customerInvoiceAddress:
          $ref: '#/components/schemas/recordAddress'
        deliveryNoteNumber:
          type: string
        description:
          type: string
        disableEmailTemplate:
          type: boolean
        incomingGoodsItems:
          type: array
          items:
            $ref: '#/components/schemas/incomingGoodsItem'
        incomingGoodsNumber:
          type: string
        incomingGoodsType:
          type: string
          enum:
          - CUSTOMER_RETURN
          - INTERNAL
          - STANDARD
          - SUPPLIER_COMPENSATION
        invoiceAddress:
          $ref: '#/components/schemas/recordAddress'
        invoiceRecipientId:
          type: string
          x-relatedEntityName: party
        lastModifiedDate:
          type: integer
          format: timestamp
        purchaseOrderId:
          type: string
          x-relatedEntityName: purchaseOrder
        purchaseOrderNumber:
          type: string
        purchaseOrders:
          type: array
          items:
            $ref: '#/components/schemas/onlyId'
        recipientAddress:
          $ref: '#/components/schemas/recordAddress'
        recordComment:
          type: string
        recordFreeText:
          type: string
        recordOpening:
          type: string
        relatedShipmentId:
          type: string
          x-relatedEntityName: shipment
        returnAddress:
          $ref: '#/components/schemas/recordAddress'
        salesOrderId:
          type: string
          x-relatedEntityName: salesOrder
        salesOrderNumber:
          type: string
        senderCustomerNumber:
          type: string
        senderPartyId:
          type: string
          x-relatedEntityName: party
        senderSupplierNumber:
          type: string
        sentToRecipient:
          type: boolean
        sourceWarehouseId:
          type: string
          x-relatedEntityName: warehouse
        sourceWarehouseName:
          type: string
        status:
          type: string
          enum:
          - CANCELLED
          - DELIVERED
          - DELIVERY_NOTE_PRINTED
          - INCOMING_CANCELLED
          - INCOMING_GOODS_MOVEMENT_PRINTED
          - INCOMING_MOVED_INTO_STORE
          - INCOMING_SHIPPED
          - IN_ROUTE
          - NEW
          - SHIPPED
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/shipmentStatus'
        tags:
          type: array
          items:
            type: string
        warehouseId:
          type: string
          x-relatedEntityName: warehouse
        warehouseName:
          type: string
    incomingGoodsItem:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        note:
          type: string
        parentItemId:
          type: string
        positionNumber:
          type: integer
          format: int32
        purchaseOrderItemId:
          type: string
        quantity:
          type: string
          format: number
        returnAssessmentId:
          type: string
          x-relatedEntityName: shipmentReturnAssessment
        returnAssessmentName:
          type: string
        returnDescription:
          type: string
        returnErrorId:
          type: string
          x-relatedEntityName: shipmentReturnError
        returnErrorName:
          type: string
        returnReasonId:
          type: string
          x-relatedEntityName: shipmentReturnReason
        returnReasonName:
          type: string
        returnRectificationId:
          type: string
          x-relatedEntityName: shipmentReturnRectification
        returnRectificationName:
          type: string
        title:
          type: string
        unitId:
          type: string
          x-relatedEntityName: unit
        unitName:
          type: string
    invoiceStatusHistory:
      type: object
      properties:
        status:
          type: string
          enum:
          - APPROVED
          - BOOKED
          - BOOKING_APPROVED
          - BOOKING_ERROR
          - DOCUMENT_CREATED
          - ENTRY_COMPLETED
          - INVOICE_CHECKED
          - INVOICE_VERIFICATION
          - NEW
          - QUERY_INVOICE
          - SENT
          - VOID
        statusDate:
          type: integer
          format: timestamp
        userId:
          type: string
          x-relatedEntityName: user
    lead:
      required:
      - partyType
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/address'
        annualRevenue:
          type: string
          format: number
        birthDate:
          type: integer
          format: timestamp
        commercialLanguageId:
          type: string
          x-relatedEntityName: commercialLanguage
        company:
          type: string
        company2:
          type: string
        companySizeId:
          type: string
          x-relatedEntityName: companySize
        companySizeName:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/contact'
        createdDate:
          type: integer
          format: timestamp
        currencyId:
          type: string
          x-relatedEntityName: currency
        currencyName:
          type: string
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        customerCategoryId:
          type: string
          x-relatedEntityName: customerCategory
        customerCategoryName:
          type: string
        deliveryAddressId:
          type: string
        description:
          type: string
        email:
          type: string
        fax:
          type: string
        firstName:
          type: string
        invoiceAddressId:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        lastName:
          type: string
        leadNumber:
          type: string
        leadRatingId:
          type: string
          x-relatedEntityName: leadRating
        leadRatingName:
          type: string
        leadSourceId:
          type: string
          x-relatedEntityName: leadSource
        leadSourceName:
          type: string
        leadStatus:
          type: string
          enum:
          - CONVERTED
          - DISQUALIFIED
          - NEW
          - PREQUALIFIED
          - QUALIFIED
        leadTopics:
          type: array
          items:
            $ref: '#/components/schemas/entity'
        lossDescription:
          type: string
        lossReasonId:
          type: string
          x-relatedEntityName: customerLeadLossReason
        lossReasonName:
          type: string
        middleName:
          type: string
        mobilePhone1:
          type: string
        oldLeadNumber:
          type: string
        onlineAccounts:
          type: array
          items:
            $ref: '#/components/schemas/onlineAccount'
        optIn:
          type: boolean
        optInLetter:
          type: boolean
        optInPhone:
          type: boolean
        optInSms:
          type: boolean
        parentPartyId:
          type: string
          x-relatedEntityName: party
        partyType:
          type: string
          enum:
          - ORGANIZATION
          - PERSON
        paymentMethodId:
          type: string
          x-relatedEntityName: paymentMethod
        paymentMethodName:
          type: string
        personCompany:
          type: string
        personDepartment:
          type: string
        personRole:
          type: string
        phone:
          type: string
        primaryAddressId:
          type: string
        primaryContactId:
          type: string
          x-relatedEntityName: party
        responsibleUserFixed:
          type: boolean
        responsibleUserId:
          type: string
          x-relatedEntityName: user
        responsibleUserUsername:
          type: string
        salesChannel:
          type: string
        salesStageId:
          type: string
          x-relatedEntityName: salesStage
        salesStageName:
          type: string
        salutation:
          type: string
          enum:
          - COMPANY
          - FAMILY
          - MR
          - MRS
          - NO_SALUTATION
        sectorId:
          type: string
          x-relatedEntityName: sector
        sectorName:
          type: string
        shipmentMethodId:
          type: string
          x-relatedEntityName: shipmentMethod
        shipmentMethodName:
          type: string
        tags:
          type: array
          items:
            type: string
        termOfPaymentId:
          type: string
          x-relatedEntityName: termOfPayment
        termOfPaymentName:
          type: string
        title:
          type: string
        titleId:
          type: string
          x-relatedEntityName: title
        vatRegistrationNumber:
          type: string
        website:
          type: string
    ledgerAccount:
      required:
      - type
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        accountNumber:
          type: string
        automatic:
          type: boolean
        balanceSheetItem:
          type: string
          enum:
          - ABSCHREIBUNGEN_GWG_ACCOUNTS
          - ABSCHREIBUNGEN_UND_ANLAGEVERMOEGEN_ACCOUNTS
          - BESONDERE_AUFWENDUNGEN_ACCOUNTS
          - BUCHWERT_ANLAGENABGAENGE_ACCOUNTS
          - FREMDLEISTUNGEN_ACCOUNTS
          - GAS_STROM_ACCOUNTS
          - GELEISTETE_ANZAHLUNGEN_ACCOUNTS
          - GESETZLICHE_SOZIALE_AUFWENDUNGEN_ACCOUNTS
          - HEIZUNG_ACCOUNTS
          - INSTANDHALTUNG_ACCOUNTS
          - INSTANDHALTUNG_UND_WERKZEUGE_ACCOUNTS
          - KFZ_SONSTIGE_ACCOUNTS
          - KFZ_STEUER_ACCOUNTS
          - KFZ_VERSICHERUNG_ACCOUNTS
          - KOSTEN_DER_WARENABGABE_ACCOUNTS
          - LOEHENE_UND_GEHAELTER_ACCOUNTS
          - MIETE_PACHT_ACCOUNTS
          - NEUTRALE_AUFWENDUNGEN_ACCOUNTS
          - NEUTRALE_ERTRAEGE_ACCOUNTS
          - PRIVAT_ANTEILE_ACCOUNTS
          - REVENUE_ACCOUNTS
          - ROH_HILFS_UNDBETRIE_BSSTOFFE_ACCOUNTS
          - SALDO_DER_STATISTISCHEN_KONTEN_ACCOUNTS
          - SONSTIGE_ERLOESE_ACCOUNTS
          - SONSTIGE_KONTEN_ACCOUNTS
          - SONSTIGE_RAUMKOSTEN_ACCOUNTS
          - STEUERN_VERSICHERUNGEN_BEITRAEGE_ACCOUNTS
          - UMSATZSTEUER_ACCOUNTS
          - UMSATZSTEUER_ZAHLUNGEN_ACCOUNTS
          - VERSCHIEDENE_KOSTEN_ACCOUNTS
          - VORSTEUER_ACCOUNTS
          - WERBE_UND_REISEKOSTEN_ACCOUNTS
        createdDate:
          type: integer
          format: timestamp
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        parentAccountId:
          type: string
          x-relatedEntityName: ledgerAccount
        parentAccountNumber:
          type: string
        taxId:
          type: string
          x-relatedEntityName: tax
        taxName:
          type: string
        type:
          type: string
          enum:
          - IMPERSONAL_ACCOUNT
          - PERSONAL_ACCOUNT
    notification:
      required:
      - title
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        read:
          type: boolean
        title:
          type: string
    onlineAccount:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        accountName:
          type: string
        accountType:
          type: string
          enum:
          - AMAZON
          - BLOG
          - EBAY
          - FACEBOOK
          - GOOGLE_DRIVE
          - GOOGLE_PLUS
          - INSTAGRAM
          - LINKEDIN
          - OTHER
          - PINTEREST
          - SKYPE
          - SLIDESHARE
          - TWITTER
          - WIKIPEDIA
          - XING
          - YELP
          - YOUTUBE
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        url:
          type: string
    onlyId:
      type: object
      properties:
        id:
          type: string
    opportunity:
      required:
      - customerId
      - name
      - salesStageId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        contactId:
          type: string
          x-relatedEntityName: party
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        customerId:
          type: string
          x-relatedEntityName: party
        customerNumber:
          type: string
        description:
          type: string
        expectedDeliveryDate:
          type: integer
          format: timestamp
        expectedSignatureDate:
          type: integer
          format: timestamp
        hotLead:
          type: boolean
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
        nextCallDate:
          type: integer
          format: timestamp
        opportunityNumber:
          type: string
        responsibleUserId:
          type: string
          x-relatedEntityName: user
        responsibleUserUsername:
          type: string
        revenue:
          type: string
          format: number
        salesChannel:
          type: string
        salesProbability:
          type: integer
          format: int32
        salesStageHistory:
          type: array
          items:
            $ref: '#/components/schemas/salesStageHistory'
        salesStageId:
          type: string
          x-relatedEntityName: salesStage
        salesStageName:
          type: string
        startDate:
          type: integer
          format: timestamp
        topics:
          type: array
          items:
            $ref: '#/components/schemas/entity'
        winLossDescription:
          type: string
        winLossReasonId:
          type: string
          x-relatedEntityName: opportunityWinLossReason
        winLossReasonName:
          type: string
    party:
      required:
      - partyType
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/address'
        bankAccounts:
          type: array
          items:
            $ref: '#/components/schemas/partyBankAccount'
        birthDate:
          type: integer
          format: timestamp
        commercialLanguageId:
          type: string
          x-relatedEntityName: commercialLanguage
        commissionSalesPartners:
          type: array
          items:
            $ref: '#/components/schemas/commissionSalesPartner'
        company:
          type: string
        company2:
          type: string
        companySizeId:
          type: string
          x-relatedEntityName: companySize
        companySizeName:
          type: string
        competitor:
          type: boolean
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/onlyId'
        createdDate:
          type: integer
          format: timestamp
        currencyId:
          type: string
          x-relatedEntityName: currency
        currencyName:
          type: string
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        customer:
          type: boolean
        customerAmountInsured:
          type: string
          format: number
        customerAnnualRevenue:
          type: string
          format: number
        customerBlockNotice:
          type: string
        customerBlocked:
          type: boolean
        customerBusinessType:
          type: string
          enum:
          - B2B
          - B2C
          - B2G
        customerCategoryId:
          type: string
          x-relatedEntityName: customerCategory
        customerCategoryName:
          type: string
        customerCreditLimit:
          type: string
          format: number
        customerCurrentSalesStageId:
          type: string
          x-relatedEntityName: salesStage
        customerCurrentSalesStageName:
          type: string
        customerDebtorAccountId:
          type: string
          x-relatedEntityName: ledgerAccount
        customerDebtorAccountNumber:
          type: string
        customerDebtorAccountingCodeId:
          type: string
          x-relatedEntityName: personalAccountingCode
        customerDefaultHeaderDiscount:
          type: string
          format: number
        customerDefaultHeaderSurcharge:
          type: string
          format: number
        customerDeliveryBlock:
          type: boolean
        customerInsolvent:
          type: boolean
        customerInsured:
          type: boolean
        customerLossDescription:
          type: string
        customerLossReasonId:
          type: string
          x-relatedEntityName: customerLeadLossReason
        customerLossReasonName:
          type: string
        customerNumber:
          type: string
        customerNumberOld:
          type: string
        customerPaymentMethodId:
          type: string
          x-relatedEntityName: paymentMethod
        customerPaymentMethodName:
          type: string
        customerSalesChannel:
          type: string
        customerSalesPartner:
          type: boolean
        customerSalesPartnerDefaultCommissionFix:
          type: string
          format: number
        customerSalesPartnerDefaultCommissionPercentage:
          type: string
          format: number
        customerSalesPartnerDefaultCommissionType:
          type: string
          enum:
          - FIX
          - FIX_AND_MARGIN
          - FIX_AND_REVENUE
          - MARGIN
          - NO_COMMISSION
          - REVENUE
        customerSalesProbability:
          type: integer
          format: int32
        customerSalesStageHistory:
          type: array
          items:
            $ref: '#/components/schemas/salesStageHistory'
        customerSatisfaction:
          type: string
          enum:
          - NEUTRAL
          - SATISFIED
          - UNSATISFIED
        customerShipmentMethodId:
          type: string
          x-relatedEntityName: shipmentMethod
        customerShipmentMethodName:
          type: string
        customerSupplierNumber:
          type: string
        customerTermOfPaymentId:
          type: string
          x-relatedEntityName: termOfPayment
        customerTermOfPaymentName:
          type: string
        customerUseCustomsTariffNumber:
          type: boolean
        deliveryAddressId:
          type: string
        deliveryEmailAddressesId:
          type: string
        description:
          type: string
        dunningAddressId:
          type: string
        dunningEmailAddressesId:
          type: string
        email:
          type: string
        eoriNumber:
          type: string
        fax:
          type: string
        firstName:
          type: string
        fixPhone2:
          type: string
        fixedResponsibleUser:
          type: boolean
        habitualExporter:
          type: boolean
        imageId:
          type: string
        invoiceAddressId:
          type: string
        invoiceRecipientId:
          type: string
          x-relatedEntityName: party
        lastModifiedDate:
          type: integer
          format: timestamp
        lastName:
          type: string
        leadRatingId:
          type: string
          x-relatedEntityName: leadRating
        leadRatingName:
          type: string
        leadSourceId:
          type: string
          x-relatedEntityName: leadSource
        leadSourceName:
          type: string
        leadStatus:
          type: string
          enum:
          - CONVERTED
          - DISQUALIFIED
          - NEW
          - PREQUALIFIED
          - QUALIFIED
        legalFormId:
          type: string
          x-relatedEntityName: legalForm
        legalFormName:
          type: string
        middleName:
          type: string
        mobilePhone1:
          type: string
        mobilePhone2:
          type: string
        onlineAccounts:
          type: array
          items:
            $ref: '#/components/schemas/onlineAccount'
        optInEmail:
          type: boolean
        optInLetter:
          type: boolean
        optInPhone:
          type: boolean
        optInSms:
          type: boolean
        parentPartyId:
          type: string
          x-relatedEntityName: party
        partyEmailAddresses:
          type: array
          items:
            $ref: '#/components/schemas/partyEmailAddresses'
        partyHabitualExporterLettersOfIntent:
          type: array
          items:
            $ref: '#/components/schemas/partyHabitualExporterLetterOfIntent'
        partyType:
          type: string
          enum:
          - ORGANIZATION
          - PERSON
        personCompany:
          type: string
        personDepartment:
          type: string
        personRole:
          type: string
        phone:
          type: string
        phoneHome:
          type: string
        primaryAddressId:
          type: string
        primaryContactId:
          type: string
          x-relatedEntityName: party
        purchaseEmailAddressesId:
          type: string
        purchaseViaPlafond:
          type: boolean
        quotationEmailAddressesId:
          type: string
        ratingId:
          type: string
          x-relatedEntityName: partyRating
        ratingName:
          type: string
        referenceNumber:
          type: string
        responsibleUserId:
          type: string
          x-relatedEntityName: user
        responsibleUserUsername:
          type: string
        salesInvoiceEmailAddressesId:
          type: string
        salesOrderEmailAddressesId:
          type: string
        salutation:
          type: string
          enum:
          - COMPANY
          - FAMILY
          - MR
          - MRS
          - NO_SALUTATION
        sectorId:
          type: string
          x-relatedEntityName: sector
        sectorName:
          type: string
        supplier:
          type: boolean
        supplierCreditorAccountId:
          type: string
          x-relatedEntityName: ledgerAccount
        supplierCreditorAccountNumber:
          type: string
        supplierCreditorAccountingCodeId:
          type: string
          x-relatedEntityName: personalAccountingCode
        supplierCustomerNumberAtSupplier:
          type: string
        supplierNumber:
          type: string
        supplierNumberOld:
          type: string
        supplierOrderBlock:
          type: boolean
        supplierPaymentMethodId:
          type: string
          x-relatedEntityName: paymentMethod
        supplierPaymentMethodName:
          type: string
        supplierShipmentMethodId:
          type: string
          x-relatedEntityName: shipmentMethod
        supplierShipmentMethodName:
          type: string
        supplierTermOfPaymentId:
          type: string
          x-relatedEntityName: termOfPayment
        supplierTermOfPaymentName:
          type: string
        tags:
          type: array
          items:
            type: string
        taxId:
          type: string
          x-relatedEntityName: tax
        title:
          type: string
        titleId:
          type: string
          x-relatedEntityName: title
        topics:
          type: array
          items:
            $ref: '#/components/schemas/entity'
        vatIdentificationNumber:
          type: string
        website:
          type: string
        xRechnungLeitwegId:
          type: string
    partyBankAccount:
      required:
      - accountNumber
      - bankCode
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        accountHolder:
          type: string
        accountNumber:
          type: string
        bankCode:
          type: string
        createdDate:
          type: integer
          format: timestamp
        creditInstitute:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        primary:
          type: boolean
    partyEmailAddresses:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        bccAddresses:
          type: string
        ccAddresses:
          type: string
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        toAddresses:
          type: string
    partyHabitualExporterLetterOfIntent:
      required:
      - date
      - numberDeclarer
      - type
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        automaticallySuggestInInvoice:
          type: boolean
        createdDate:
          type: integer
          format: timestamp
        date:
          type: integer
          format: timestamp
        fromSupplier:
          type: boolean
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/onlyId'
        lastModifiedDate:
          type: integer
          format: timestamp
        numberDeclarer:
          type: string
        numberSupplier:
          type: string
        totalAmount:
          type: string
          format: number
        type:
          type: string
          enum:
          - MULTIPLE_ACCOUNTING_EVENTS
          - SINGLE_ACCOUNTING_EVENT
    paymentMethod:
      required:
      - name
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
    productionOrder:
      required:
      - articleId
      - status
      - targetEndDate
      - targetQuantity
      - targetStartDate
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        actualEndDate:
          type: integer
          format: timestamp
        actualQuantity:
          type: string
          format: number
        actualStartDate:
          type: integer
          format: timestamp
        allWithdrawalsConfirmed:
          type: boolean
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        assignedPickingUserId:
          type: string
          x-relatedEntityName: user
        assignedPickingUserUpdateDate:
          type: integer
          format: timestamp
        assignedPickingUserUsername:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        lastModifiedDate:
          type: integer
          format: timestamp
        pickingInstructions:
          type: string
        productionOrderItems:
          type: array
          items:
            $ref: '#/components/schemas/productionOrderItem'
        productionOrderNumber:
          type: string
        status:
          type: string
          enum:
          - CANCELLED
          - CLOSED
          - DOCUMENTS_PRINTED
          - ENTRY_IN_PROGRESS
          - INTERRUPTED
          - NEW
          - STARTED
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/productionOrderStatusHistory'
        targetEndDate:
          type: integer
          format: timestamp
        targetQuantity:
          type: string
          format: number
        targetStartDate:
          type: integer
          format: timestamp
        warehouseId:
          type: string
          x-relatedEntityName: warehouse
        warehouseName:
          type: string
        withdrawalsComplete:
          type: boolean
    productionOrderItem:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        actualWithdrawalDate:
          type: integer
          format: timestamp
        actualWithdrawalQuantity:
          type: string
          format: number
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        lastModifiedDate:
          type: integer
          format: timestamp
        note:
          type: string
        positionNumber:
          type: integer
          format: int32
        quantity:
          type: string
          format: number
        targetWithdrawalDate:
          type: integer
          format: timestamp
        targetWithdrawalQuantity:
          type: string
          format: number
    productionOrderStatusHistory:
      type: object
      properties:
        status:
          type: string
          enum:
          - CANCELLED
          - CLOSED
          - DOCUMENTS_PRINTED
          - ENTRY_IN_PROGRESS
          - INTERRUPTED
          - NEW
          - STARTED
        statusDate:
          type: integer
          format: timestamp
        userId:
          type: string
          x-relatedEntityName: user
    purchaseInvoice:
      required:
      - paymentStatus
      - status
      - supplierId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        commercialLanguage:
          type: string
        costCenterId:
          type: string
          x-relatedEntityName: costCenter
        costCenterNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        currencyConversionDate:
          type: integer
          format: timestamp
        currencyConversionRate:
          type: string
          format: number
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        description:
          type: string
        disableEmailTemplate:
          type: boolean
        dueDate:
          type: integer
          format: timestamp
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        headerDiscount:
          type: string
          format: number
        headerSurcharge:
          type: string
          format: number
        internalInvoiceNumber:
          type: string
        invoiceDate:
          type: integer
          format: timestamp
        invoiceNumber:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        netAmount:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        nonStandardTaxId:
          type: string
          x-relatedEntityName: tax
        nonStandardTaxName:
          type: string
        paymentMethodId:
          type: string
          x-relatedEntityName: paymentMethod
        paymentMethodName:
          type: string
        paymentStatus:
          type: string
          enum:
          - CLEARED_WITH_CREDIT_NOTE
          - CREDIT_NOTE_CLEARED
          - NO_OPEN_ITEM
          - OPEN
          - PAID
          - UNKNOWN
        pricingDate:
          type: integer
          format: timestamp
        purchaseInvoiceItems:
          type: array
          items:
            $ref: '#/components/schemas/purchaseInvoiceItem'
        purchaseInvoiceType:
          type: string
          enum:
          - CREDIT_NOTE
          - STANDARD_INVOICE
        purchaseOrders:
          type: array
          items:
            $ref: '#/components/schemas/onlyId'
        recordAddress:
          $ref: '#/components/schemas/recordAddress'
        recordComment:
          type: string
        recordCurrencyId:
          type: string
          x-relatedEntityName: currency
        recordCurrencyName:
          type: string
        recordEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        recordFreeText:
          type: string
        recordOpening:
          type: string
        responsibleUserId:
          type: string
          x-relatedEntityName: user
        responsibleUserUsername:
          type: string
        sentToRecipient:
          type: boolean
        servicePeriodFrom:
          type: integer
          format: timestamp
        servicePeriodTo:
          type: integer
          format: timestamp
        shippingCostItems:
          type: array
          items:
            $ref: '#/components/schemas/purchaseShippingCostItem'
        status:
          type: string
          enum:
          - APPROVED
          - BOOKED
          - BOOKING_APPROVED
          - BOOKING_ERROR
          - DOCUMENT_CREATED
          - ENTRY_COMPLETED
          - INVOICE_CHECKED
          - INVOICE_VERIFICATION
          - NEW
          - QUERY_INVOICE
          - SENT
          - VOID
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/invoiceStatusHistory'
        supplierHabitualExporterLetterOfIntentId:
          type: string
        supplierId:
          type: string
          x-relatedEntityName: party
        supplierNumber:
          type: string
        tags:
          type: array
          items:
            type: string
        termOfPaymentId:
          type: string
          x-relatedEntityName: termOfPayment
        termOfPaymentName:
          type: string
    purchaseInvoiceItem:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        accountId:
          type: string
          x-relatedEntityName: ledgerAccount
        accountNumber:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        costCenterItems:
          type: array
          items:
            $ref: '#/components/schemas/costCenterWithDistributionPercentage'
        createdDate:
          type: integer
          format: timestamp
        creditedInvoiceItemId:
          type: string
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        description:
          type: string
        discountPercentage:
          type: string
          format: number
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        lastModifiedDate:
          type: integer
          format: timestamp
        manualUnitPrice:
          type: boolean
        netAmount:
          type: string
          format: number
        netAmountForStatistics:
          type: string
          format: number
        netAmountForStatisticsInCompanyCurrency:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        note:
          type: string
        parentItemId:
          type: string
        positionNumber:
          type: integer
          format: int32
        quantity:
          type: string
          format: number
        reductionAdditionItems:
          type: array
          items:
            $ref: '#/components/schemas/reductionAdditionItem'
        supplierArticleId:
          type: string
          x-relatedEntityName: article
        taxId:
          type: string
          x-relatedEntityName: tax
        taxName:
          type: string
        title:
          type: string
        unitId:
          type: string
          x-relatedEntityName: unit
        unitName:
          type: string
        unitPrice:
          type: string
          format: number
        unitPriceInCompanyCurrency:
          type: string
          format: number
    purchaseOrder:
      required:
      - status
      - supplierId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        commercialLanguage:
          type: string
        createdDate:
          type: integer
          format: timestamp
        currencyConversionDate:
          type: integer
          format: timestamp
        currencyConversionRate:
          type: string
          format: number
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        deliveryAddress:
          $ref: '#/components/schemas/recordAddress'
        description:
          type: string
        disableEmailTemplate:
          type: boolean
        externalPurchaseOrderNumber:
          type: string
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        headerDiscount:
          type: string
          format: number
        headerSurcharge:
          type: string
          format: number
        invoiceAddress:
          $ref: '#/components/schemas/recordAddress'
        lastModifiedDate:
          type: integer
          format: timestamp
        netAmount:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        nonStandardTaxId:
          type: string
          x-relatedEntityName: tax
        nonStandardTaxName:
          type: string
        orderDate:
          type: integer
          format: timestamp
        paymentMethodId:
          type: string
          x-relatedEntityName: paymentMethod
        paymentMethodName:
          type: string
        plannedDeliveryDate:
          type: integer
          format: timestamp
        purchaseOrderItems:
          type: array
          items:
            $ref: '#/components/schemas/purchaseOrderItem'
        purchaseOrderNumber:
          type: string
        purchaseOrderType:
          type: string
          enum:
          - AUTOMATIC
          - BLANKET_PURCHASE_ORDER
          - CREDIT
          - EXEMPLAR
          - NORMAL
          - PROJECT
          - SALES_ORDER
          - TRIANGULAR
        received:
          type: boolean
        recordAddress:
          $ref: '#/components/schemas/recordAddress'
        recordComment:
          type: string
        recordCurrencyId:
          type: string
          x-relatedEntityName: currency
        recordCurrencyName:
          type: string
        recordEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        recordFreeText:
          type: string
        recordOpening:
          type: string
        responsibleUserId:
          type: string
          x-relatedEntityName: user
        responsibleUserUsername:
          type: string
        salesOrderId:
          type: string
          x-relatedEntityName: salesOrder
        salesOrderNumber:
          type: string
        sentToRecipient:
          type: boolean
        servicePeriodFrom:
          type: integer
          format: timestamp
        servicePeriodTo:
          type: integer
          format: timestamp
        shipmentMethodId:
          type: string
          x-relatedEntityName: shipmentMethod
        shipmentMethodName:
          type: string
        shippingCostItems:
          type: array
          items:
            $ref: '#/components/schemas/purchaseShippingCostItem'
        status:
          type: string
          enum:
          - CANCELLED
          - CLOSED
          - CONFIRMED
          - NEW
          - ORDER_DOCUMENTS_PRINTED
          - ORDER_ENTRY_COMPLETED
          - ORDER_ENTRY_IN_PROGRESS
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/purchaseOrderStatusHistory'
        supplierHabitualExporterLetterOfIntentId:
          type: string
        supplierId:
          type: string
          x-relatedEntityName: party
        supplierNumber:
          type: string
        tags:
          type: array
          items:
            type: string
        termOfPaymentId:
          type: string
          x-relatedEntityName: termOfPayment
        termOfPaymentName:
          type: string
        warehouseId:
          type: string
          x-relatedEntityName: warehouse
        warehouseName:
          type: string
    purchaseOrderItem:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        addPageBreakBefore:
          type: boolean
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        description:
          type: string
        discountPercentage:
          type: string
          format: number
        freeTextItem:
          type: boolean
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        groupName:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        manualUnitPrice:
          type: boolean
        netAmount:
          type: string
          format: number
        netAmountForStatistics:
          type: string
          format: number
        netAmountForStatisticsInCompanyCurrency:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        note:
          type: string
        parentItemId:
          type: string
        plannedDeliveryDate:
          type: integer
          format: timestamp
        plannedShippingDate:
          type: integer
          format: timestamp
        positionNumber:
          type: integer
          format: int32
        quantity:
          type: string
          format: number
        receivedQuantity:
          type: string
          format: number
        reductionAdditionItems:
          type: array
          items:
            $ref: '#/components/schemas/reductionAdditionItem'
        supplierArticleId:
          type: string
          x-relatedEntityName: article
        taxId:
          type: string
          x-relatedEntityName: tax
        taxName:
          type: string
        title:
          type: string
        unitId:
          type: string
          x-relatedEntityName: unit
        unitName:
          type: string
        unitPrice:
          type: string
          format: number
        unitPriceInCompanyCurrency:
          type: string
          format: number
    purchaseOrderRequest:
      required:
      - purchaseOrderRequestNumber
      - purchaseOrderRequestType
      - status
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        commercialLanguage:
          type: string
        confirmationDeadline:
          type: integer
          format: timestamp
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        deliveryAddress:
          $ref: '#/components/schemas/recordAddress'
        description:
          type: string
        disableEmailTemplate:
          type: boolean
        invoiceAddress:
          $ref: '#/components/schemas/recordAddress'
        lastModifiedDate:
          type: integer
          format: timestamp
        plannedDeliveryDate:
          type: integer
          format: timestamp
        purchaseOrderRequestItems:
          type: array
          items:
            $ref: '#/components/schemas/purchaseOrderRequestItem'
        purchaseOrderRequestNumber:
          type: string
        purchaseOrderRequestOffers:
          type: array
          items:
            $ref: '#/components/schemas/purchaseOrderRequestOffer'
        purchaseOrderRequestType:
          type: string
          enum:
          - BLANKET_ORDER_REQUEST
          - DROP_SHIPPING_REQUEST
          - PURCHASE_ORDER_REQUEST
          - SALES_ORDER_COMMISSION_REQUEST
        quotationId:
          type: string
          x-relatedEntityName: quotation
        quotationNumber:
          type: string
        recordAddress:
          $ref: '#/components/schemas/recordAddress'
        recordComment:
          type: string
        recordFreeText:
          type: string
        recordOpening:
          type: string
        responsibleUserId:
          type: string
          x-relatedEntityName: user
        responsibleUserUsername:
          type: string
        salesOrderId:
          type: string
          x-relatedEntityName: salesOrder
        salesOrderNumber:
          type: string
        sentToRecipient:
          type: boolean
        status:
          type: string
          enum:
          - CANCELLED
          - CLOSED
          - DOCUMENT_PRINTED
          - NEW
          - OFFER_RECEIVED
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/purchaseOrderRequestStatusHistory'
        tags:
          type: array
          items:
            type: string
        warehouseId:
          type: string
          x-relatedEntityName: warehouse
        warehouseName:
          type: string
    purchaseOrderRequestItem:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        deleted:
          type: boolean
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        note:
          type: string
        parentItemId:
          type: string
        positionNumber:
          type: integer
          format: int32
        priceScaleType:
          type: string
          enum:
          - SCALE_FROM
          - SCALE_TO
        priceScaleValues:
          type: array
          items:
            type: string
            format: number
        quantity:
          type: string
          format: number
        title:
          type: string
        unitId:
          type: string
          x-relatedEntityName: unit
        unitName:
          type: string
    purchaseOrderRequestOffer:
      required:
      - status
      - supplierId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        commercialLanguage:
          type: string
        createdDate:
          type: integer
          format: timestamp
        currencyConversionDate:
          type: integer
          format: timestamp
        currencyConversionRate:
          type: string
          format: number
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        description:
          type: string
        disableEmailTemplate:
          type: boolean
        endDate:
          type: integer
          format: timestamp
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        headerDiscount:
          type: string
          format: number
        headerSurcharge:
          type: string
          format: number
        lastModifiedDate:
          type: integer
          format: timestamp
        netAmount:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        nonStandardTaxId:
          type: string
          x-relatedEntityName: tax
        nonStandardTaxName:
          type: string
        offerDate:
          type: integer
          format: timestamp
        paymentMethodId:
          type: string
          x-relatedEntityName: paymentMethod
        paymentMethodName:
          type: string
        plannedDeliveryDate:
          type: integer
          format: timestamp
        purchaseOrderRequestOfferItems:
          type: array
          items:
            $ref: '#/components/schemas/purchaseOrderRequestOfferItem'
        recordComment:
          type: string
        recordCurrencyId:
          type: string
          x-relatedEntityName: currency
        recordCurrencyName:
          type: string
        recordEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        recordFreeText:
          type: string
        recordOpening:
          type: string
        replyDate:
          type: integer
          format: timestamp
        requestDate:
          type: integer
          format: timestamp
        sentToRecipient:
          type: boolean
        startDate:
          type: integer
          format: timestamp
        status:
          type: string
          enum:
          - ACCEPTED
          - DECLINED
          - OFFER_RECEIVED
          - OPEN
          - REQUESTED
          - REVISED
          - REVISED_REQUEST
        supplierId:
          type: string
          x-relatedEntityName: party
        supplierNumber:
          type: string
        supplierReference:
          type: string
        tags:
          type: array
          items:
            type: string
        termOfPaymentId:
          type: string
          x-relatedEntityName: termOfPayment
        termOfPaymentName:
          type: string
        validFrom:
          type: integer
          format: timestamp
        validTo:
          type: integer
          format: timestamp
    purchaseOrderRequestOfferItem:
      required:
      - accepted
      - procurementLeadDays
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        accepted:
          type: boolean
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        containerQuantity:
          type: string
          format: number
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        description:
          type: string
        discountPercentage:
          type: string
          format: number
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        lastModifiedDate:
          type: integer
          format: timestamp
        manualUnitPrice:
          type: boolean
        minQuantity:
          type: string
          format: number
        netAmount:
          type: string
          format: number
        netAmountForStatistics:
          type: string
          format: number
        netAmountForStatisticsInCompanyCurrency:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        note:
          type: string
        orderedQuantity:
          type: string
          format: number
        parentItemId:
          type: string
        positionNumber:
          type: integer
          format: int32
        procurementLeadDays:
          type: integer
          format: int32
        purchaseOrderRequestItemId:
          type: integer
          format: int32
        quantity:
          type: string
          format: number
        reductionAdditionItems:
          type: array
          items:
            $ref: '#/components/schemas/reductionAdditionItem'
        scaleType:
          type: string
          enum:
          - SCALE_FROM
          - SCALE_TO
        scaleValues:
          type: array
          items:
            $ref: '#/components/schemas/purchaseOrderRequestOfferItemScaleValue'
        supplierArticleNumber:
          type: string
        taxId:
          type: string
          x-relatedEntityName: tax
        taxName:
          type: string
        title:
          type: string
        unitId:
          type: string
          x-relatedEntityName: unit
        unitName:
          type: string
        unitPrice:
          type: string
          format: number
        unitPriceInCompanyCurrency:
          type: string
          format: number
    purchaseOrderRequestOfferItemInformation:
      type: object
      properties:
        offerItemId:
          type: integer
          format: int32
        quantity:
          type: string
          format: number
        salesOrderItemId:
          type: integer
          format: int32
        updateInformation:
          type: boolean
    purchaseOrderRequestOfferItemScaleValue:
      type: object
      properties:
        price:
          type: string
          format: number
        scale:
          type: string
          format: number
    purchaseOrderRequestStatusHistory:
      type: object
      properties:
        status:
          type: string
          enum:
          - CANCELLED
          - CLOSED
          - DOCUMENT_PRINTED
          - NEW
          - OFFER_RECEIVED
        statusDate:
          type: integer
          format: timestamp
        userId:
          type: string
          x-relatedEntityName: user
    purchaseOrderStatusHistory:
      type: object
      properties:
        status:
          type: string
          enum:
          - CANCELLED
          - CLOSED
          - CONFIRMED
          - NEW
          - ORDER_DOCUMENTS_PRINTED
          - ORDER_ENTRY_COMPLETED
          - ORDER_ENTRY_IN_PROGRESS
        statusDate:
          type: integer
          format: timestamp
        userId:
          type: string
          x-relatedEntityName: user
    purchaseShippingCostItem:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        lastModifiedDate:
          type: integer
          format: timestamp
        manualUnitPrice:
          type: boolean
        netAmount:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        taxId:
          type: string
          x-relatedEntityName: tax
        taxName:
          type: string
        unitPrice:
          type: string
          format: number
        unitPriceInCompanyCurrency:
          type: string
          format: number
    quotation:
      required:
      - customerId
      - status
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        activeVersion:
          type: boolean
        commercialLanguage:
          type: string
        commission:
          type: string
        createdDate:
          type: integer
          format: timestamp
        currencyConversionDate:
          type: integer
          format: timestamp
        currencyConversionRate:
          type: string
          format: number
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        customerId:
          type: string
          x-relatedEntityName: party
        customerNumber:
          type: string
        deliveryAddress:
          $ref: '#/components/schemas/recordAddress'
        deliveryEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        description:
          type: string
        disableEmailTemplate:
          type: boolean
        dispatchCountryCode:
          type: string
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        headerDiscount:
          type: string
          format: number
        headerSurcharge:
          type: string
          format: number
        invoiceAddress:
          $ref: '#/components/schemas/recordAddress'
        invoiceRecipientId:
          type: string
          x-relatedEntityName: party
        lastModifiedDate:
          type: integer
          format: timestamp
        netAmount:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        nonStandardTaxId:
          type: string
          x-relatedEntityName: tax
        nonStandardTaxName:
          type: string
        opportunityId:
          type: string
          x-relatedEntityName: opportunity
        opportunityNumber:
          type: string
        paymentMethodId:
          type: string
          x-relatedEntityName: paymentMethod
        paymentMethodName:
          type: string
        plannedDeliveryDate:
          type: integer
          format: timestamp
        plannedShippingDate:
          type: integer
          format: timestamp
        pricingDate:
          type: integer
          format: timestamp
        quotationDate:
          type: integer
          format: timestamp
        quotationItems:
          type: array
          items:
            $ref: '#/components/schemas/quotationItem'
        quotationNumber:
          type: string
        quotationType:
          type: string
          enum:
          - CONTRACT
          - NONE
          - PROJECT
          - SALES_INVOICE
          - SALES_ORDER
        quotationVersion:
          type: integer
          format: int32
        recordAddress:
          $ref: '#/components/schemas/recordAddress'
        recordComment:
          type: string
        recordCurrencyId:
          type: string
          x-relatedEntityName: currency
        recordCurrencyName:
          type: string
        recordEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        recordFreeText:
          type: string
        recordOpening:
          type: string
        responsibleUserId:
          type: string
          x-relatedEntityName: user
        responsibleUserUsername:
          type: string
        salesChannel:
          type: string
        salesInvoiceEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        salesOrderEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        salesProbability:
          type: integer
          format: int32
        salesStageHistory:
          type: array
          items:
            $ref: '#/components/schemas/salesStageHistory'
        salesStageId:
          type: string
          x-relatedEntityName: salesStage
        salesStageName:
          type: string
        sentToRecipient:
          type: boolean
        servicePeriodFrom:
          type: integer
          format: timestamp
        servicePeriodTo:
          type: integer
          format: timestamp
        shipmentMethodId:
          type: string
          x-relatedEntityName: shipmentMethod
        shipmentMethodName:
          type: string
        shippingCostItems:
          type: array
          items:
            $ref: '#/components/schemas/salesShippingCostItem'
        status:
          type: string
          enum:
          - ACCEPTED
          - CLOSED
          - INQUIRED
          - OPEN
          - REJECTED
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/quotationStatusHistory'
        tags:
          type: array
          items:
            type: string
        termOfPaymentId:
          type: string
          x-relatedEntityName: termOfPayment
        termOfPaymentName:
          type: string
        validFrom:
          type: integer
          format: timestamp
        validTo:
          type: integer
          format: timestamp
        warehouseId:
          type: string
          x-relatedEntityName: warehouse
        warehouseName:
          type: string
    quotationItem:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        addPageBreakBefore:
          type: boolean
        alternative:
          type: boolean
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        description:
          type: string
        discountPercentage:
          type: string
          format: number
        freeTextItem:
          type: boolean
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        groupName:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        manualUnitCost:
          type: boolean
        manualUnitPrice:
          type: boolean
        netAmount:
          type: string
          format: number
        netAmountForStatistics:
          type: string
          format: number
        netAmountForStatisticsInCompanyCurrency:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        note:
          type: string
        optional:
          type: boolean
        parentItemId:
          type: string
        positionNumber:
          type: integer
          format: int32
        quantity:
          type: string
          format: number
        reductionAdditionItems:
          type: array
          items:
            $ref: '#/components/schemas/reductionAdditionItem'
        servicePeriodFrom:
          type: integer
          format: timestamp
        servicePeriodTo:
          type: integer
          format: timestamp
        taxId:
          type: string
          x-relatedEntityName: tax
        taxName:
          type: string
        title:
          type: string
        unitCost:
          type: string
          format: number
        unitCostInCompanyCurrency:
          type: string
          format: number
        unitId:
          type: string
          x-relatedEntityName: unit
        unitName:
          type: string
        unitPrice:
          type: string
          format: number
        unitPriceInCompanyCurrency:
          type: string
          format: number
    quotationStatusHistory:
      type: object
      properties:
        status:
          type: string
          enum:
          - ACCEPTED
          - CLOSED
          - INQUIRED
          - OPEN
          - REJECTED
        statusDate:
          type: integer
          format: timestamp
        userId:
          type: string
          x-relatedEntityName: user
    recordAddress:
      type: object
      properties:
        city:
          type: string
        company:
          type: string
        company2:
          type: string
        countryCode:
          type: string
        firstName:
          type: string
        globalLocationNumber:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        phoneNumber:
          type: string
        postOfficeBoxCity:
          type: string
        postOfficeBoxNumber:
          type: string
        postOfficeBoxZipCode:
          type: string
        salutation:
          type: string
          enum:
          - COMPANY
          - FAMILY
          - MR
          - MRS
          - NO_SALUTATION
        state:
          type: string
        street1:
          type: string
        street2:
          type: string
        title:
          type: string
        titleId:
          type: string
          x-relatedEntityName: title
        zipcode:
          type: string
    reductionAddition:
      required:
      - type
      - value
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
        type:
          type: string
          enum:
          - ADDITIONAL_ABS
          - ADDITION_PERCENT
          - REBATE_PERCENT
          - REDUCTION_ABS
          - REDUCTION_PERCENT
        value:
          type: string
          format: number
    reductionAdditionItem:
      type: object
      properties:
        position:
          type: integer
          format: int32
        source:
          type: string
          enum:
          - ARTICLE
          - ARTICLE_AND_CUSTOMER
          - ARTICLE_CATEGORY
          - ARTICLE_CATEGORY_AND_CUSTOMER
          - MANUAL
        type:
          type: string
          enum:
          - ADDITION_ABSOLUTE
          - ADDITION_PERCENT
          - REBATE_PERCENT
          - REDUCTION_ABSOLUTE
          - REDUCTION_PERCENT
        value:
          type: string
          format: number
    releases:
      required:
      - releasedQuantity
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        orderDate:
          type: integer
          format: timestamp
        plannedDeliveryDate:
          type: integer
          format: timestamp
        positionNumber:
          type: integer
          format: int32
        purchaseOrderId:
          type: string
          x-relatedEntityName: purchaseOrder
        releasedQuantity:
          type: string
          format: number
    remotePrintJob:
      required:
      - documentId
      - printStatus
      - printerName
      - quantity
      - weclappOsId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        documentId:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        printStatus:
          type: string
          enum:
          - DOCUMENT_NOT_FOUND
          - ERROR
          - NEW
          - PRINTED
          - SUBMITTED
          - UNKNOWN_PRINTER
        printerName:
          type: string
        quantity:
          type: integer
          format: int32
        userId:
          type: string
          x-relatedEntityName: user
        weclappOsHardwareId:
          type: string
        weclappOsId:
          type: string
          x-relatedEntityName: weclappOs
    salesBillOfMaterialArticleItem:
      required:
      - articleId
      - quantity
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        positionNumber:
          type: integer
          format: int32
        quantity:
          type: string
          format: number
    salesChannel:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
    salesInvoice:
      required:
      - customerId
      - paymentStatus
      - status
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        cancellationDate:
          type: integer
          format: timestamp
        commercialLanguage:
          type: string
        commission:
          type: string
        commissionSalesPartners:
          type: array
          items:
            $ref: '#/components/schemas/commissionSalesPartner'
        createdDate:
          type: integer
          format: timestamp
        currencyConversionDate:
          type: integer
          format: timestamp
        currencyConversionRate:
          type: string
          format: number
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        customerHabitualExporterLetterOfIntentId:
          type: string
        customerId:
          type: string
          x-relatedEntityName: party
        customerNumber:
          type: string
        deliveryAddress:
          $ref: '#/components/schemas/recordAddress'
        deliveryDate:
          type: integer
          format: timestamp
        description:
          type: string
        disableEmailTemplate:
          type: boolean
        dispatchCountryCode:
          type: string
        dueDate:
          type: integer
          format: timestamp
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        headerDiscount:
          type: string
          format: number
        headerSurcharge:
          type: string
          format: number
        invoiceDate:
          type: integer
          format: timestamp
        invoiceNumber:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        netAmount:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        nonStandardTaxId:
          type: string
          x-relatedEntityName: tax
        nonStandardTaxName:
          type: string
        orderNumberAtCustomer:
          type: string
        paid:
          type: boolean
        paymentMethodId:
          type: string
          x-relatedEntityName: paymentMethod
        paymentMethodName:
          type: string
        paymentStatus:
          type: string
          enum:
          - CLEARED_WITH_CREDIT_NOTE
          - CREDIT_NOTE_CLEARED
          - NO_OPEN_ITEM
          - OPEN
          - PAID
          - UNKNOWN
        pricingDate:
          type: integer
          format: timestamp
        recordAddress:
          $ref: '#/components/schemas/recordAddress'
        recordComment:
          type: string
        recordCurrencyId:
          type: string
          x-relatedEntityName: currency
        recordCurrencyName:
          type: string
        recordEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        recordFreeText:
          type: string
        recordOpening:
          type: string
        responsibleUserId:
          type: string
          x-relatedEntityName: user
        responsibleUserUsername:
          type: string
        salesChannel:
          type: string
        salesInvoiceItems:
          type: array
          items:
            $ref: '#/components/schemas/salesInvoiceItem'
        salesInvoiceType:
          type: string
          enum:
          - ADVANCE_PAYMENT_INVOICE
          - CREDIT_NOTE
          - FINAL_INVOICE
          - PART_PAYMENT_INVOICE
          - PREPAYMENT_INVOICE
          - STANDARD_INVOICE
        salesOrderId:
          type: string
          x-relatedEntityName: salesOrder
        salesOrderNumber:
          type: string
        salesOrders:
          type: array
          items:
            $ref: '#/components/schemas/onlyId'
        sentToRecipient:
          type: boolean
        servicePeriodFrom:
          type: integer
          format: timestamp
        servicePeriodTo:
          type: integer
          format: timestamp
        shipmentMethodId:
          type: string
          x-relatedEntityName: shipmentMethod
        shipmentMethodName:
          type: string
        shippingCostItems:
          type: array
          items:
            $ref: '#/components/schemas/salesShippingCostItem'
        shippingDate:
          type: integer
          format: timestamp
        status:
          type: string
          enum:
          - APPROVED
          - BOOKED
          - BOOKING_APPROVED
          - BOOKING_ERROR
          - DOCUMENT_CREATED
          - ENTRY_COMPLETED
          - INVOICE_CHECKED
          - INVOICE_VERIFICATION
          - NEW
          - QUERY_INVOICE
          - SENT
          - VOID
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/invoiceStatusHistory'
        tags:
          type: array
          items:
            type: string
        termOfPaymentId:
          type: string
          x-relatedEntityName: termOfPayment
        termOfPaymentName:
          type: string
        vatRegistrationNumber:
          type: string
    salesInvoiceItem:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        accountId:
          type: string
          x-relatedEntityName: ledgerAccount
        accountNumber:
          type: string
        addPageBreakBefore:
          type: boolean
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        costCenterItems:
          type: array
          items:
            $ref: '#/components/schemas/costCenterWithDistributionPercentage'
        createdDate:
          type: integer
          format: timestamp
        creditedInvoiceItemId:
          type: string
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        description:
          type: string
        discountPercentage:
          type: string
          format: number
        freeTextItem:
          type: boolean
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        groupName:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        manualUnitCost:
          type: boolean
        manualUnitPrice:
          type: boolean
        netAmount:
          type: string
          format: number
        netAmountForStatistics:
          type: string
          format: number
        netAmountForStatisticsInCompanyCurrency:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        note:
          type: string
        parentItemId:
          type: string
        positionNumber:
          type: integer
          format: int32
        quantity:
          type: string
          format: number
        reductionAdditionItems:
          type: array
          items:
            $ref: '#/components/schemas/reductionAdditionItem'
        servicePeriodFrom:
          type: integer
          format: timestamp
        servicePeriodTo:
          type: integer
          format: timestamp
        taxId:
          type: string
          x-relatedEntityName: tax
        taxName:
          type: string
        title:
          type: string
        unitCost:
          type: string
          format: number
        unitCostInCompanyCurrency:
          type: string
          format: number
        unitId:
          type: string
          x-relatedEntityName: unit
        unitName:
          type: string
        unitPrice:
          type: string
          format: number
        unitPriceInCompanyCurrency:
          type: string
          format: number
    salesOrder:
      required:
      - customerId
      - status
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        advancePaymentStatus:
          type: string
          enum:
          - OPEN
          - PAID
        cashAccountId:
          type: string
          x-relatedEntityName: cashAccount
        commercialLanguage:
          type: string
        commission:
          type: string
        commissionSalesPartners:
          type: array
          items:
            $ref: '#/components/schemas/commissionSalesPartner'
        createdDate:
          type: integer
          format: timestamp
        currencyConversionDate:
          type: integer
          format: timestamp
        currencyConversionRate:
          type: string
          format: number
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        customerHabitualExporterLetterOfIntentId:
          type: string
        customerId:
          type: string
          x-relatedEntityName: party
        customerNumber:
          type: string
        defaultShippingCarrierId:
          type: string
          x-relatedEntityName: shippingCarrier
        defaultShippingCarrierName:
          type: string
        defaultShippingReturnCarrierId:
          type: string
          x-relatedEntityName: shippingCarrier
        defaultShippingReturnCarrierName:
          type: string
        deliveryAddress:
          $ref: '#/components/schemas/recordAddress'
        deliveryEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        description:
          type: string
        disableEmailTemplate:
          type: boolean
        dispatchCountryCode:
          type: string
        ecommerceOrder:
          $ref: '#/components/schemas/ecommerceOrder'
        fulfillmentProviderId:
          type: string
          x-relatedEntityName: fulfillmentProvider
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        headerDiscount:
          type: string
          format: number
        headerSurcharge:
          type: string
          format: number
        invoiceAddress:
          $ref: '#/components/schemas/recordAddress'
        invoiceRecipientId:
          type: string
          x-relatedEntityName: party
        invoiced:
          type: boolean
        lastModifiedDate:
          type: integer
          format: timestamp
        netAmount:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        nonStandardTaxId:
          type: string
          x-relatedEntityName: tax
        nonStandardTaxName:
          type: string
        orderDate:
          type: integer
          format: timestamp
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/salesOrderItem'
        orderNumber:
          type: string
        orderNumberAtCustomer:
          type: string
        paid:
          type: boolean
        paymentMethodId:
          type: string
          x-relatedEntityName: paymentMethod
        paymentMethodName:
          type: string
        plannedDeliveryDate:
          type: integer
          format: timestamp
        plannedShippingDate:
          type: integer
          format: timestamp
        pricingDate:
          type: integer
          format: timestamp
        quotationId:
          type: string
          x-relatedEntityName: quotation
        quotationNumber:
          type: string
        recordAddress:
          $ref: '#/components/schemas/recordAddress'
        recordComment:
          type: string
        recordCurrencyId:
          type: string
          x-relatedEntityName: currency
        recordCurrencyName:
          type: string
        recordEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        recordFreeText:
          type: string
        recordOpening:
          type: string
        responsibleUserId:
          type: string
          x-relatedEntityName: user
        responsibleUserUsername:
          type: string
        salesChannel:
          type: string
        salesInvoiceEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        salesOrderPaymentType:
          type: string
          enum:
          - ADVANCE_PAYMENT
          - COUNTER_SALES
          - PART_PAYMENT
          - PREPAYMENT
          - STANDARD
        sentToRecipient:
          type: boolean
        servicePeriodFrom:
          type: integer
          format: timestamp
        servicePeriodTo:
          type: integer
          format: timestamp
        shipmentMethodId:
          type: string
          x-relatedEntityName: shipmentMethod
        shipmentMethodName:
          type: string
        shipped:
          type: boolean
        shippingCostItems:
          type: array
          items:
            $ref: '#/components/schemas/salesShippingCostItem'
        shippingLabelsCount:
          type: integer
          format: int32
        status:
          type: string
          enum:
          - CANCELLED
          - CLOSED
          - MANUALLY_CLOSED
          - ORDER_CONFIRMATION_PRINTED
          - ORDER_ENTRY_IN_PROGRESS
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/salesOrderStatusHistory'
        tags:
          type: array
          items:
            type: string
        termOfPaymentId:
          type: string
          x-relatedEntityName: termOfPayment
        termOfPaymentName:
          type: string
        warehouseId:
          type: string
          x-relatedEntityName: warehouse
        warehouseName:
          type: string
    salesOrderItem:
      required:
      - withdrawalSerialNumbers
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        addPageBreakBefore:
          type: boolean
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        description:
          type: string
        discountPercentage:
          type: string
          format: number
        ecommerceOrderItemId:
          type: string
        freeTextItem:
          type: boolean
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        groupName:
          type: string
        invoicedQuantity:
          type: string
          format: number
        lastModifiedDate:
          type: integer
          format: timestamp
        manualUnitCost:
          type: boolean
        manualUnitPrice:
          type: boolean
        netAmount:
          type: string
          format: number
        netAmountForStatistics:
          type: string
          format: number
        netAmountForStatisticsInCompanyCurrency:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        note:
          type: string
        parentItemId:
          type: string
        plannedShippingDate:
          type: integer
          format: timestamp
        positionNumber:
          type: integer
          format: int32
        quantity:
          type: string
          format: number
        reductionAdditionItems:
          type: array
          items:
            $ref: '#/components/schemas/reductionAdditionItem'
        servicePeriodFrom:
          type: integer
          format: timestamp
        servicePeriodTo:
          type: integer
          format: timestamp
        shipped:
          type: boolean
        shippedQuantity:
          type: string
          format: number
        taxId:
          type: string
          x-relatedEntityName: tax
        taxName:
          type: string
        title:
          type: string
        unitCost:
          type: string
          format: number
        unitCostInCompanyCurrency:
          type: string
          format: number
        unitId:
          type: string
          x-relatedEntityName: unit
        unitName:
          type: string
        unitPrice:
          type: string
          format: number
        unitPriceInCompanyCurrency:
          type: string
          format: number
        withdrawalBatchNumber:
          type: string
        withdrawalSerialNumbers:
          type: array
          items:
            type: string
        withdrawalWarehouseLevelId:
          type: string
          x-relatedEntityName: warehouseLevel
    salesOrderStatusHistory:
      type: object
      properties:
        status:
          type: string
          enum:
          - CANCELLED
          - CLOSED
          - MANUALLY_CLOSED
          - ORDER_CONFIRMATION_PRINTED
          - ORDER_ENTRY_IN_PROGRESS
        statusDate:
          type: integer
          format: timestamp
        userId:
          type: string
          x-relatedEntityName: user
    salesShippingCostItem:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        grossAmount:
          type: string
          format: number
        grossAmountInCompanyCurrency:
          type: string
          format: number
        lastModifiedDate:
          type: integer
          format: timestamp
        manualUnitCost:
          type: boolean
        manualUnitPrice:
          type: boolean
        netAmount:
          type: string
          format: number
        netAmountInCompanyCurrency:
          type: string
          format: number
        taxId:
          type: string
          x-relatedEntityName: tax
        taxName:
          type: string
        unitCost:
          type: string
          format: number
        unitCostInCompanyCurrency:
          type: string
          format: number
        unitPrice:
          type: string
          format: number
        unitPriceInCompanyCurrency:
          type: string
          format: number
    salesStage:
      required:
      - name
      - probability
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
        probability:
          type: integer
          format: int32
    salesStageHistory:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        salesStageId:
          type: string
          x-relatedEntityName: salesStage
        salesStageName:
          type: string
        userId:
          type: string
          x-relatedEntityName: user
    serialNumber:
      required:
      - articleId
      - serialNumber
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        serialNumber:
          type: string
    shipment:
      required:
      - status
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        additionalDeliveryInformation:
          type: string
        allWithdrawalsConfirmed:
          type: boolean
        assignedPickingUserId:
          type: string
          x-relatedEntityName: user
        assignedPickingUserUpdateDate:
          type: integer
          format: timestamp
        assignedPickingUserUsername:
          type: string
        commercialLanguage:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        customerPurchaseOrderNumber:
          type: string
        declaredValueAmount:
          type: string
          format: number
        declaredValueAmountCurrencyId:
          type: string
          x-relatedEntityName: currency
        declaredValueAmountCurrencyName:
          type: string
        deliveryDate:
          type: integer
          format: timestamp
        description:
          type: string
        destinationWarehouseId:
          type: string
          x-relatedEntityName: warehouse
        destinationWarehouseLevelId:
          type: string
          x-relatedEntityName: warehouseLevel
        destinationWarehouseName:
          type: string
        disableEmailTemplate:
          type: boolean
        invoiceAddress:
          $ref: '#/components/schemas/recordAddress'
        invoiceRecipientId:
          type: string
          x-relatedEntityName: party
        lastModifiedDate:
          type: integer
          format: timestamp
        packageHeight:
          type: integer
          format: int32
        packageLength:
          type: integer
          format: int32
        packageReferenceNumber:
          type: string
        packageReturnTrackingNumber:
          type: string
        packageReturnTrackingUrl:
          type: string
        packageTrackingNumber:
          type: string
        packageTrackingUrl:
          type: string
        packageWeight:
          type: string
          format: number
        packageWidth:
          type: integer
          format: int32
        pickingInstructions:
          type: string
        purchaseOrders:
          type: array
          items:
            $ref: '#/components/schemas/onlyId'
        recipientAddress:
          $ref: '#/components/schemas/recordAddress'
        recipientCustomerNumber:
          type: string
        recipientPartyId:
          type: string
          x-relatedEntityName: party
        recipientSupplierNumber:
          type: string
        recordComment:
          type: string
        recordEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        recordFreeText:
          type: string
        recordOpening:
          type: string
        salesInvoiceEmailAddresses:
          $ref: '#/components/schemas/emailAddresses'
        salesOrderId:
          type: string
          x-relatedEntityName: salesOrder
        salesOrderNumber:
          type: string
        sentToRecipient:
          type: boolean
        shipmentItems:
          type: array
          items:
            $ref: '#/components/schemas/shipmentItem'
        shipmentMethodId:
          type: string
          x-relatedEntityName: shipmentMethod
        shipmentMethodName:
          type: string
        shipmentNumber:
          type: string
        shipmentType:
          type: string
          enum:
          - CONSIGNMENT
          - CONSIGNMENT_RETURN
          - CUSTOMER_COMPENSATION
          - INTERNAL
          - STANDARD
          - SUPPLIER_RETURN
        shippedFromAddress:
          $ref: '#/components/schemas/recordAddress'
        shippingCarrierId:
          type: string
          x-relatedEntityName: shippingCarrier
        shippingCarrierName:
          type: string
        shippingDate:
          type: integer
          format: timestamp
        shippingLabelsCount:
          type: integer
          format: int32
        shippingReturnCarrierId:
          type: string
          x-relatedEntityName: shippingCarrier
        shippingReturnCarrierName:
          type: string
        status:
          type: string
          enum:
          - CANCELLED
          - DELIVERED
          - DELIVERY_NOTE_PRINTED
          - INCOMING_CANCELLED
          - INCOMING_GOODS_MOVEMENT_PRINTED
          - INCOMING_MOVED_INTO_STORE
          - INCOMING_SHIPPED
          - IN_ROUTE
          - NEW
          - SHIPPED
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/shipmentStatus'
        tags:
          type: array
          items:
            type: string
        warehouseId:
          type: string
          x-relatedEntityName: warehouse
        warehouseName:
          type: string
        withdrawalsComplete:
          type: boolean
    shipmentItem:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        addPageBreakBefore:
          type: boolean
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        description:
          type: string
        freeTextItem:
          type: boolean
        groupName:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        note:
          type: string
        parentItemId:
          type: string
        positionNumber:
          type: integer
          format: int32
        quantity:
          type: string
          format: number
        returnAssessmentId:
          type: string
          x-relatedEntityName: shipmentReturnAssessment
        returnAssessmentName:
          type: string
        returnDescription:
          type: string
        returnErrorId:
          type: string
          x-relatedEntityName: shipmentReturnError
        returnErrorName:
          type: string
        returnReasonId:
          type: string
          x-relatedEntityName: shipmentReturnReason
        returnReasonName:
          type: string
        returnRectificationId:
          type: string
          x-relatedEntityName: shipmentReturnRectification
        returnRectificationName:
          type: string
        salesOrderItemId:
          type: string
        title:
          type: string
        unitId:
          type: string
          x-relatedEntityName: unit
        unitName:
          type: string
    shipmentMethod:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        active:
          type: boolean
        createdDate:
          type: integer
          format: timestamp
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
    shipmentReturnDescription:
      required:
      - name
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        customerReturn:
          type: boolean
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
        position:
          type: integer
          format: int32
        supplierReturn:
          type: boolean
    shipmentStatus:
      type: object
      properties:
        status:
          type: string
          enum:
          - CANCELLED
          - DELIVERED
          - DELIVERY_NOTE_PRINTED
          - INCOMING_CANCELLED
          - INCOMING_GOODS_MOVEMENT_PRINTED
          - INCOMING_MOVED_INTO_STORE
          - INCOMING_SHIPPED
          - IN_ROUTE
          - NEW
          - SHIPPED
        statusDate:
          type: integer
          format: timestamp
        userId:
          type: string
          x-relatedEntityName: user
    shippingCarrier:
      required:
      - name
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        active:
          type: boolean
        createdDate:
          type: integer
          format: timestamp
        internalShippingCarrier:
          type: string
          enum:
          - ANGEL_DE
          - AUSTRIAN_POST_EMS
          - AUSTRIAN_POST_PLUS_INTERNATIONAL
          - AUSTRIAN_POST_PREMIUM
          - AUSTRIAN_POST_PREMIUM_SELECT
          - AUSTRIAN_POST_RETURNS
          - AUSTRIAN_POST_STANDARD
          - CARGO_INTERNATIONAL_EXPRESS
          - CARGO_INTERNATIONAL_STANDARD
          - DACHSER
          - DEUTSCHE_POST_STANDARD
          - DEUTSCHE_POST_WARENPOST
          - DEUTSCHE_POST_WARENPOST_SIGNATURE
          - DEUTSCHE_POST_WARENPOST_UNTRACKED
          - DHL_EUROPAKET
          - DHL_EXPRESS_ONE_DAY
          - DHL_EXPRESS_ONE_DAY_EARLY
          - DHL_RETURNS
          - DHL_SAME_DAY
          - DHL_STANDARD
          - DHL_WARENPOST
          - DPD_EXPRESS_ONE_DAY
          - DPD_EXPRESS_ONE_DAY_EARLY
          - DPD_RETURNS
          - DPD_STANDARD
          - EKOL
          - FEDEX_EXPRESS_ONE_DAY_EARLY
          - FEDEX_INTERNATIONAL_ECONOMY
          - FEDEX_INTERNATIONAL_PRIORITY
          - FEDEX_STANDARD
          - GLS_EXPRESS_ONE_DAY
          - GLS_PICK_AND_SHIP
          - GLS_RETURNS
          - GLS_STANDARD
          - GO_ONE_DAY
          - HERMES_RETURNS
          - HERMES_STANDARD
          - ILOXX_STANDARD
          - LIEFERY_EXPRESS_ONE_DAY
          - MGH
          - PARCEL_ONE
          - SEVEN_SENDERS
          - SITTNAK
          - SWISS_POST
          - TNT_ONE_DAY
          - TNT_ONE_DAY_EARLY
          - UPS_EXPEDITED
          - UPS_EXPRESS_1200
          - UPS_EXPRESS_ONE_DAY
          - UPS_EXPRESS_ONE_DAY_EARLY
          - UPS_RETURNS
          - UPS_STANDARD
          - ZWECKFORM
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
        positionNumber:
          type: integer
          format: int32
        trackingUrl:
          type: string
    supplier:
      required:
      - partyType
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/address'
        bankAccounts:
          type: array
          items:
            $ref: '#/components/schemas/partyBankAccount'
        birthDate:
          type: integer
          format: timestamp
        commercialLanguageId:
          type: string
          x-relatedEntityName: commercialLanguage
        company:
          type: string
        company2:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/contact'
        createdDate:
          type: integer
          format: timestamp
        currencyId:
          type: string
          x-relatedEntityName: currency
        currencyName:
          type: string
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        customerNumberAtSupplier:
          type: string
        deliveryAddressId:
          type: string
        description:
          type: string
        email:
          type: string
        fax:
          type: string
        firstName:
          type: string
        invoiceAddressId:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        lastName:
          type: string
        middleName:
          type: string
        mobilePhone1:
          type: string
        onlineAccounts:
          type: array
          items:
            $ref: '#/components/schemas/onlineAccount'
        orderBlock:
          type: boolean
        partyType:
          type: string
          enum:
          - ORGANIZATION
          - PERSON
        paymentMethodId:
          type: string
          x-relatedEntityName: paymentMethod
        paymentMethodName:
          type: string
        personCompany:
          type: string
        personDepartment:
          type: string
        personRole:
          type: string
        phone:
          type: string
        primaryAddressId:
          type: string
        primaryContactId:
          type: string
          x-relatedEntityName: party
        referenceNumber:
          type: string
        salutation:
          type: string
          enum:
          - COMPANY
          - FAMILY
          - MR
          - MRS
          - NO_SALUTATION
        sectorId:
          type: string
          x-relatedEntityName: sector
        sectorName:
          type: string
        shipmentMethodId:
          type: string
          x-relatedEntityName: shipmentMethod
        shipmentMethodName:
          type: string
        supplierNumber:
          type: string
        supplierRatingId:
          type: string
          x-relatedEntityName: partyRating
        supplierRatingName:
          type: string
        tags:
          type: array
          items:
            type: string
        termOfPaymentId:
          type: string
          x-relatedEntityName: termOfPayment
        termOfPaymentName:
          type: string
        title:
          type: string
        titleId:
          type: string
          x-relatedEntityName: title
        vatRegistrationNumber:
          type: string
        website:
          type: string
    supplySource:
      required:
      - articleSupplySourceId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleSupplySourceId:
          type: string
          x-relatedEntityName: articleSupplySource
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
    tax:
      required:
      - name
      - taxType
      - taxValue
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        accountId:
          type: string
          x-relatedEntityName: ledgerAccount
        accountNumber:
          type: string
        contraAccountId:
          type: string
          x-relatedEntityName: ledgerAccount
        contraAccountNumber:
          type: string
        createdDate:
          type: integer
          format: timestamp
        defaultDiscountAccountId:
          type: string
          x-relatedEntityName: ledgerAccount
        defaultDiscountAccountNumber:
          type: string
        defaultNominalAccountId:
          type: string
          x-relatedEntityName: ledgerAccount
        defaultNominalAccountNumber:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
        taxType:
          type: string
          enum:
          - IMPORT_SALES_TAX
          - INPUT_VAT
          - INPUT_VAT_REVERSED
          - TAX_FREE
          - VALUE_ADDED_TAX
          - VAT_REVERSED
        taxValue:
          type: string
          format: number
    termOfPayment:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/termOfPaymentCondition'
        createdDate:
          type: integer
          format: timestamp
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
        reference:
          type: string
        validFrom:
          type: integer
          format: timestamp
        validTo:
          type: integer
          format: timestamp
    termOfPaymentCondition:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        discountPercentage:
          type: string
          format: number
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
        numberOfDays:
          type: integer
          format: int32
    unit:
      required:
      - name
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        description:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
    user:
      required:
      - email
      - username
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        birthDate:
          type: integer
          format: timestamp
        createdDate:
          type: integer
          format: timestamp
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/customAttribute'
        email:
          type: string
        faxNumber:
          type: string
        firstName:
          type: string
        imageId:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        lastName:
          type: string
        mobilePhoneNumber:
          type: string
        phoneNumber:
          type: string
        status:
          type: string
          enum:
          - ACTIVE
          - BLOCKED
          - DEPARTURE
          - NOT_ACTIVE
        username:
          type: string
    variantArticle:
      required:
      - variantArticleNumber
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        primaryArticleId:
          type: string
          x-relatedEntityName: article
        primaryArticleNumber:
          type: string
        variantArticleNumber:
          type: string
        variants:
          type: array
          items:
            $ref: '#/components/schemas/variantArticleVariantWithoutReference'
    variantArticleAttribute:
      required:
      - name
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        attributeOptions:
          type: array
          items:
            $ref: '#/components/schemas/variantArticleAttributeOption'
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
    variantArticleAttributeOption:
      required:
      - name
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
    variantArticleVariant:
      required:
      - variantArticleId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        attributeOptions:
          type: array
          items:
            $ref: '#/components/schemas/onlyId'
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        variantArticleId:
          type: string
          x-relatedEntityName: variantArticle
        variantArticleNumber:
          type: string
    variantArticleVariantWithoutReference:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        attributeOptions:
          type: array
          items:
            $ref: '#/components/schemas/onlyId'
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
    warehouse:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        active:
          type: boolean
        createdDate:
          type: integer
          format: timestamp
        defaultLevelId:
          type: string
          x-relatedEntityName: warehouseLevel
        defaultOutgoingGoodsLevelId:
          type: string
          x-relatedEntityName: warehouseLevel
        defaultProductionLevelId:
          type: string
          x-relatedEntityName: warehouseLevel
        defaultReturnsLevelId:
          type: string
          x-relatedEntityName: warehouseLevel
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
        warehouseType:
          type: string
          enum:
          - CONSIGNMENT
          - CONTAINER
          - DROP_SHIPPING
          - STANDARD
    warehouseLevel:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        barcode:
          type: string
        createdDate:
          type: integer
          format: timestamp
        deleted:
          type: boolean
        forPicking:
          type: boolean
        height:
          type: string
          format: number
        lastModifiedDate:
          type: integer
          format: timestamp
        length:
          type: string
          format: number
        name:
          type: string
        parentLevelId:
          type: string
          x-relatedEntityName: warehouseLevel
        stockable:
          type: boolean
        warehouseId:
          type: string
          x-relatedEntityName: warehouse
        weight:
          type: string
          format: number
        width:
          type: string
          format: number
    warehouseStock:
      required:
      - articleId
      - warehouseId
      - warehouseLevelId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        articleNumber:
          type: string
        batchNumber:
          type: string
        batchNumberId:
          type: string
          x-relatedEntityName: batchNumber
        createdDate:
          type: integer
          format: timestamp
        lastModifiedDate:
          type: integer
          format: timestamp
        quantity:
          type: string
          format: number
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/warehouseStockReservation'
        salesOrderItemId:
          type: string
        serialNumber:
          type: string
        serialNumberId:
          type: string
          x-relatedEntityName: serialNumber
        warehouseId:
          type: string
          x-relatedEntityName: warehouse
        warehouseLevelId:
          type: string
          x-relatedEntityName: warehouseLevel
    warehouseStockMovement:
      required:
      - articleId
      - movementNumber
      - postingDate
      - quantity
      - valuationPrice
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        articleId:
          type: string
          x-relatedEntityName: article
        batchNumber:
          type: string
        batchNumberId:
          type: string
          x-relatedEntityName: batchNumber
        createdDate:
          type: integer
          format: timestamp
        incomingGoodsItemId:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        movementNote:
          type: string
        movementNumber:
          type: string
        postingDate:
          type: integer
          format: timestamp
        productionOrderId:
          type: string
          x-relatedEntityName: productionOrder
        quantity:
          type: string
          format: number
        salesOrderItemId:
          type: string
        serialNumber:
          type: string
        serialNumberId:
          type: string
          x-relatedEntityName: serialNumber
        shipmentItemId:
          type: string
        stockMovementType:
          type: string
          enum:
          - IN
          - IN_CUSTOMER_RETURN
          - IN_INVENTORY
          - IN_PRODUCTION_ORDER
          - IN_PURCHASE_ORDER
          - IN_SHIPMENT
          - IN_SHIPMENT_CANCELLATION
          - IN_SHIPMENT_CONSIGNMENT
          - IN_SHIPMENT_INTERNAL
          - IN_THIRD_PARTY_DEAL
          - OUT
          - OUT_INVENTORY
          - OUT_PRODUCTION_ORDER
          - OUT_SALES_ORDER
          - OUT_SHIPMENT
          - OUT_SHIPMENT_CANCELLATION
          - OUT_SHIPMENT_CONSIGNMENT
          - OUT_SHIPMENT_INTERNAL
          - OUT_THIRD_PARTY_DEAL
          - TRANSFER
        valuationPrice:
          type: string
          format: number
        warehouseLevelId:
          type: string
          x-relatedEntityName: warehouseLevel
    warehouseStockReservation:
      required:
      - reservedQuantity
      type: object
      properties:
        productionOrderItemId:
          type: string
        reservedQuantity:
          type: string
          format: number
        shipmentItemId:
          type: string
    webhook:
      required:
      - entityName
      - url
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        atCreate:
          type: boolean
        atDelete:
          type: boolean
        atUpdate:
          type: boolean
        createdDate:
          type: integer
          format: timestamp
        deactivatedDate:
          type: integer
          format: timestamp
        entityName:
          type: string
        errorMessage:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        requestMethod:
          type: string
          enum:
          - GET
          - POST
        url:
          type: string
    weclappOs:
      required:
      - hardwareId
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        createdDate:
          type: integer
          format: timestamp
        description:
          type: string
        hardwareId:
          type: string
        lastModifiedDate:
          type: integer
          format: timestamp
        name:
          type: string
        printerNames:
          type: array
          items:
            type: string
  securitySchemes:
    API token:
      type: apiKey
      description: API token
      name: AuthenticationToken
      in: header
