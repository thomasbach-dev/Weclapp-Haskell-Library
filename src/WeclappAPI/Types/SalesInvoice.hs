-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema SalesInvoice
module WeclappAPI.Types.SalesInvoice where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified WeclappAPI.Common
import WeclappAPI.TypeAlias
import {-# SOURCE #-} WeclappAPI.Types.CommissionSalesPartner
import {-# SOURCE #-} WeclappAPI.Types.CustomAttribute
import {-# SOURCE #-} WeclappAPI.Types.EmailAddresses
import {-# SOURCE #-} WeclappAPI.Types.InvoiceStatusHistory
import {-# SOURCE #-} WeclappAPI.Types.OnlyId
import {-# SOURCE #-} WeclappAPI.Types.RecordAddress
import {-# SOURCE #-} WeclappAPI.Types.SalesInvoiceItem
import {-# SOURCE #-} WeclappAPI.Types.SalesShippingCostItem

-- | Defines the object schema located at @components.schemas.salesInvoice@ in the specification.
-- 
-- 
data SalesInvoice = SalesInvoice {
  -- | cancellationDate
  salesInvoiceCancellationDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | commercialLanguage
  , salesInvoiceCommercialLanguage :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | commission
  , salesInvoiceCommission :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | commissionSalesPartners
  , salesInvoiceCommissionSalesPartners :: (GHC.Maybe.Maybe ([CommissionSalesPartner]))
  -- | createdDate
  , salesInvoiceCreatedDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | currencyConversionDate
  , salesInvoiceCurrencyConversionDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | currencyConversionRate
  , salesInvoiceCurrencyConversionRate :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customAttributes
  , salesInvoiceCustomAttributes :: (GHC.Maybe.Maybe ([CustomAttribute]))
  -- | customerHabitualExporterLetterOfIntentId
  , salesInvoiceCustomerHabitualExporterLetterOfIntentId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customerId
  , salesInvoiceCustomerId :: Data.Text.Internal.Text
  -- | customerNumber
  , salesInvoiceCustomerNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | deliveryAddress
  , salesInvoiceDeliveryAddress :: (GHC.Maybe.Maybe RecordAddress)
  -- | deliveryDate
  , salesInvoiceDeliveryDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | description
  , salesInvoiceDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | disableEmailTemplate
  , salesInvoiceDisableEmailTemplate :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | dispatchCountryCode
  , salesInvoiceDispatchCountryCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | dueDate
  , salesInvoiceDueDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | grossAmount
  , salesInvoiceGrossAmount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | grossAmountInCompanyCurrency
  , salesInvoiceGrossAmountInCompanyCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | headerDiscount
  , salesInvoiceHeaderDiscount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | headerSurcharge
  , salesInvoiceHeaderSurcharge :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id
  , salesInvoiceId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | invoiceDate
  , salesInvoiceInvoiceDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | invoiceNumber
  , salesInvoiceInvoiceNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | lastModifiedDate
  , salesInvoiceLastModifiedDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | netAmount
  , salesInvoiceNetAmount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | netAmountInCompanyCurrency
  , salesInvoiceNetAmountInCompanyCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | nonStandardTaxId
  , salesInvoiceNonStandardTaxId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | nonStandardTaxName
  , salesInvoiceNonStandardTaxName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | orderNumberAtCustomer
  , salesInvoiceOrderNumberAtCustomer :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | paid
  , salesInvoicePaid :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | paymentMethodId
  , salesInvoicePaymentMethodId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | paymentMethodName
  , salesInvoicePaymentMethodName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | paymentStatus
  , salesInvoicePaymentStatus :: SalesInvoicePaymentStatus'
  -- | pricingDate
  , salesInvoicePricingDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | recordAddress
  , salesInvoiceRecordAddress :: (GHC.Maybe.Maybe RecordAddress)
  -- | recordComment
  , salesInvoiceRecordComment :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | recordCurrencyId
  , salesInvoiceRecordCurrencyId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | recordCurrencyName
  , salesInvoiceRecordCurrencyName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | recordEmailAddresses
  , salesInvoiceRecordEmailAddresses :: (GHC.Maybe.Maybe EmailAddresses)
  -- | recordFreeText
  , salesInvoiceRecordFreeText :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | recordOpening
  , salesInvoiceRecordOpening :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | responsibleUserId
  , salesInvoiceResponsibleUserId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | responsibleUserUsername
  , salesInvoiceResponsibleUserUsername :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | salesChannel
  , salesInvoiceSalesChannel :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | salesInvoiceItems
  , salesInvoiceSalesInvoiceItems :: (GHC.Maybe.Maybe ([SalesInvoiceItem]))
  -- | salesInvoiceType
  , salesInvoiceSalesInvoiceType :: (GHC.Maybe.Maybe SalesInvoiceSalesInvoiceType')
  -- | salesOrderId
  , salesInvoiceSalesOrderId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | salesOrderNumber
  , salesInvoiceSalesOrderNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | salesOrders
  , salesInvoiceSalesOrders :: (GHC.Maybe.Maybe ([OnlyId]))
  -- | sentToRecipient
  , salesInvoiceSentToRecipient :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | servicePeriodFrom
  , salesInvoiceServicePeriodFrom :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | servicePeriodTo
  , salesInvoiceServicePeriodTo :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | shipmentMethodId
  , salesInvoiceShipmentMethodId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | shipmentMethodName
  , salesInvoiceShipmentMethodName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | shippingCostItems
  , salesInvoiceShippingCostItems :: (GHC.Maybe.Maybe ([SalesShippingCostItem]))
  -- | shippingDate
  , salesInvoiceShippingDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | status
  , salesInvoiceStatus :: SalesInvoiceStatus'
  -- | statusHistory
  , salesInvoiceStatusHistory :: (GHC.Maybe.Maybe ([InvoiceStatusHistory]))
  -- | tags
  , salesInvoiceTags :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | termOfPaymentId
  , salesInvoiceTermOfPaymentId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | termOfPaymentName
  , salesInvoiceTermOfPaymentName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | vatRegistrationNumber
  , salesInvoiceVatRegistrationNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | version
  , salesInvoiceVersion :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SalesInvoice
    where toJSON obj = Data.Aeson.Types.Internal.object ("cancellationDate" Data.Aeson.Types.ToJSON..= salesInvoiceCancellationDate obj : "commercialLanguage" Data.Aeson.Types.ToJSON..= salesInvoiceCommercialLanguage obj : "commission" Data.Aeson.Types.ToJSON..= salesInvoiceCommission obj : "commissionSalesPartners" Data.Aeson.Types.ToJSON..= salesInvoiceCommissionSalesPartners obj : "createdDate" Data.Aeson.Types.ToJSON..= salesInvoiceCreatedDate obj : "currencyConversionDate" Data.Aeson.Types.ToJSON..= salesInvoiceCurrencyConversionDate obj : "currencyConversionRate" Data.Aeson.Types.ToJSON..= salesInvoiceCurrencyConversionRate obj : "customAttributes" Data.Aeson.Types.ToJSON..= salesInvoiceCustomAttributes obj : "customerHabitualExporterLetterOfIntentId" Data.Aeson.Types.ToJSON..= salesInvoiceCustomerHabitualExporterLetterOfIntentId obj : "customerId" Data.Aeson.Types.ToJSON..= salesInvoiceCustomerId obj : "customerNumber" Data.Aeson.Types.ToJSON..= salesInvoiceCustomerNumber obj : "deliveryAddress" Data.Aeson.Types.ToJSON..= salesInvoiceDeliveryAddress obj : "deliveryDate" Data.Aeson.Types.ToJSON..= salesInvoiceDeliveryDate obj : "description" Data.Aeson.Types.ToJSON..= salesInvoiceDescription obj : "disableEmailTemplate" Data.Aeson.Types.ToJSON..= salesInvoiceDisableEmailTemplate obj : "dispatchCountryCode" Data.Aeson.Types.ToJSON..= salesInvoiceDispatchCountryCode obj : "dueDate" Data.Aeson.Types.ToJSON..= salesInvoiceDueDate obj : "grossAmount" Data.Aeson.Types.ToJSON..= salesInvoiceGrossAmount obj : "grossAmountInCompanyCurrency" Data.Aeson.Types.ToJSON..= salesInvoiceGrossAmountInCompanyCurrency obj : "headerDiscount" Data.Aeson.Types.ToJSON..= salesInvoiceHeaderDiscount obj : "headerSurcharge" Data.Aeson.Types.ToJSON..= salesInvoiceHeaderSurcharge obj : "id" Data.Aeson.Types.ToJSON..= salesInvoiceId obj : "invoiceDate" Data.Aeson.Types.ToJSON..= salesInvoiceInvoiceDate obj : "invoiceNumber" Data.Aeson.Types.ToJSON..= salesInvoiceInvoiceNumber obj : "lastModifiedDate" Data.Aeson.Types.ToJSON..= salesInvoiceLastModifiedDate obj : "netAmount" Data.Aeson.Types.ToJSON..= salesInvoiceNetAmount obj : "netAmountInCompanyCurrency" Data.Aeson.Types.ToJSON..= salesInvoiceNetAmountInCompanyCurrency obj : "nonStandardTaxId" Data.Aeson.Types.ToJSON..= salesInvoiceNonStandardTaxId obj : "nonStandardTaxName" Data.Aeson.Types.ToJSON..= salesInvoiceNonStandardTaxName obj : "orderNumberAtCustomer" Data.Aeson.Types.ToJSON..= salesInvoiceOrderNumberAtCustomer obj : "paid" Data.Aeson.Types.ToJSON..= salesInvoicePaid obj : "paymentMethodId" Data.Aeson.Types.ToJSON..= salesInvoicePaymentMethodId obj : "paymentMethodName" Data.Aeson.Types.ToJSON..= salesInvoicePaymentMethodName obj : "paymentStatus" Data.Aeson.Types.ToJSON..= salesInvoicePaymentStatus obj : "pricingDate" Data.Aeson.Types.ToJSON..= salesInvoicePricingDate obj : "recordAddress" Data.Aeson.Types.ToJSON..= salesInvoiceRecordAddress obj : "recordComment" Data.Aeson.Types.ToJSON..= salesInvoiceRecordComment obj : "recordCurrencyId" Data.Aeson.Types.ToJSON..= salesInvoiceRecordCurrencyId obj : "recordCurrencyName" Data.Aeson.Types.ToJSON..= salesInvoiceRecordCurrencyName obj : "recordEmailAddresses" Data.Aeson.Types.ToJSON..= salesInvoiceRecordEmailAddresses obj : "recordFreeText" Data.Aeson.Types.ToJSON..= salesInvoiceRecordFreeText obj : "recordOpening" Data.Aeson.Types.ToJSON..= salesInvoiceRecordOpening obj : "responsibleUserId" Data.Aeson.Types.ToJSON..= salesInvoiceResponsibleUserId obj : "responsibleUserUsername" Data.Aeson.Types.ToJSON..= salesInvoiceResponsibleUserUsername obj : "salesChannel" Data.Aeson.Types.ToJSON..= salesInvoiceSalesChannel obj : "salesInvoiceItems" Data.Aeson.Types.ToJSON..= salesInvoiceSalesInvoiceItems obj : "salesInvoiceType" Data.Aeson.Types.ToJSON..= salesInvoiceSalesInvoiceType obj : "salesOrderId" Data.Aeson.Types.ToJSON..= salesInvoiceSalesOrderId obj : "salesOrderNumber" Data.Aeson.Types.ToJSON..= salesInvoiceSalesOrderNumber obj : "salesOrders" Data.Aeson.Types.ToJSON..= salesInvoiceSalesOrders obj : "sentToRecipient" Data.Aeson.Types.ToJSON..= salesInvoiceSentToRecipient obj : "servicePeriodFrom" Data.Aeson.Types.ToJSON..= salesInvoiceServicePeriodFrom obj : "servicePeriodTo" Data.Aeson.Types.ToJSON..= salesInvoiceServicePeriodTo obj : "shipmentMethodId" Data.Aeson.Types.ToJSON..= salesInvoiceShipmentMethodId obj : "shipmentMethodName" Data.Aeson.Types.ToJSON..= salesInvoiceShipmentMethodName obj : "shippingCostItems" Data.Aeson.Types.ToJSON..= salesInvoiceShippingCostItems obj : "shippingDate" Data.Aeson.Types.ToJSON..= salesInvoiceShippingDate obj : "status" Data.Aeson.Types.ToJSON..= salesInvoiceStatus obj : "statusHistory" Data.Aeson.Types.ToJSON..= salesInvoiceStatusHistory obj : "tags" Data.Aeson.Types.ToJSON..= salesInvoiceTags obj : "termOfPaymentId" Data.Aeson.Types.ToJSON..= salesInvoiceTermOfPaymentId obj : "termOfPaymentName" Data.Aeson.Types.ToJSON..= salesInvoiceTermOfPaymentName obj : "vatRegistrationNumber" Data.Aeson.Types.ToJSON..= salesInvoiceVatRegistrationNumber obj : "version" Data.Aeson.Types.ToJSON..= salesInvoiceVersion obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("cancellationDate" Data.Aeson.Types.ToJSON..= salesInvoiceCancellationDate obj) GHC.Base.<> (("commercialLanguage" Data.Aeson.Types.ToJSON..= salesInvoiceCommercialLanguage obj) GHC.Base.<> (("commission" Data.Aeson.Types.ToJSON..= salesInvoiceCommission obj) GHC.Base.<> (("commissionSalesPartners" Data.Aeson.Types.ToJSON..= salesInvoiceCommissionSalesPartners obj) GHC.Base.<> (("createdDate" Data.Aeson.Types.ToJSON..= salesInvoiceCreatedDate obj) GHC.Base.<> (("currencyConversionDate" Data.Aeson.Types.ToJSON..= salesInvoiceCurrencyConversionDate obj) GHC.Base.<> (("currencyConversionRate" Data.Aeson.Types.ToJSON..= salesInvoiceCurrencyConversionRate obj) GHC.Base.<> (("customAttributes" Data.Aeson.Types.ToJSON..= salesInvoiceCustomAttributes obj) GHC.Base.<> (("customerHabitualExporterLetterOfIntentId" Data.Aeson.Types.ToJSON..= salesInvoiceCustomerHabitualExporterLetterOfIntentId obj) GHC.Base.<> (("customerId" Data.Aeson.Types.ToJSON..= salesInvoiceCustomerId obj) GHC.Base.<> (("customerNumber" Data.Aeson.Types.ToJSON..= salesInvoiceCustomerNumber obj) GHC.Base.<> (("deliveryAddress" Data.Aeson.Types.ToJSON..= salesInvoiceDeliveryAddress obj) GHC.Base.<> (("deliveryDate" Data.Aeson.Types.ToJSON..= salesInvoiceDeliveryDate obj) GHC.Base.<> (("description" Data.Aeson.Types.ToJSON..= salesInvoiceDescription obj) GHC.Base.<> (("disableEmailTemplate" Data.Aeson.Types.ToJSON..= salesInvoiceDisableEmailTemplate obj) GHC.Base.<> (("dispatchCountryCode" Data.Aeson.Types.ToJSON..= salesInvoiceDispatchCountryCode obj) GHC.Base.<> (("dueDate" Data.Aeson.Types.ToJSON..= salesInvoiceDueDate obj) GHC.Base.<> (("grossAmount" Data.Aeson.Types.ToJSON..= salesInvoiceGrossAmount obj) GHC.Base.<> (("grossAmountInCompanyCurrency" Data.Aeson.Types.ToJSON..= salesInvoiceGrossAmountInCompanyCurrency obj) GHC.Base.<> (("headerDiscount" Data.Aeson.Types.ToJSON..= salesInvoiceHeaderDiscount obj) GHC.Base.<> (("headerSurcharge" Data.Aeson.Types.ToJSON..= salesInvoiceHeaderSurcharge obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= salesInvoiceId obj) GHC.Base.<> (("invoiceDate" Data.Aeson.Types.ToJSON..= salesInvoiceInvoiceDate obj) GHC.Base.<> (("invoiceNumber" Data.Aeson.Types.ToJSON..= salesInvoiceInvoiceNumber obj) GHC.Base.<> (("lastModifiedDate" Data.Aeson.Types.ToJSON..= salesInvoiceLastModifiedDate obj) GHC.Base.<> (("netAmount" Data.Aeson.Types.ToJSON..= salesInvoiceNetAmount obj) GHC.Base.<> (("netAmountInCompanyCurrency" Data.Aeson.Types.ToJSON..= salesInvoiceNetAmountInCompanyCurrency obj) GHC.Base.<> (("nonStandardTaxId" Data.Aeson.Types.ToJSON..= salesInvoiceNonStandardTaxId obj) GHC.Base.<> (("nonStandardTaxName" Data.Aeson.Types.ToJSON..= salesInvoiceNonStandardTaxName obj) GHC.Base.<> (("orderNumberAtCustomer" Data.Aeson.Types.ToJSON..= salesInvoiceOrderNumberAtCustomer obj) GHC.Base.<> (("paid" Data.Aeson.Types.ToJSON..= salesInvoicePaid obj) GHC.Base.<> (("paymentMethodId" Data.Aeson.Types.ToJSON..= salesInvoicePaymentMethodId obj) GHC.Base.<> (("paymentMethodName" Data.Aeson.Types.ToJSON..= salesInvoicePaymentMethodName obj) GHC.Base.<> (("paymentStatus" Data.Aeson.Types.ToJSON..= salesInvoicePaymentStatus obj) GHC.Base.<> (("pricingDate" Data.Aeson.Types.ToJSON..= salesInvoicePricingDate obj) GHC.Base.<> (("recordAddress" Data.Aeson.Types.ToJSON..= salesInvoiceRecordAddress obj) GHC.Base.<> (("recordComment" Data.Aeson.Types.ToJSON..= salesInvoiceRecordComment obj) GHC.Base.<> (("recordCurrencyId" Data.Aeson.Types.ToJSON..= salesInvoiceRecordCurrencyId obj) GHC.Base.<> (("recordCurrencyName" Data.Aeson.Types.ToJSON..= salesInvoiceRecordCurrencyName obj) GHC.Base.<> (("recordEmailAddresses" Data.Aeson.Types.ToJSON..= salesInvoiceRecordEmailAddresses obj) GHC.Base.<> (("recordFreeText" Data.Aeson.Types.ToJSON..= salesInvoiceRecordFreeText obj) GHC.Base.<> (("recordOpening" Data.Aeson.Types.ToJSON..= salesInvoiceRecordOpening obj) GHC.Base.<> (("responsibleUserId" Data.Aeson.Types.ToJSON..= salesInvoiceResponsibleUserId obj) GHC.Base.<> (("responsibleUserUsername" Data.Aeson.Types.ToJSON..= salesInvoiceResponsibleUserUsername obj) GHC.Base.<> (("salesChannel" Data.Aeson.Types.ToJSON..= salesInvoiceSalesChannel obj) GHC.Base.<> (("salesInvoiceItems" Data.Aeson.Types.ToJSON..= salesInvoiceSalesInvoiceItems obj) GHC.Base.<> (("salesInvoiceType" Data.Aeson.Types.ToJSON..= salesInvoiceSalesInvoiceType obj) GHC.Base.<> (("salesOrderId" Data.Aeson.Types.ToJSON..= salesInvoiceSalesOrderId obj) GHC.Base.<> (("salesOrderNumber" Data.Aeson.Types.ToJSON..= salesInvoiceSalesOrderNumber obj) GHC.Base.<> (("salesOrders" Data.Aeson.Types.ToJSON..= salesInvoiceSalesOrders obj) GHC.Base.<> (("sentToRecipient" Data.Aeson.Types.ToJSON..= salesInvoiceSentToRecipient obj) GHC.Base.<> (("servicePeriodFrom" Data.Aeson.Types.ToJSON..= salesInvoiceServicePeriodFrom obj) GHC.Base.<> (("servicePeriodTo" Data.Aeson.Types.ToJSON..= salesInvoiceServicePeriodTo obj) GHC.Base.<> (("shipmentMethodId" Data.Aeson.Types.ToJSON..= salesInvoiceShipmentMethodId obj) GHC.Base.<> (("shipmentMethodName" Data.Aeson.Types.ToJSON..= salesInvoiceShipmentMethodName obj) GHC.Base.<> (("shippingCostItems" Data.Aeson.Types.ToJSON..= salesInvoiceShippingCostItems obj) GHC.Base.<> (("shippingDate" Data.Aeson.Types.ToJSON..= salesInvoiceShippingDate obj) GHC.Base.<> (("status" Data.Aeson.Types.ToJSON..= salesInvoiceStatus obj) GHC.Base.<> (("statusHistory" Data.Aeson.Types.ToJSON..= salesInvoiceStatusHistory obj) GHC.Base.<> (("tags" Data.Aeson.Types.ToJSON..= salesInvoiceTags obj) GHC.Base.<> (("termOfPaymentId" Data.Aeson.Types.ToJSON..= salesInvoiceTermOfPaymentId obj) GHC.Base.<> (("termOfPaymentName" Data.Aeson.Types.ToJSON..= salesInvoiceTermOfPaymentName obj) GHC.Base.<> (("vatRegistrationNumber" Data.Aeson.Types.ToJSON..= salesInvoiceVatRegistrationNumber obj) GHC.Base.<> ("version" Data.Aeson.Types.ToJSON..= salesInvoiceVersion obj))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
instance Data.Aeson.Types.FromJSON.FromJSON SalesInvoice
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "SalesInvoice" (\obj -> (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((GHC.Base.pure SalesInvoice GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cancellationDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "commercialLanguage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "commission")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "commissionSalesPartners")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "createdDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "currencyConversionDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "currencyConversionRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customAttributes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customerHabitualExporterLetterOfIntentId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "customerId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customerNumber")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "deliveryAddress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "deliveryDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "disableEmailTemplate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "dispatchCountryCode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "dueDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "grossAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "grossAmountInCompanyCurrency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "headerDiscount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "headerSurcharge")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoiceDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoiceNumber")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lastModifiedDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "netAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "netAmountInCompanyCurrency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "nonStandardTaxId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "nonStandardTaxName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "orderNumberAtCustomer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "paid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "paymentMethodId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "paymentMethodName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "paymentStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "pricingDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordAddress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordComment")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordCurrencyId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordCurrencyName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordEmailAddresses")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordFreeText")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordOpening")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "responsibleUserId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "responsibleUserUsername")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "salesChannel")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "salesInvoiceItems")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "salesInvoiceType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "salesOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "salesOrderNumber")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "salesOrders")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "sentToRecipient")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "servicePeriodFrom")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "servicePeriodTo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipmentMethodId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipmentMethodName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shippingCostItems")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shippingDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "statusHistory")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tags")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "termOfPaymentId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "termOfPaymentName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "vatRegistrationNumber")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "version"))
-- | Create a new 'SalesInvoice' with all required fields.
mkSalesInvoice :: Data.Text.Internal.Text -- ^ 'salesInvoiceCustomerId'
  -> SalesInvoicePaymentStatus' -- ^ 'salesInvoicePaymentStatus'
  -> SalesInvoiceStatus' -- ^ 'salesInvoiceStatus'
  -> SalesInvoice
mkSalesInvoice salesInvoiceCustomerId salesInvoicePaymentStatus salesInvoiceStatus = SalesInvoice{salesInvoiceCancellationDate = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceCommercialLanguage = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceCommission = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceCommissionSalesPartners = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceCreatedDate = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceCurrencyConversionDate = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceCurrencyConversionRate = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceCustomAttributes = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceCustomerHabitualExporterLetterOfIntentId = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceCustomerId = salesInvoiceCustomerId,
                                                                                                  salesInvoiceCustomerNumber = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceDeliveryAddress = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceDeliveryDate = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceDescription = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceDisableEmailTemplate = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceDispatchCountryCode = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceDueDate = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceGrossAmount = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceGrossAmountInCompanyCurrency = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceHeaderDiscount = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceHeaderSurcharge = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceId = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceInvoiceDate = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceInvoiceNumber = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceLastModifiedDate = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceNetAmount = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceNetAmountInCompanyCurrency = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceNonStandardTaxId = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceNonStandardTaxName = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceOrderNumberAtCustomer = GHC.Maybe.Nothing,
                                                                                                  salesInvoicePaid = GHC.Maybe.Nothing,
                                                                                                  salesInvoicePaymentMethodId = GHC.Maybe.Nothing,
                                                                                                  salesInvoicePaymentMethodName = GHC.Maybe.Nothing,
                                                                                                  salesInvoicePaymentStatus = salesInvoicePaymentStatus,
                                                                                                  salesInvoicePricingDate = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceRecordAddress = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceRecordComment = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceRecordCurrencyId = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceRecordCurrencyName = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceRecordEmailAddresses = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceRecordFreeText = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceRecordOpening = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceResponsibleUserId = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceResponsibleUserUsername = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceSalesChannel = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceSalesInvoiceItems = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceSalesInvoiceType = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceSalesOrderId = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceSalesOrderNumber = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceSalesOrders = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceSentToRecipient = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceServicePeriodFrom = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceServicePeriodTo = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceShipmentMethodId = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceShipmentMethodName = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceShippingCostItems = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceShippingDate = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceStatus = salesInvoiceStatus,
                                                                                                  salesInvoiceStatusHistory = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceTags = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceTermOfPaymentId = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceTermOfPaymentName = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceVatRegistrationNumber = GHC.Maybe.Nothing,
                                                                                                  salesInvoiceVersion = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.salesInvoice.properties.paymentStatus@ in the specification.
-- 
-- 
data SalesInvoicePaymentStatus' =
   SalesInvoicePaymentStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | SalesInvoicePaymentStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | SalesInvoicePaymentStatus'EnumCLEARED_WITH_CREDIT_NOTE -- ^ Represents the JSON value @"CLEARED_WITH_CREDIT_NOTE"@
  | SalesInvoicePaymentStatus'EnumCREDIT_NOTE_CLEARED -- ^ Represents the JSON value @"CREDIT_NOTE_CLEARED"@
  | SalesInvoicePaymentStatus'EnumNO_OPEN_ITEM -- ^ Represents the JSON value @"NO_OPEN_ITEM"@
  | SalesInvoicePaymentStatus'EnumOPEN -- ^ Represents the JSON value @"OPEN"@
  | SalesInvoicePaymentStatus'EnumPAID -- ^ Represents the JSON value @"PAID"@
  | SalesInvoicePaymentStatus'EnumUNKNOWN -- ^ Represents the JSON value @"UNKNOWN"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SalesInvoicePaymentStatus'
    where toJSON (SalesInvoicePaymentStatus'Other val) = val
          toJSON (SalesInvoicePaymentStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (SalesInvoicePaymentStatus'EnumCLEARED_WITH_CREDIT_NOTE) = "CLEARED_WITH_CREDIT_NOTE"
          toJSON (SalesInvoicePaymentStatus'EnumCREDIT_NOTE_CLEARED) = "CREDIT_NOTE_CLEARED"
          toJSON (SalesInvoicePaymentStatus'EnumNO_OPEN_ITEM) = "NO_OPEN_ITEM"
          toJSON (SalesInvoicePaymentStatus'EnumOPEN) = "OPEN"
          toJSON (SalesInvoicePaymentStatus'EnumPAID) = "PAID"
          toJSON (SalesInvoicePaymentStatus'EnumUNKNOWN) = "UNKNOWN"
instance Data.Aeson.Types.FromJSON.FromJSON SalesInvoicePaymentStatus'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "CLEARED_WITH_CREDIT_NOTE" -> SalesInvoicePaymentStatus'EnumCLEARED_WITH_CREDIT_NOTE
                                            | val GHC.Classes.== "CREDIT_NOTE_CLEARED" -> SalesInvoicePaymentStatus'EnumCREDIT_NOTE_CLEARED
                                            | val GHC.Classes.== "NO_OPEN_ITEM" -> SalesInvoicePaymentStatus'EnumNO_OPEN_ITEM
                                            | val GHC.Classes.== "OPEN" -> SalesInvoicePaymentStatus'EnumOPEN
                                            | val GHC.Classes.== "PAID" -> SalesInvoicePaymentStatus'EnumPAID
                                            | val GHC.Classes.== "UNKNOWN" -> SalesInvoicePaymentStatus'EnumUNKNOWN
                                            | GHC.Base.otherwise -> SalesInvoicePaymentStatus'Other val)
-- | Defines the enum schema located at @components.schemas.salesInvoice.properties.salesInvoiceType@ in the specification.
-- 
-- 
data SalesInvoiceSalesInvoiceType' =
   SalesInvoiceSalesInvoiceType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | SalesInvoiceSalesInvoiceType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | SalesInvoiceSalesInvoiceType'EnumADVANCE_PAYMENT_INVOICE -- ^ Represents the JSON value @"ADVANCE_PAYMENT_INVOICE"@
  | SalesInvoiceSalesInvoiceType'EnumCREDIT_NOTE -- ^ Represents the JSON value @"CREDIT_NOTE"@
  | SalesInvoiceSalesInvoiceType'EnumFINAL_INVOICE -- ^ Represents the JSON value @"FINAL_INVOICE"@
  | SalesInvoiceSalesInvoiceType'EnumPART_PAYMENT_INVOICE -- ^ Represents the JSON value @"PART_PAYMENT_INVOICE"@
  | SalesInvoiceSalesInvoiceType'EnumPREPAYMENT_INVOICE -- ^ Represents the JSON value @"PREPAYMENT_INVOICE"@
  | SalesInvoiceSalesInvoiceType'EnumSTANDARD_INVOICE -- ^ Represents the JSON value @"STANDARD_INVOICE"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SalesInvoiceSalesInvoiceType'
    where toJSON (SalesInvoiceSalesInvoiceType'Other val) = val
          toJSON (SalesInvoiceSalesInvoiceType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (SalesInvoiceSalesInvoiceType'EnumADVANCE_PAYMENT_INVOICE) = "ADVANCE_PAYMENT_INVOICE"
          toJSON (SalesInvoiceSalesInvoiceType'EnumCREDIT_NOTE) = "CREDIT_NOTE"
          toJSON (SalesInvoiceSalesInvoiceType'EnumFINAL_INVOICE) = "FINAL_INVOICE"
          toJSON (SalesInvoiceSalesInvoiceType'EnumPART_PAYMENT_INVOICE) = "PART_PAYMENT_INVOICE"
          toJSON (SalesInvoiceSalesInvoiceType'EnumPREPAYMENT_INVOICE) = "PREPAYMENT_INVOICE"
          toJSON (SalesInvoiceSalesInvoiceType'EnumSTANDARD_INVOICE) = "STANDARD_INVOICE"
instance Data.Aeson.Types.FromJSON.FromJSON SalesInvoiceSalesInvoiceType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "ADVANCE_PAYMENT_INVOICE" -> SalesInvoiceSalesInvoiceType'EnumADVANCE_PAYMENT_INVOICE
                                            | val GHC.Classes.== "CREDIT_NOTE" -> SalesInvoiceSalesInvoiceType'EnumCREDIT_NOTE
                                            | val GHC.Classes.== "FINAL_INVOICE" -> SalesInvoiceSalesInvoiceType'EnumFINAL_INVOICE
                                            | val GHC.Classes.== "PART_PAYMENT_INVOICE" -> SalesInvoiceSalesInvoiceType'EnumPART_PAYMENT_INVOICE
                                            | val GHC.Classes.== "PREPAYMENT_INVOICE" -> SalesInvoiceSalesInvoiceType'EnumPREPAYMENT_INVOICE
                                            | val GHC.Classes.== "STANDARD_INVOICE" -> SalesInvoiceSalesInvoiceType'EnumSTANDARD_INVOICE
                                            | GHC.Base.otherwise -> SalesInvoiceSalesInvoiceType'Other val)
-- | Defines the enum schema located at @components.schemas.salesInvoice.properties.status@ in the specification.
-- 
-- 
data SalesInvoiceStatus' =
   SalesInvoiceStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | SalesInvoiceStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | SalesInvoiceStatus'EnumAPPROVED -- ^ Represents the JSON value @"APPROVED"@
  | SalesInvoiceStatus'EnumBOOKED -- ^ Represents the JSON value @"BOOKED"@
  | SalesInvoiceStatus'EnumBOOKING_APPROVED -- ^ Represents the JSON value @"BOOKING_APPROVED"@
  | SalesInvoiceStatus'EnumBOOKING_ERROR -- ^ Represents the JSON value @"BOOKING_ERROR"@
  | SalesInvoiceStatus'EnumDOCUMENT_CREATED -- ^ Represents the JSON value @"DOCUMENT_CREATED"@
  | SalesInvoiceStatus'EnumENTRY_COMPLETED -- ^ Represents the JSON value @"ENTRY_COMPLETED"@
  | SalesInvoiceStatus'EnumINVOICE_CHECKED -- ^ Represents the JSON value @"INVOICE_CHECKED"@
  | SalesInvoiceStatus'EnumINVOICE_VERIFICATION -- ^ Represents the JSON value @"INVOICE_VERIFICATION"@
  | SalesInvoiceStatus'EnumNEW -- ^ Represents the JSON value @"NEW"@
  | SalesInvoiceStatus'EnumQUERY_INVOICE -- ^ Represents the JSON value @"QUERY_INVOICE"@
  | SalesInvoiceStatus'EnumSENT -- ^ Represents the JSON value @"SENT"@
  | SalesInvoiceStatus'EnumVOID -- ^ Represents the JSON value @"VOID"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SalesInvoiceStatus'
    where toJSON (SalesInvoiceStatus'Other val) = val
          toJSON (SalesInvoiceStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (SalesInvoiceStatus'EnumAPPROVED) = "APPROVED"
          toJSON (SalesInvoiceStatus'EnumBOOKED) = "BOOKED"
          toJSON (SalesInvoiceStatus'EnumBOOKING_APPROVED) = "BOOKING_APPROVED"
          toJSON (SalesInvoiceStatus'EnumBOOKING_ERROR) = "BOOKING_ERROR"
          toJSON (SalesInvoiceStatus'EnumDOCUMENT_CREATED) = "DOCUMENT_CREATED"
          toJSON (SalesInvoiceStatus'EnumENTRY_COMPLETED) = "ENTRY_COMPLETED"
          toJSON (SalesInvoiceStatus'EnumINVOICE_CHECKED) = "INVOICE_CHECKED"
          toJSON (SalesInvoiceStatus'EnumINVOICE_VERIFICATION) = "INVOICE_VERIFICATION"
          toJSON (SalesInvoiceStatus'EnumNEW) = "NEW"
          toJSON (SalesInvoiceStatus'EnumQUERY_INVOICE) = "QUERY_INVOICE"
          toJSON (SalesInvoiceStatus'EnumSENT) = "SENT"
          toJSON (SalesInvoiceStatus'EnumVOID) = "VOID"
instance Data.Aeson.Types.FromJSON.FromJSON SalesInvoiceStatus'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "APPROVED" -> SalesInvoiceStatus'EnumAPPROVED
                                            | val GHC.Classes.== "BOOKED" -> SalesInvoiceStatus'EnumBOOKED
                                            | val GHC.Classes.== "BOOKING_APPROVED" -> SalesInvoiceStatus'EnumBOOKING_APPROVED
                                            | val GHC.Classes.== "BOOKING_ERROR" -> SalesInvoiceStatus'EnumBOOKING_ERROR
                                            | val GHC.Classes.== "DOCUMENT_CREATED" -> SalesInvoiceStatus'EnumDOCUMENT_CREATED
                                            | val GHC.Classes.== "ENTRY_COMPLETED" -> SalesInvoiceStatus'EnumENTRY_COMPLETED
                                            | val GHC.Classes.== "INVOICE_CHECKED" -> SalesInvoiceStatus'EnumINVOICE_CHECKED
                                            | val GHC.Classes.== "INVOICE_VERIFICATION" -> SalesInvoiceStatus'EnumINVOICE_VERIFICATION
                                            | val GHC.Classes.== "NEW" -> SalesInvoiceStatus'EnumNEW
                                            | val GHC.Classes.== "QUERY_INVOICE" -> SalesInvoiceStatus'EnumQUERY_INVOICE
                                            | val GHC.Classes.== "SENT" -> SalesInvoiceStatus'EnumSENT
                                            | val GHC.Classes.== "VOID" -> SalesInvoiceStatus'EnumVOID
                                            | GHC.Base.otherwise -> SalesInvoiceStatus'Other val)
