-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema SalesOrder
module WeclappAPI.Types.SalesOrder where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified WeclappAPI.Common
import WeclappAPI.TypeAlias
import {-# SOURCE #-} WeclappAPI.Types.CommissionSalesPartner
import {-# SOURCE #-} WeclappAPI.Types.CustomAttribute
import {-# SOURCE #-} WeclappAPI.Types.EcommerceOrder
import {-# SOURCE #-} WeclappAPI.Types.EmailAddresses
import {-# SOURCE #-} WeclappAPI.Types.RecordAddress
import {-# SOURCE #-} WeclappAPI.Types.SalesOrderItem
import {-# SOURCE #-} WeclappAPI.Types.SalesOrderStatusHistory
import {-# SOURCE #-} WeclappAPI.Types.SalesShippingCostItem

-- | Defines the object schema located at @components.schemas.salesOrder@ in the specification.
-- 
-- 
data SalesOrder = SalesOrder {
  -- | advancePaymentStatus
  salesOrderAdvancePaymentStatus :: (GHC.Maybe.Maybe SalesOrderAdvancePaymentStatus')
  -- | cashAccountId
  , salesOrderCashAccountId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | commercialLanguage
  , salesOrderCommercialLanguage :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | commission
  , salesOrderCommission :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | commissionSalesPartners
  , salesOrderCommissionSalesPartners :: (GHC.Maybe.Maybe ([CommissionSalesPartner]))
  -- | createdDate
  , salesOrderCreatedDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | currencyConversionDate
  , salesOrderCurrencyConversionDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | currencyConversionRate
  , salesOrderCurrencyConversionRate :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customAttributes
  , salesOrderCustomAttributes :: (GHC.Maybe.Maybe ([CustomAttribute]))
  -- | customerHabitualExporterLetterOfIntentId
  , salesOrderCustomerHabitualExporterLetterOfIntentId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customerId
  , salesOrderCustomerId :: Data.Text.Internal.Text
  -- | customerNumber
  , salesOrderCustomerNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | defaultShippingCarrierId
  , salesOrderDefaultShippingCarrierId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | defaultShippingCarrierName
  , salesOrderDefaultShippingCarrierName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | defaultShippingReturnCarrierId
  , salesOrderDefaultShippingReturnCarrierId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | defaultShippingReturnCarrierName
  , salesOrderDefaultShippingReturnCarrierName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | deliveryAddress
  , salesOrderDeliveryAddress :: (GHC.Maybe.Maybe RecordAddress)
  -- | deliveryEmailAddresses
  , salesOrderDeliveryEmailAddresses :: (GHC.Maybe.Maybe EmailAddresses)
  -- | description
  , salesOrderDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | disableEmailTemplate
  , salesOrderDisableEmailTemplate :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | dispatchCountryCode
  , salesOrderDispatchCountryCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | ecommerceOrder
  , salesOrderEcommerceOrder :: (GHC.Maybe.Maybe EcommerceOrder)
  -- | fulfillmentProviderId
  , salesOrderFulfillmentProviderId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | grossAmount
  , salesOrderGrossAmount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | grossAmountInCompanyCurrency
  , salesOrderGrossAmountInCompanyCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | headerDiscount
  , salesOrderHeaderDiscount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | headerSurcharge
  , salesOrderHeaderSurcharge :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id
  , salesOrderId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | invoiceAddress
  , salesOrderInvoiceAddress :: (GHC.Maybe.Maybe RecordAddress)
  -- | invoiceRecipientId
  , salesOrderInvoiceRecipientId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | invoiced
  , salesOrderInvoiced :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | lastModifiedDate
  , salesOrderLastModifiedDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | netAmount
  , salesOrderNetAmount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | netAmountInCompanyCurrency
  , salesOrderNetAmountInCompanyCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | nonStandardTaxId
  , salesOrderNonStandardTaxId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | nonStandardTaxName
  , salesOrderNonStandardTaxName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | orderDate
  , salesOrderOrderDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | orderItems
  , salesOrderOrderItems :: (GHC.Maybe.Maybe ([SalesOrderItem]))
  -- | orderNumber
  , salesOrderOrderNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | orderNumberAtCustomer
  , salesOrderOrderNumberAtCustomer :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | paid
  , salesOrderPaid :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | paymentMethodId
  , salesOrderPaymentMethodId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | paymentMethodName
  , salesOrderPaymentMethodName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | plannedDeliveryDate
  , salesOrderPlannedDeliveryDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | plannedShippingDate
  , salesOrderPlannedShippingDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | pricingDate
  , salesOrderPricingDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | quotationId
  , salesOrderQuotationId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | quotationNumber
  , salesOrderQuotationNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | recordAddress
  , salesOrderRecordAddress :: (GHC.Maybe.Maybe RecordAddress)
  -- | recordComment
  , salesOrderRecordComment :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | recordCurrencyId
  , salesOrderRecordCurrencyId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | recordCurrencyName
  , salesOrderRecordCurrencyName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | recordEmailAddresses
  , salesOrderRecordEmailAddresses :: (GHC.Maybe.Maybe EmailAddresses)
  -- | recordFreeText
  , salesOrderRecordFreeText :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | recordOpening
  , salesOrderRecordOpening :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | responsibleUserId
  , salesOrderResponsibleUserId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | responsibleUserUsername
  , salesOrderResponsibleUserUsername :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | salesChannel
  , salesOrderSalesChannel :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | salesInvoiceEmailAddresses
  , salesOrderSalesInvoiceEmailAddresses :: (GHC.Maybe.Maybe EmailAddresses)
  -- | salesOrderPaymentType
  , salesOrderSalesOrderPaymentType :: (GHC.Maybe.Maybe SalesOrderSalesOrderPaymentType')
  -- | sentToRecipient
  , salesOrderSentToRecipient :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | servicePeriodFrom
  , salesOrderServicePeriodFrom :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | servicePeriodTo
  , salesOrderServicePeriodTo :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | shipmentMethodId
  , salesOrderShipmentMethodId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | shipmentMethodName
  , salesOrderShipmentMethodName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | shipped
  , salesOrderShipped :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | shippingCostItems
  , salesOrderShippingCostItems :: (GHC.Maybe.Maybe ([SalesShippingCostItem]))
  -- | shippingLabelsCount
  , salesOrderShippingLabelsCount :: (GHC.Maybe.Maybe GHC.Int.Int32)
  -- | status
  , salesOrderStatus :: SalesOrderStatus'
  -- | statusHistory
  , salesOrderStatusHistory :: (GHC.Maybe.Maybe ([SalesOrderStatusHistory]))
  -- | tags
  , salesOrderTags :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | termOfPaymentId
  , salesOrderTermOfPaymentId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | termOfPaymentName
  , salesOrderTermOfPaymentName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | version
  , salesOrderVersion :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | warehouseId
  , salesOrderWarehouseId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | warehouseName
  , salesOrderWarehouseName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SalesOrder
    where toJSON obj = Data.Aeson.Types.Internal.object ("advancePaymentStatus" Data.Aeson.Types.ToJSON..= salesOrderAdvancePaymentStatus obj : "cashAccountId" Data.Aeson.Types.ToJSON..= salesOrderCashAccountId obj : "commercialLanguage" Data.Aeson.Types.ToJSON..= salesOrderCommercialLanguage obj : "commission" Data.Aeson.Types.ToJSON..= salesOrderCommission obj : "commissionSalesPartners" Data.Aeson.Types.ToJSON..= salesOrderCommissionSalesPartners obj : "createdDate" Data.Aeson.Types.ToJSON..= salesOrderCreatedDate obj : "currencyConversionDate" Data.Aeson.Types.ToJSON..= salesOrderCurrencyConversionDate obj : "currencyConversionRate" Data.Aeson.Types.ToJSON..= salesOrderCurrencyConversionRate obj : "customAttributes" Data.Aeson.Types.ToJSON..= salesOrderCustomAttributes obj : "customerHabitualExporterLetterOfIntentId" Data.Aeson.Types.ToJSON..= salesOrderCustomerHabitualExporterLetterOfIntentId obj : "customerId" Data.Aeson.Types.ToJSON..= salesOrderCustomerId obj : "customerNumber" Data.Aeson.Types.ToJSON..= salesOrderCustomerNumber obj : "defaultShippingCarrierId" Data.Aeson.Types.ToJSON..= salesOrderDefaultShippingCarrierId obj : "defaultShippingCarrierName" Data.Aeson.Types.ToJSON..= salesOrderDefaultShippingCarrierName obj : "defaultShippingReturnCarrierId" Data.Aeson.Types.ToJSON..= salesOrderDefaultShippingReturnCarrierId obj : "defaultShippingReturnCarrierName" Data.Aeson.Types.ToJSON..= salesOrderDefaultShippingReturnCarrierName obj : "deliveryAddress" Data.Aeson.Types.ToJSON..= salesOrderDeliveryAddress obj : "deliveryEmailAddresses" Data.Aeson.Types.ToJSON..= salesOrderDeliveryEmailAddresses obj : "description" Data.Aeson.Types.ToJSON..= salesOrderDescription obj : "disableEmailTemplate" Data.Aeson.Types.ToJSON..= salesOrderDisableEmailTemplate obj : "dispatchCountryCode" Data.Aeson.Types.ToJSON..= salesOrderDispatchCountryCode obj : "ecommerceOrder" Data.Aeson.Types.ToJSON..= salesOrderEcommerceOrder obj : "fulfillmentProviderId" Data.Aeson.Types.ToJSON..= salesOrderFulfillmentProviderId obj : "grossAmount" Data.Aeson.Types.ToJSON..= salesOrderGrossAmount obj : "grossAmountInCompanyCurrency" Data.Aeson.Types.ToJSON..= salesOrderGrossAmountInCompanyCurrency obj : "headerDiscount" Data.Aeson.Types.ToJSON..= salesOrderHeaderDiscount obj : "headerSurcharge" Data.Aeson.Types.ToJSON..= salesOrderHeaderSurcharge obj : "id" Data.Aeson.Types.ToJSON..= salesOrderId obj : "invoiceAddress" Data.Aeson.Types.ToJSON..= salesOrderInvoiceAddress obj : "invoiceRecipientId" Data.Aeson.Types.ToJSON..= salesOrderInvoiceRecipientId obj : "invoiced" Data.Aeson.Types.ToJSON..= salesOrderInvoiced obj : "lastModifiedDate" Data.Aeson.Types.ToJSON..= salesOrderLastModifiedDate obj : "netAmount" Data.Aeson.Types.ToJSON..= salesOrderNetAmount obj : "netAmountInCompanyCurrency" Data.Aeson.Types.ToJSON..= salesOrderNetAmountInCompanyCurrency obj : "nonStandardTaxId" Data.Aeson.Types.ToJSON..= salesOrderNonStandardTaxId obj : "nonStandardTaxName" Data.Aeson.Types.ToJSON..= salesOrderNonStandardTaxName obj : "orderDate" Data.Aeson.Types.ToJSON..= salesOrderOrderDate obj : "orderItems" Data.Aeson.Types.ToJSON..= salesOrderOrderItems obj : "orderNumber" Data.Aeson.Types.ToJSON..= salesOrderOrderNumber obj : "orderNumberAtCustomer" Data.Aeson.Types.ToJSON..= salesOrderOrderNumberAtCustomer obj : "paid" Data.Aeson.Types.ToJSON..= salesOrderPaid obj : "paymentMethodId" Data.Aeson.Types.ToJSON..= salesOrderPaymentMethodId obj : "paymentMethodName" Data.Aeson.Types.ToJSON..= salesOrderPaymentMethodName obj : "plannedDeliveryDate" Data.Aeson.Types.ToJSON..= salesOrderPlannedDeliveryDate obj : "plannedShippingDate" Data.Aeson.Types.ToJSON..= salesOrderPlannedShippingDate obj : "pricingDate" Data.Aeson.Types.ToJSON..= salesOrderPricingDate obj : "quotationId" Data.Aeson.Types.ToJSON..= salesOrderQuotationId obj : "quotationNumber" Data.Aeson.Types.ToJSON..= salesOrderQuotationNumber obj : "recordAddress" Data.Aeson.Types.ToJSON..= salesOrderRecordAddress obj : "recordComment" Data.Aeson.Types.ToJSON..= salesOrderRecordComment obj : "recordCurrencyId" Data.Aeson.Types.ToJSON..= salesOrderRecordCurrencyId obj : "recordCurrencyName" Data.Aeson.Types.ToJSON..= salesOrderRecordCurrencyName obj : "recordEmailAddresses" Data.Aeson.Types.ToJSON..= salesOrderRecordEmailAddresses obj : "recordFreeText" Data.Aeson.Types.ToJSON..= salesOrderRecordFreeText obj : "recordOpening" Data.Aeson.Types.ToJSON..= salesOrderRecordOpening obj : "responsibleUserId" Data.Aeson.Types.ToJSON..= salesOrderResponsibleUserId obj : "responsibleUserUsername" Data.Aeson.Types.ToJSON..= salesOrderResponsibleUserUsername obj : "salesChannel" Data.Aeson.Types.ToJSON..= salesOrderSalesChannel obj : "salesInvoiceEmailAddresses" Data.Aeson.Types.ToJSON..= salesOrderSalesInvoiceEmailAddresses obj : "salesOrderPaymentType" Data.Aeson.Types.ToJSON..= salesOrderSalesOrderPaymentType obj : "sentToRecipient" Data.Aeson.Types.ToJSON..= salesOrderSentToRecipient obj : "servicePeriodFrom" Data.Aeson.Types.ToJSON..= salesOrderServicePeriodFrom obj : "servicePeriodTo" Data.Aeson.Types.ToJSON..= salesOrderServicePeriodTo obj : "shipmentMethodId" Data.Aeson.Types.ToJSON..= salesOrderShipmentMethodId obj : "shipmentMethodName" Data.Aeson.Types.ToJSON..= salesOrderShipmentMethodName obj : "shipped" Data.Aeson.Types.ToJSON..= salesOrderShipped obj : "shippingCostItems" Data.Aeson.Types.ToJSON..= salesOrderShippingCostItems obj : "shippingLabelsCount" Data.Aeson.Types.ToJSON..= salesOrderShippingLabelsCount obj : "status" Data.Aeson.Types.ToJSON..= salesOrderStatus obj : "statusHistory" Data.Aeson.Types.ToJSON..= salesOrderStatusHistory obj : "tags" Data.Aeson.Types.ToJSON..= salesOrderTags obj : "termOfPaymentId" Data.Aeson.Types.ToJSON..= salesOrderTermOfPaymentId obj : "termOfPaymentName" Data.Aeson.Types.ToJSON..= salesOrderTermOfPaymentName obj : "version" Data.Aeson.Types.ToJSON..= salesOrderVersion obj : "warehouseId" Data.Aeson.Types.ToJSON..= salesOrderWarehouseId obj : "warehouseName" Data.Aeson.Types.ToJSON..= salesOrderWarehouseName obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("advancePaymentStatus" Data.Aeson.Types.ToJSON..= salesOrderAdvancePaymentStatus obj) GHC.Base.<> (("cashAccountId" Data.Aeson.Types.ToJSON..= salesOrderCashAccountId obj) GHC.Base.<> (("commercialLanguage" Data.Aeson.Types.ToJSON..= salesOrderCommercialLanguage obj) GHC.Base.<> (("commission" Data.Aeson.Types.ToJSON..= salesOrderCommission obj) GHC.Base.<> (("commissionSalesPartners" Data.Aeson.Types.ToJSON..= salesOrderCommissionSalesPartners obj) GHC.Base.<> (("createdDate" Data.Aeson.Types.ToJSON..= salesOrderCreatedDate obj) GHC.Base.<> (("currencyConversionDate" Data.Aeson.Types.ToJSON..= salesOrderCurrencyConversionDate obj) GHC.Base.<> (("currencyConversionRate" Data.Aeson.Types.ToJSON..= salesOrderCurrencyConversionRate obj) GHC.Base.<> (("customAttributes" Data.Aeson.Types.ToJSON..= salesOrderCustomAttributes obj) GHC.Base.<> (("customerHabitualExporterLetterOfIntentId" Data.Aeson.Types.ToJSON..= salesOrderCustomerHabitualExporterLetterOfIntentId obj) GHC.Base.<> (("customerId" Data.Aeson.Types.ToJSON..= salesOrderCustomerId obj) GHC.Base.<> (("customerNumber" Data.Aeson.Types.ToJSON..= salesOrderCustomerNumber obj) GHC.Base.<> (("defaultShippingCarrierId" Data.Aeson.Types.ToJSON..= salesOrderDefaultShippingCarrierId obj) GHC.Base.<> (("defaultShippingCarrierName" Data.Aeson.Types.ToJSON..= salesOrderDefaultShippingCarrierName obj) GHC.Base.<> (("defaultShippingReturnCarrierId" Data.Aeson.Types.ToJSON..= salesOrderDefaultShippingReturnCarrierId obj) GHC.Base.<> (("defaultShippingReturnCarrierName" Data.Aeson.Types.ToJSON..= salesOrderDefaultShippingReturnCarrierName obj) GHC.Base.<> (("deliveryAddress" Data.Aeson.Types.ToJSON..= salesOrderDeliveryAddress obj) GHC.Base.<> (("deliveryEmailAddresses" Data.Aeson.Types.ToJSON..= salesOrderDeliveryEmailAddresses obj) GHC.Base.<> (("description" Data.Aeson.Types.ToJSON..= salesOrderDescription obj) GHC.Base.<> (("disableEmailTemplate" Data.Aeson.Types.ToJSON..= salesOrderDisableEmailTemplate obj) GHC.Base.<> (("dispatchCountryCode" Data.Aeson.Types.ToJSON..= salesOrderDispatchCountryCode obj) GHC.Base.<> (("ecommerceOrder" Data.Aeson.Types.ToJSON..= salesOrderEcommerceOrder obj) GHC.Base.<> (("fulfillmentProviderId" Data.Aeson.Types.ToJSON..= salesOrderFulfillmentProviderId obj) GHC.Base.<> (("grossAmount" Data.Aeson.Types.ToJSON..= salesOrderGrossAmount obj) GHC.Base.<> (("grossAmountInCompanyCurrency" Data.Aeson.Types.ToJSON..= salesOrderGrossAmountInCompanyCurrency obj) GHC.Base.<> (("headerDiscount" Data.Aeson.Types.ToJSON..= salesOrderHeaderDiscount obj) GHC.Base.<> (("headerSurcharge" Data.Aeson.Types.ToJSON..= salesOrderHeaderSurcharge obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= salesOrderId obj) GHC.Base.<> (("invoiceAddress" Data.Aeson.Types.ToJSON..= salesOrderInvoiceAddress obj) GHC.Base.<> (("invoiceRecipientId" Data.Aeson.Types.ToJSON..= salesOrderInvoiceRecipientId obj) GHC.Base.<> (("invoiced" Data.Aeson.Types.ToJSON..= salesOrderInvoiced obj) GHC.Base.<> (("lastModifiedDate" Data.Aeson.Types.ToJSON..= salesOrderLastModifiedDate obj) GHC.Base.<> (("netAmount" Data.Aeson.Types.ToJSON..= salesOrderNetAmount obj) GHC.Base.<> (("netAmountInCompanyCurrency" Data.Aeson.Types.ToJSON..= salesOrderNetAmountInCompanyCurrency obj) GHC.Base.<> (("nonStandardTaxId" Data.Aeson.Types.ToJSON..= salesOrderNonStandardTaxId obj) GHC.Base.<> (("nonStandardTaxName" Data.Aeson.Types.ToJSON..= salesOrderNonStandardTaxName obj) GHC.Base.<> (("orderDate" Data.Aeson.Types.ToJSON..= salesOrderOrderDate obj) GHC.Base.<> (("orderItems" Data.Aeson.Types.ToJSON..= salesOrderOrderItems obj) GHC.Base.<> (("orderNumber" Data.Aeson.Types.ToJSON..= salesOrderOrderNumber obj) GHC.Base.<> (("orderNumberAtCustomer" Data.Aeson.Types.ToJSON..= salesOrderOrderNumberAtCustomer obj) GHC.Base.<> (("paid" Data.Aeson.Types.ToJSON..= salesOrderPaid obj) GHC.Base.<> (("paymentMethodId" Data.Aeson.Types.ToJSON..= salesOrderPaymentMethodId obj) GHC.Base.<> (("paymentMethodName" Data.Aeson.Types.ToJSON..= salesOrderPaymentMethodName obj) GHC.Base.<> (("plannedDeliveryDate" Data.Aeson.Types.ToJSON..= salesOrderPlannedDeliveryDate obj) GHC.Base.<> (("plannedShippingDate" Data.Aeson.Types.ToJSON..= salesOrderPlannedShippingDate obj) GHC.Base.<> (("pricingDate" Data.Aeson.Types.ToJSON..= salesOrderPricingDate obj) GHC.Base.<> (("quotationId" Data.Aeson.Types.ToJSON..= salesOrderQuotationId obj) GHC.Base.<> (("quotationNumber" Data.Aeson.Types.ToJSON..= salesOrderQuotationNumber obj) GHC.Base.<> (("recordAddress" Data.Aeson.Types.ToJSON..= salesOrderRecordAddress obj) GHC.Base.<> (("recordComment" Data.Aeson.Types.ToJSON..= salesOrderRecordComment obj) GHC.Base.<> (("recordCurrencyId" Data.Aeson.Types.ToJSON..= salesOrderRecordCurrencyId obj) GHC.Base.<> (("recordCurrencyName" Data.Aeson.Types.ToJSON..= salesOrderRecordCurrencyName obj) GHC.Base.<> (("recordEmailAddresses" Data.Aeson.Types.ToJSON..= salesOrderRecordEmailAddresses obj) GHC.Base.<> (("recordFreeText" Data.Aeson.Types.ToJSON..= salesOrderRecordFreeText obj) GHC.Base.<> (("recordOpening" Data.Aeson.Types.ToJSON..= salesOrderRecordOpening obj) GHC.Base.<> (("responsibleUserId" Data.Aeson.Types.ToJSON..= salesOrderResponsibleUserId obj) GHC.Base.<> (("responsibleUserUsername" Data.Aeson.Types.ToJSON..= salesOrderResponsibleUserUsername obj) GHC.Base.<> (("salesChannel" Data.Aeson.Types.ToJSON..= salesOrderSalesChannel obj) GHC.Base.<> (("salesInvoiceEmailAddresses" Data.Aeson.Types.ToJSON..= salesOrderSalesInvoiceEmailAddresses obj) GHC.Base.<> (("salesOrderPaymentType" Data.Aeson.Types.ToJSON..= salesOrderSalesOrderPaymentType obj) GHC.Base.<> (("sentToRecipient" Data.Aeson.Types.ToJSON..= salesOrderSentToRecipient obj) GHC.Base.<> (("servicePeriodFrom" Data.Aeson.Types.ToJSON..= salesOrderServicePeriodFrom obj) GHC.Base.<> (("servicePeriodTo" Data.Aeson.Types.ToJSON..= salesOrderServicePeriodTo obj) GHC.Base.<> (("shipmentMethodId" Data.Aeson.Types.ToJSON..= salesOrderShipmentMethodId obj) GHC.Base.<> (("shipmentMethodName" Data.Aeson.Types.ToJSON..= salesOrderShipmentMethodName obj) GHC.Base.<> (("shipped" Data.Aeson.Types.ToJSON..= salesOrderShipped obj) GHC.Base.<> (("shippingCostItems" Data.Aeson.Types.ToJSON..= salesOrderShippingCostItems obj) GHC.Base.<> (("shippingLabelsCount" Data.Aeson.Types.ToJSON..= salesOrderShippingLabelsCount obj) GHC.Base.<> (("status" Data.Aeson.Types.ToJSON..= salesOrderStatus obj) GHC.Base.<> (("statusHistory" Data.Aeson.Types.ToJSON..= salesOrderStatusHistory obj) GHC.Base.<> (("tags" Data.Aeson.Types.ToJSON..= salesOrderTags obj) GHC.Base.<> (("termOfPaymentId" Data.Aeson.Types.ToJSON..= salesOrderTermOfPaymentId obj) GHC.Base.<> (("termOfPaymentName" Data.Aeson.Types.ToJSON..= salesOrderTermOfPaymentName obj) GHC.Base.<> (("version" Data.Aeson.Types.ToJSON..= salesOrderVersion obj) GHC.Base.<> (("warehouseId" Data.Aeson.Types.ToJSON..= salesOrderWarehouseId obj) GHC.Base.<> ("warehouseName" Data.Aeson.Types.ToJSON..= salesOrderWarehouseName obj))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
instance Data.Aeson.Types.FromJSON.FromJSON SalesOrder
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "SalesOrder" (\obj -> (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((GHC.Base.pure SalesOrder GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "advancePaymentStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cashAccountId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "commercialLanguage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "commission")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "commissionSalesPartners")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "createdDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "currencyConversionDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "currencyConversionRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customAttributes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customerHabitualExporterLetterOfIntentId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "customerId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customerNumber")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "defaultShippingCarrierId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "defaultShippingCarrierName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "defaultShippingReturnCarrierId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "defaultShippingReturnCarrierName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "deliveryAddress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "deliveryEmailAddresses")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "disableEmailTemplate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "dispatchCountryCode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "ecommerceOrder")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "fulfillmentProviderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "grossAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "grossAmountInCompanyCurrency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "headerDiscount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "headerSurcharge")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoiceAddress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoiceRecipientId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoiced")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lastModifiedDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "netAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "netAmountInCompanyCurrency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "nonStandardTaxId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "nonStandardTaxName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "orderDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "orderItems")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "orderNumber")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "orderNumberAtCustomer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "paid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "paymentMethodId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "paymentMethodName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "plannedDeliveryDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "plannedShippingDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "pricingDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "quotationId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "quotationNumber")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordAddress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordComment")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordCurrencyId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordCurrencyName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordEmailAddresses")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordFreeText")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recordOpening")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "responsibleUserId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "responsibleUserUsername")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "salesChannel")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "salesInvoiceEmailAddresses")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "salesOrderPaymentType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "sentToRecipient")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "servicePeriodFrom")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "servicePeriodTo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipmentMethodId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipmentMethodName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipped")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shippingCostItems")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shippingLabelsCount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "statusHistory")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tags")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "termOfPaymentId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "termOfPaymentName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "version")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "warehouseId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "warehouseName"))
-- | Create a new 'SalesOrder' with all required fields.
mkSalesOrder :: Data.Text.Internal.Text -- ^ 'salesOrderCustomerId'
  -> SalesOrderStatus' -- ^ 'salesOrderStatus'
  -> SalesOrder
mkSalesOrder salesOrderCustomerId salesOrderStatus = SalesOrder{salesOrderAdvancePaymentStatus = GHC.Maybe.Nothing,
                                                                salesOrderCashAccountId = GHC.Maybe.Nothing,
                                                                salesOrderCommercialLanguage = GHC.Maybe.Nothing,
                                                                salesOrderCommission = GHC.Maybe.Nothing,
                                                                salesOrderCommissionSalesPartners = GHC.Maybe.Nothing,
                                                                salesOrderCreatedDate = GHC.Maybe.Nothing,
                                                                salesOrderCurrencyConversionDate = GHC.Maybe.Nothing,
                                                                salesOrderCurrencyConversionRate = GHC.Maybe.Nothing,
                                                                salesOrderCustomAttributes = GHC.Maybe.Nothing,
                                                                salesOrderCustomerHabitualExporterLetterOfIntentId = GHC.Maybe.Nothing,
                                                                salesOrderCustomerId = salesOrderCustomerId,
                                                                salesOrderCustomerNumber = GHC.Maybe.Nothing,
                                                                salesOrderDefaultShippingCarrierId = GHC.Maybe.Nothing,
                                                                salesOrderDefaultShippingCarrierName = GHC.Maybe.Nothing,
                                                                salesOrderDefaultShippingReturnCarrierId = GHC.Maybe.Nothing,
                                                                salesOrderDefaultShippingReturnCarrierName = GHC.Maybe.Nothing,
                                                                salesOrderDeliveryAddress = GHC.Maybe.Nothing,
                                                                salesOrderDeliveryEmailAddresses = GHC.Maybe.Nothing,
                                                                salesOrderDescription = GHC.Maybe.Nothing,
                                                                salesOrderDisableEmailTemplate = GHC.Maybe.Nothing,
                                                                salesOrderDispatchCountryCode = GHC.Maybe.Nothing,
                                                                salesOrderEcommerceOrder = GHC.Maybe.Nothing,
                                                                salesOrderFulfillmentProviderId = GHC.Maybe.Nothing,
                                                                salesOrderGrossAmount = GHC.Maybe.Nothing,
                                                                salesOrderGrossAmountInCompanyCurrency = GHC.Maybe.Nothing,
                                                                salesOrderHeaderDiscount = GHC.Maybe.Nothing,
                                                                salesOrderHeaderSurcharge = GHC.Maybe.Nothing,
                                                                salesOrderId = GHC.Maybe.Nothing,
                                                                salesOrderInvoiceAddress = GHC.Maybe.Nothing,
                                                                salesOrderInvoiceRecipientId = GHC.Maybe.Nothing,
                                                                salesOrderInvoiced = GHC.Maybe.Nothing,
                                                                salesOrderLastModifiedDate = GHC.Maybe.Nothing,
                                                                salesOrderNetAmount = GHC.Maybe.Nothing,
                                                                salesOrderNetAmountInCompanyCurrency = GHC.Maybe.Nothing,
                                                                salesOrderNonStandardTaxId = GHC.Maybe.Nothing,
                                                                salesOrderNonStandardTaxName = GHC.Maybe.Nothing,
                                                                salesOrderOrderDate = GHC.Maybe.Nothing,
                                                                salesOrderOrderItems = GHC.Maybe.Nothing,
                                                                salesOrderOrderNumber = GHC.Maybe.Nothing,
                                                                salesOrderOrderNumberAtCustomer = GHC.Maybe.Nothing,
                                                                salesOrderPaid = GHC.Maybe.Nothing,
                                                                salesOrderPaymentMethodId = GHC.Maybe.Nothing,
                                                                salesOrderPaymentMethodName = GHC.Maybe.Nothing,
                                                                salesOrderPlannedDeliveryDate = GHC.Maybe.Nothing,
                                                                salesOrderPlannedShippingDate = GHC.Maybe.Nothing,
                                                                salesOrderPricingDate = GHC.Maybe.Nothing,
                                                                salesOrderQuotationId = GHC.Maybe.Nothing,
                                                                salesOrderQuotationNumber = GHC.Maybe.Nothing,
                                                                salesOrderRecordAddress = GHC.Maybe.Nothing,
                                                                salesOrderRecordComment = GHC.Maybe.Nothing,
                                                                salesOrderRecordCurrencyId = GHC.Maybe.Nothing,
                                                                salesOrderRecordCurrencyName = GHC.Maybe.Nothing,
                                                                salesOrderRecordEmailAddresses = GHC.Maybe.Nothing,
                                                                salesOrderRecordFreeText = GHC.Maybe.Nothing,
                                                                salesOrderRecordOpening = GHC.Maybe.Nothing,
                                                                salesOrderResponsibleUserId = GHC.Maybe.Nothing,
                                                                salesOrderResponsibleUserUsername = GHC.Maybe.Nothing,
                                                                salesOrderSalesChannel = GHC.Maybe.Nothing,
                                                                salesOrderSalesInvoiceEmailAddresses = GHC.Maybe.Nothing,
                                                                salesOrderSalesOrderPaymentType = GHC.Maybe.Nothing,
                                                                salesOrderSentToRecipient = GHC.Maybe.Nothing,
                                                                salesOrderServicePeriodFrom = GHC.Maybe.Nothing,
                                                                salesOrderServicePeriodTo = GHC.Maybe.Nothing,
                                                                salesOrderShipmentMethodId = GHC.Maybe.Nothing,
                                                                salesOrderShipmentMethodName = GHC.Maybe.Nothing,
                                                                salesOrderShipped = GHC.Maybe.Nothing,
                                                                salesOrderShippingCostItems = GHC.Maybe.Nothing,
                                                                salesOrderShippingLabelsCount = GHC.Maybe.Nothing,
                                                                salesOrderStatus = salesOrderStatus,
                                                                salesOrderStatusHistory = GHC.Maybe.Nothing,
                                                                salesOrderTags = GHC.Maybe.Nothing,
                                                                salesOrderTermOfPaymentId = GHC.Maybe.Nothing,
                                                                salesOrderTermOfPaymentName = GHC.Maybe.Nothing,
                                                                salesOrderVersion = GHC.Maybe.Nothing,
                                                                salesOrderWarehouseId = GHC.Maybe.Nothing,
                                                                salesOrderWarehouseName = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.salesOrder.properties.advancePaymentStatus@ in the specification.
-- 
-- 
data SalesOrderAdvancePaymentStatus' =
   SalesOrderAdvancePaymentStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | SalesOrderAdvancePaymentStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | SalesOrderAdvancePaymentStatus'EnumOPEN -- ^ Represents the JSON value @"OPEN"@
  | SalesOrderAdvancePaymentStatus'EnumPAID -- ^ Represents the JSON value @"PAID"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SalesOrderAdvancePaymentStatus'
    where toJSON (SalesOrderAdvancePaymentStatus'Other val) = val
          toJSON (SalesOrderAdvancePaymentStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (SalesOrderAdvancePaymentStatus'EnumOPEN) = "OPEN"
          toJSON (SalesOrderAdvancePaymentStatus'EnumPAID) = "PAID"
instance Data.Aeson.Types.FromJSON.FromJSON SalesOrderAdvancePaymentStatus'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "OPEN" -> SalesOrderAdvancePaymentStatus'EnumOPEN
                                            | val GHC.Classes.== "PAID" -> SalesOrderAdvancePaymentStatus'EnumPAID
                                            | GHC.Base.otherwise -> SalesOrderAdvancePaymentStatus'Other val)
-- | Defines the enum schema located at @components.schemas.salesOrder.properties.salesOrderPaymentType@ in the specification.
-- 
-- 
data SalesOrderSalesOrderPaymentType' =
   SalesOrderSalesOrderPaymentType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | SalesOrderSalesOrderPaymentType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | SalesOrderSalesOrderPaymentType'EnumADVANCE_PAYMENT -- ^ Represents the JSON value @"ADVANCE_PAYMENT"@
  | SalesOrderSalesOrderPaymentType'EnumCOUNTER_SALES -- ^ Represents the JSON value @"COUNTER_SALES"@
  | SalesOrderSalesOrderPaymentType'EnumPART_PAYMENT -- ^ Represents the JSON value @"PART_PAYMENT"@
  | SalesOrderSalesOrderPaymentType'EnumPREPAYMENT -- ^ Represents the JSON value @"PREPAYMENT"@
  | SalesOrderSalesOrderPaymentType'EnumSTANDARD -- ^ Represents the JSON value @"STANDARD"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SalesOrderSalesOrderPaymentType'
    where toJSON (SalesOrderSalesOrderPaymentType'Other val) = val
          toJSON (SalesOrderSalesOrderPaymentType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (SalesOrderSalesOrderPaymentType'EnumADVANCE_PAYMENT) = "ADVANCE_PAYMENT"
          toJSON (SalesOrderSalesOrderPaymentType'EnumCOUNTER_SALES) = "COUNTER_SALES"
          toJSON (SalesOrderSalesOrderPaymentType'EnumPART_PAYMENT) = "PART_PAYMENT"
          toJSON (SalesOrderSalesOrderPaymentType'EnumPREPAYMENT) = "PREPAYMENT"
          toJSON (SalesOrderSalesOrderPaymentType'EnumSTANDARD) = "STANDARD"
instance Data.Aeson.Types.FromJSON.FromJSON SalesOrderSalesOrderPaymentType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "ADVANCE_PAYMENT" -> SalesOrderSalesOrderPaymentType'EnumADVANCE_PAYMENT
                                            | val GHC.Classes.== "COUNTER_SALES" -> SalesOrderSalesOrderPaymentType'EnumCOUNTER_SALES
                                            | val GHC.Classes.== "PART_PAYMENT" -> SalesOrderSalesOrderPaymentType'EnumPART_PAYMENT
                                            | val GHC.Classes.== "PREPAYMENT" -> SalesOrderSalesOrderPaymentType'EnumPREPAYMENT
                                            | val GHC.Classes.== "STANDARD" -> SalesOrderSalesOrderPaymentType'EnumSTANDARD
                                            | GHC.Base.otherwise -> SalesOrderSalesOrderPaymentType'Other val)
-- | Defines the enum schema located at @components.schemas.salesOrder.properties.status@ in the specification.
-- 
-- 
data SalesOrderStatus' =
   SalesOrderStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | SalesOrderStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | SalesOrderStatus'EnumCANCELLED -- ^ Represents the JSON value @"CANCELLED"@
  | SalesOrderStatus'EnumCLOSED -- ^ Represents the JSON value @"CLOSED"@
  | SalesOrderStatus'EnumMANUALLY_CLOSED -- ^ Represents the JSON value @"MANUALLY_CLOSED"@
  | SalesOrderStatus'EnumORDER_CONFIRMATION_PRINTED -- ^ Represents the JSON value @"ORDER_CONFIRMATION_PRINTED"@
  | SalesOrderStatus'EnumORDER_ENTRY_IN_PROGRESS -- ^ Represents the JSON value @"ORDER_ENTRY_IN_PROGRESS"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON SalesOrderStatus'
    where toJSON (SalesOrderStatus'Other val) = val
          toJSON (SalesOrderStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (SalesOrderStatus'EnumCANCELLED) = "CANCELLED"
          toJSON (SalesOrderStatus'EnumCLOSED) = "CLOSED"
          toJSON (SalesOrderStatus'EnumMANUALLY_CLOSED) = "MANUALLY_CLOSED"
          toJSON (SalesOrderStatus'EnumORDER_CONFIRMATION_PRINTED) = "ORDER_CONFIRMATION_PRINTED"
          toJSON (SalesOrderStatus'EnumORDER_ENTRY_IN_PROGRESS) = "ORDER_ENTRY_IN_PROGRESS"
instance Data.Aeson.Types.FromJSON.FromJSON SalesOrderStatus'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "CANCELLED" -> SalesOrderStatus'EnumCANCELLED
                                            | val GHC.Classes.== "CLOSED" -> SalesOrderStatus'EnumCLOSED
                                            | val GHC.Classes.== "MANUALLY_CLOSED" -> SalesOrderStatus'EnumMANUALLY_CLOSED
                                            | val GHC.Classes.== "ORDER_CONFIRMATION_PRINTED" -> SalesOrderStatus'EnumORDER_CONFIRMATION_PRINTED
                                            | val GHC.Classes.== "ORDER_ENTRY_IN_PROGRESS" -> SalesOrderStatus'EnumORDER_ENTRY_IN_PROGRESS
                                            | GHC.Base.otherwise -> SalesOrderStatus'Other val)
