-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema ReductionAdditionItem
module WeclappAPI.Types.ReductionAdditionItem where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified WeclappAPI.Common
import WeclappAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.reductionAdditionItem@ in the specification.
-- 
-- 
data ReductionAdditionItem = ReductionAdditionItem {
  -- | position
  reductionAdditionItemPosition :: (GHC.Maybe.Maybe GHC.Int.Int32)
  -- | source
  , reductionAdditionItemSource :: (GHC.Maybe.Maybe ReductionAdditionItemSource')
  -- | type
  , reductionAdditionItemType :: (GHC.Maybe.Maybe ReductionAdditionItemType')
  -- | value
  , reductionAdditionItemValue :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ReductionAdditionItem
    where toJSON obj = Data.Aeson.Types.Internal.object ("position" Data.Aeson.Types.ToJSON..= reductionAdditionItemPosition obj : "source" Data.Aeson.Types.ToJSON..= reductionAdditionItemSource obj : "type" Data.Aeson.Types.ToJSON..= reductionAdditionItemType obj : "value" Data.Aeson.Types.ToJSON..= reductionAdditionItemValue obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("position" Data.Aeson.Types.ToJSON..= reductionAdditionItemPosition obj) GHC.Base.<> (("source" Data.Aeson.Types.ToJSON..= reductionAdditionItemSource obj) GHC.Base.<> (("type" Data.Aeson.Types.ToJSON..= reductionAdditionItemType obj) GHC.Base.<> ("value" Data.Aeson.Types.ToJSON..= reductionAdditionItemValue obj))))
instance Data.Aeson.Types.FromJSON.FromJSON ReductionAdditionItem
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "ReductionAdditionItem" (\obj -> (((GHC.Base.pure ReductionAdditionItem GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "position")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "value"))
-- | Create a new 'ReductionAdditionItem' with all required fields.
mkReductionAdditionItem :: ReductionAdditionItem
mkReductionAdditionItem = ReductionAdditionItem{reductionAdditionItemPosition = GHC.Maybe.Nothing,
                                                reductionAdditionItemSource = GHC.Maybe.Nothing,
                                                reductionAdditionItemType = GHC.Maybe.Nothing,
                                                reductionAdditionItemValue = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.reductionAdditionItem.properties.source@ in the specification.
-- 
-- 
data ReductionAdditionItemSource' =
   ReductionAdditionItemSource'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | ReductionAdditionItemSource'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | ReductionAdditionItemSource'EnumARTICLE -- ^ Represents the JSON value @"ARTICLE"@
  | ReductionAdditionItemSource'EnumARTICLE_AND_CUSTOMER -- ^ Represents the JSON value @"ARTICLE_AND_CUSTOMER"@
  | ReductionAdditionItemSource'EnumARTICLE_CATEGORY -- ^ Represents the JSON value @"ARTICLE_CATEGORY"@
  | ReductionAdditionItemSource'EnumARTICLE_CATEGORY_AND_CUSTOMER -- ^ Represents the JSON value @"ARTICLE_CATEGORY_AND_CUSTOMER"@
  | ReductionAdditionItemSource'EnumMANUAL -- ^ Represents the JSON value @"MANUAL"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ReductionAdditionItemSource'
    where toJSON (ReductionAdditionItemSource'Other val) = val
          toJSON (ReductionAdditionItemSource'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (ReductionAdditionItemSource'EnumARTICLE) = "ARTICLE"
          toJSON (ReductionAdditionItemSource'EnumARTICLE_AND_CUSTOMER) = "ARTICLE_AND_CUSTOMER"
          toJSON (ReductionAdditionItemSource'EnumARTICLE_CATEGORY) = "ARTICLE_CATEGORY"
          toJSON (ReductionAdditionItemSource'EnumARTICLE_CATEGORY_AND_CUSTOMER) = "ARTICLE_CATEGORY_AND_CUSTOMER"
          toJSON (ReductionAdditionItemSource'EnumMANUAL) = "MANUAL"
instance Data.Aeson.Types.FromJSON.FromJSON ReductionAdditionItemSource'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "ARTICLE" -> ReductionAdditionItemSource'EnumARTICLE
                                            | val GHC.Classes.== "ARTICLE_AND_CUSTOMER" -> ReductionAdditionItemSource'EnumARTICLE_AND_CUSTOMER
                                            | val GHC.Classes.== "ARTICLE_CATEGORY" -> ReductionAdditionItemSource'EnumARTICLE_CATEGORY
                                            | val GHC.Classes.== "ARTICLE_CATEGORY_AND_CUSTOMER" -> ReductionAdditionItemSource'EnumARTICLE_CATEGORY_AND_CUSTOMER
                                            | val GHC.Classes.== "MANUAL" -> ReductionAdditionItemSource'EnumMANUAL
                                            | GHC.Base.otherwise -> ReductionAdditionItemSource'Other val)
-- | Defines the enum schema located at @components.schemas.reductionAdditionItem.properties.type@ in the specification.
-- 
-- 
data ReductionAdditionItemType' =
   ReductionAdditionItemType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | ReductionAdditionItemType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | ReductionAdditionItemType'EnumADDITION_ABSOLUTE -- ^ Represents the JSON value @"ADDITION_ABSOLUTE"@
  | ReductionAdditionItemType'EnumADDITION_PERCENT -- ^ Represents the JSON value @"ADDITION_PERCENT"@
  | ReductionAdditionItemType'EnumREBATE_PERCENT -- ^ Represents the JSON value @"REBATE_PERCENT"@
  | ReductionAdditionItemType'EnumREDUCTION_ABSOLUTE -- ^ Represents the JSON value @"REDUCTION_ABSOLUTE"@
  | ReductionAdditionItemType'EnumREDUCTION_PERCENT -- ^ Represents the JSON value @"REDUCTION_PERCENT"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ReductionAdditionItemType'
    where toJSON (ReductionAdditionItemType'Other val) = val
          toJSON (ReductionAdditionItemType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (ReductionAdditionItemType'EnumADDITION_ABSOLUTE) = "ADDITION_ABSOLUTE"
          toJSON (ReductionAdditionItemType'EnumADDITION_PERCENT) = "ADDITION_PERCENT"
          toJSON (ReductionAdditionItemType'EnumREBATE_PERCENT) = "REBATE_PERCENT"
          toJSON (ReductionAdditionItemType'EnumREDUCTION_ABSOLUTE) = "REDUCTION_ABSOLUTE"
          toJSON (ReductionAdditionItemType'EnumREDUCTION_PERCENT) = "REDUCTION_PERCENT"
instance Data.Aeson.Types.FromJSON.FromJSON ReductionAdditionItemType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "ADDITION_ABSOLUTE" -> ReductionAdditionItemType'EnumADDITION_ABSOLUTE
                                            | val GHC.Classes.== "ADDITION_PERCENT" -> ReductionAdditionItemType'EnumADDITION_PERCENT
                                            | val GHC.Classes.== "REBATE_PERCENT" -> ReductionAdditionItemType'EnumREBATE_PERCENT
                                            | val GHC.Classes.== "REDUCTION_ABSOLUTE" -> ReductionAdditionItemType'EnumREDUCTION_ABSOLUTE
                                            | val GHC.Classes.== "REDUCTION_PERCENT" -> ReductionAdditionItemType'EnumREDUCTION_PERCENT
                                            | GHC.Base.otherwise -> ReductionAdditionItemType'Other val)
