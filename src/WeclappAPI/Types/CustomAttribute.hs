-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema CustomAttribute
module WeclappAPI.Types.CustomAttribute where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified WeclappAPI.Common
import WeclappAPI.TypeAlias
import {-# SOURCE #-} WeclappAPI.Types.EntityReference
import {-# SOURCE #-} WeclappAPI.Types.OnlyId

-- | Defines the object schema located at @components.schemas.customAttribute@ in the specification.
-- 
-- 
data CustomAttribute = CustomAttribute {
  -- | attributeDefinitionId
  customAttributeAttributeDefinitionId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | booleanValue
  , customAttributeBooleanValue :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | dateValue
  , customAttributeDateValue :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | entityId
  , customAttributeEntityId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | entityReferences
  , customAttributeEntityReferences :: (GHC.Maybe.Maybe ([EntityReference]))
  -- | numberValue
  , customAttributeNumberValue :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | selectedValueId
  , customAttributeSelectedValueId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | selectedValues
  , customAttributeSelectedValues :: (GHC.Maybe.Maybe ([OnlyId]))
  -- | stringValue
  , customAttributeStringValue :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON CustomAttribute
    where toJSON obj = Data.Aeson.Types.Internal.object ("attributeDefinitionId" Data.Aeson.Types.ToJSON..= customAttributeAttributeDefinitionId obj : "booleanValue" Data.Aeson.Types.ToJSON..= customAttributeBooleanValue obj : "dateValue" Data.Aeson.Types.ToJSON..= customAttributeDateValue obj : "entityId" Data.Aeson.Types.ToJSON..= customAttributeEntityId obj : "entityReferences" Data.Aeson.Types.ToJSON..= customAttributeEntityReferences obj : "numberValue" Data.Aeson.Types.ToJSON..= customAttributeNumberValue obj : "selectedValueId" Data.Aeson.Types.ToJSON..= customAttributeSelectedValueId obj : "selectedValues" Data.Aeson.Types.ToJSON..= customAttributeSelectedValues obj : "stringValue" Data.Aeson.Types.ToJSON..= customAttributeStringValue obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("attributeDefinitionId" Data.Aeson.Types.ToJSON..= customAttributeAttributeDefinitionId obj) GHC.Base.<> (("booleanValue" Data.Aeson.Types.ToJSON..= customAttributeBooleanValue obj) GHC.Base.<> (("dateValue" Data.Aeson.Types.ToJSON..= customAttributeDateValue obj) GHC.Base.<> (("entityId" Data.Aeson.Types.ToJSON..= customAttributeEntityId obj) GHC.Base.<> (("entityReferences" Data.Aeson.Types.ToJSON..= customAttributeEntityReferences obj) GHC.Base.<> (("numberValue" Data.Aeson.Types.ToJSON..= customAttributeNumberValue obj) GHC.Base.<> (("selectedValueId" Data.Aeson.Types.ToJSON..= customAttributeSelectedValueId obj) GHC.Base.<> (("selectedValues" Data.Aeson.Types.ToJSON..= customAttributeSelectedValues obj) GHC.Base.<> ("stringValue" Data.Aeson.Types.ToJSON..= customAttributeStringValue obj)))))))))
instance Data.Aeson.Types.FromJSON.FromJSON CustomAttribute
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "CustomAttribute" (\obj -> ((((((((GHC.Base.pure CustomAttribute GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "attributeDefinitionId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "booleanValue")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "dateValue")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "entityId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "entityReferences")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "numberValue")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "selectedValueId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "selectedValues")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "stringValue"))
-- | Create a new 'CustomAttribute' with all required fields.
mkCustomAttribute :: CustomAttribute
mkCustomAttribute = CustomAttribute{customAttributeAttributeDefinitionId = GHC.Maybe.Nothing,
                                    customAttributeBooleanValue = GHC.Maybe.Nothing,
                                    customAttributeDateValue = GHC.Maybe.Nothing,
                                    customAttributeEntityId = GHC.Maybe.Nothing,
                                    customAttributeEntityReferences = GHC.Maybe.Nothing,
                                    customAttributeNumberValue = GHC.Maybe.Nothing,
                                    customAttributeSelectedValueId = GHC.Maybe.Nothing,
                                    customAttributeSelectedValues = GHC.Maybe.Nothing,
                                    customAttributeStringValue = GHC.Maybe.Nothing}
