-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema PartyBankAccount
module WeclappAPI.Types.PartyBankAccount where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified WeclappAPI.Common
import WeclappAPI.TypeAlias

-- | Defines the object schema located at @components.schemas.partyBankAccount@ in the specification.
-- 
-- 
data PartyBankAccount = PartyBankAccount {
  -- | accountHolder
  partyBankAccountAccountHolder :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | accountNumber
  , partyBankAccountAccountNumber :: Data.Text.Internal.Text
  -- | bankCode
  , partyBankAccountBankCode :: Data.Text.Internal.Text
  -- | createdDate
  , partyBankAccountCreatedDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | creditInstitute
  , partyBankAccountCreditInstitute :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id
  , partyBankAccountId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | lastModifiedDate
  , partyBankAccountLastModifiedDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | primary
  , partyBankAccountPrimary :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | version
  , partyBankAccountVersion :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PartyBankAccount
    where toJSON obj = Data.Aeson.Types.Internal.object ("accountHolder" Data.Aeson.Types.ToJSON..= partyBankAccountAccountHolder obj : "accountNumber" Data.Aeson.Types.ToJSON..= partyBankAccountAccountNumber obj : "bankCode" Data.Aeson.Types.ToJSON..= partyBankAccountBankCode obj : "createdDate" Data.Aeson.Types.ToJSON..= partyBankAccountCreatedDate obj : "creditInstitute" Data.Aeson.Types.ToJSON..= partyBankAccountCreditInstitute obj : "id" Data.Aeson.Types.ToJSON..= partyBankAccountId obj : "lastModifiedDate" Data.Aeson.Types.ToJSON..= partyBankAccountLastModifiedDate obj : "primary" Data.Aeson.Types.ToJSON..= partyBankAccountPrimary obj : "version" Data.Aeson.Types.ToJSON..= partyBankAccountVersion obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("accountHolder" Data.Aeson.Types.ToJSON..= partyBankAccountAccountHolder obj) GHC.Base.<> (("accountNumber" Data.Aeson.Types.ToJSON..= partyBankAccountAccountNumber obj) GHC.Base.<> (("bankCode" Data.Aeson.Types.ToJSON..= partyBankAccountBankCode obj) GHC.Base.<> (("createdDate" Data.Aeson.Types.ToJSON..= partyBankAccountCreatedDate obj) GHC.Base.<> (("creditInstitute" Data.Aeson.Types.ToJSON..= partyBankAccountCreditInstitute obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= partyBankAccountId obj) GHC.Base.<> (("lastModifiedDate" Data.Aeson.Types.ToJSON..= partyBankAccountLastModifiedDate obj) GHC.Base.<> (("primary" Data.Aeson.Types.ToJSON..= partyBankAccountPrimary obj) GHC.Base.<> ("version" Data.Aeson.Types.ToJSON..= partyBankAccountVersion obj)))))))))
instance Data.Aeson.Types.FromJSON.FromJSON PartyBankAccount
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PartyBankAccount" (\obj -> ((((((((GHC.Base.pure PartyBankAccount GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "accountHolder")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "accountNumber")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "bankCode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "createdDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "creditInstitute")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lastModifiedDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "primary")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "version"))
-- | Create a new 'PartyBankAccount' with all required fields.
mkPartyBankAccount :: Data.Text.Internal.Text -- ^ 'partyBankAccountAccountNumber'
  -> Data.Text.Internal.Text -- ^ 'partyBankAccountBankCode'
  -> PartyBankAccount
mkPartyBankAccount partyBankAccountAccountNumber partyBankAccountBankCode = PartyBankAccount{partyBankAccountAccountHolder = GHC.Maybe.Nothing,
                                                                                             partyBankAccountAccountNumber = partyBankAccountAccountNumber,
                                                                                             partyBankAccountBankCode = partyBankAccountBankCode,
                                                                                             partyBankAccountCreatedDate = GHC.Maybe.Nothing,
                                                                                             partyBankAccountCreditInstitute = GHC.Maybe.Nothing,
                                                                                             partyBankAccountId = GHC.Maybe.Nothing,
                                                                                             partyBankAccountLastModifiedDate = GHC.Maybe.Nothing,
                                                                                             partyBankAccountPrimary = GHC.Maybe.Nothing,
                                                                                             partyBankAccountVersion = GHC.Maybe.Nothing}
