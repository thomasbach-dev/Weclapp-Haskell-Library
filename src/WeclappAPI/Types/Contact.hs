-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema Contact
module WeclappAPI.Types.Contact where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified WeclappAPI.Common
import WeclappAPI.TypeAlias
import {-# SOURCE #-} WeclappAPI.Types.Address
import {-# SOURCE #-} WeclappAPI.Types.CustomAttribute
import {-# SOURCE #-} WeclappAPI.Types.OnlineAccount

-- | Defines the object schema located at @components.schemas.contact@ in the specification.
-- 
-- 
data Contact = Contact {
  -- | addresses
  contactAddresses :: (GHC.Maybe.Maybe ([Address]))
  -- | birthDate
  , contactBirthDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | company
  , contactCompany :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | company2
  , contactCompany2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | createdDate
  , contactCreatedDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | customAttributes
  , contactCustomAttributes :: (GHC.Maybe.Maybe ([CustomAttribute]))
  -- | customerCategoryId
  , contactCustomerCategoryId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customerCategoryName
  , contactCustomerCategoryName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | deliveryAddressId
  , contactDeliveryAddressId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | description
  , contactDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | email
  , contactEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | fax
  , contactFax :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | firstName
  , contactFirstName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | fixPhone2
  , contactFixPhone2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id
  , contactId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | invoiceAddressId
  , contactInvoiceAddressId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | lastModifiedDate
  , contactLastModifiedDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | lastName
  , contactLastName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | middleName
  , contactMiddleName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | mobilePhone1
  , contactMobilePhone1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | mobilePhone2
  , contactMobilePhone2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | onlineAccounts
  , contactOnlineAccounts :: (GHC.Maybe.Maybe ([OnlineAccount]))
  -- | optIn
  , contactOptIn :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | optInLetter
  , contactOptInLetter :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | optInPhone
  , contactOptInPhone :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | optInSms
  , contactOptInSms :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | partyType
  , contactPartyType :: ContactPartyType'
  -- | personCompany
  , contactPersonCompany :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | personDepartment
  , contactPersonDepartment :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | personRole
  , contactPersonRole :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | phone
  , contactPhone :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | phoneHome
  , contactPhoneHome :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | primaryAddressId
  , contactPrimaryAddressId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | salutation
  , contactSalutation :: (GHC.Maybe.Maybe ContactSalutation')
  -- | tags
  , contactTags :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | title
  , contactTitle :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | titleId
  , contactTitleId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | version
  , contactVersion :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | website
  , contactWebsite :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Contact
    where toJSON obj = Data.Aeson.Types.Internal.object ("addresses" Data.Aeson.Types.ToJSON..= contactAddresses obj : "birthDate" Data.Aeson.Types.ToJSON..= contactBirthDate obj : "company" Data.Aeson.Types.ToJSON..= contactCompany obj : "company2" Data.Aeson.Types.ToJSON..= contactCompany2 obj : "createdDate" Data.Aeson.Types.ToJSON..= contactCreatedDate obj : "customAttributes" Data.Aeson.Types.ToJSON..= contactCustomAttributes obj : "customerCategoryId" Data.Aeson.Types.ToJSON..= contactCustomerCategoryId obj : "customerCategoryName" Data.Aeson.Types.ToJSON..= contactCustomerCategoryName obj : "deliveryAddressId" Data.Aeson.Types.ToJSON..= contactDeliveryAddressId obj : "description" Data.Aeson.Types.ToJSON..= contactDescription obj : "email" Data.Aeson.Types.ToJSON..= contactEmail obj : "fax" Data.Aeson.Types.ToJSON..= contactFax obj : "firstName" Data.Aeson.Types.ToJSON..= contactFirstName obj : "fixPhone2" Data.Aeson.Types.ToJSON..= contactFixPhone2 obj : "id" Data.Aeson.Types.ToJSON..= contactId obj : "invoiceAddressId" Data.Aeson.Types.ToJSON..= contactInvoiceAddressId obj : "lastModifiedDate" Data.Aeson.Types.ToJSON..= contactLastModifiedDate obj : "lastName" Data.Aeson.Types.ToJSON..= contactLastName obj : "middleName" Data.Aeson.Types.ToJSON..= contactMiddleName obj : "mobilePhone1" Data.Aeson.Types.ToJSON..= contactMobilePhone1 obj : "mobilePhone2" Data.Aeson.Types.ToJSON..= contactMobilePhone2 obj : "onlineAccounts" Data.Aeson.Types.ToJSON..= contactOnlineAccounts obj : "optIn" Data.Aeson.Types.ToJSON..= contactOptIn obj : "optInLetter" Data.Aeson.Types.ToJSON..= contactOptInLetter obj : "optInPhone" Data.Aeson.Types.ToJSON..= contactOptInPhone obj : "optInSms" Data.Aeson.Types.ToJSON..= contactOptInSms obj : "partyType" Data.Aeson.Types.ToJSON..= contactPartyType obj : "personCompany" Data.Aeson.Types.ToJSON..= contactPersonCompany obj : "personDepartment" Data.Aeson.Types.ToJSON..= contactPersonDepartment obj : "personRole" Data.Aeson.Types.ToJSON..= contactPersonRole obj : "phone" Data.Aeson.Types.ToJSON..= contactPhone obj : "phoneHome" Data.Aeson.Types.ToJSON..= contactPhoneHome obj : "primaryAddressId" Data.Aeson.Types.ToJSON..= contactPrimaryAddressId obj : "salutation" Data.Aeson.Types.ToJSON..= contactSalutation obj : "tags" Data.Aeson.Types.ToJSON..= contactTags obj : "title" Data.Aeson.Types.ToJSON..= contactTitle obj : "titleId" Data.Aeson.Types.ToJSON..= contactTitleId obj : "version" Data.Aeson.Types.ToJSON..= contactVersion obj : "website" Data.Aeson.Types.ToJSON..= contactWebsite obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("addresses" Data.Aeson.Types.ToJSON..= contactAddresses obj) GHC.Base.<> (("birthDate" Data.Aeson.Types.ToJSON..= contactBirthDate obj) GHC.Base.<> (("company" Data.Aeson.Types.ToJSON..= contactCompany obj) GHC.Base.<> (("company2" Data.Aeson.Types.ToJSON..= contactCompany2 obj) GHC.Base.<> (("createdDate" Data.Aeson.Types.ToJSON..= contactCreatedDate obj) GHC.Base.<> (("customAttributes" Data.Aeson.Types.ToJSON..= contactCustomAttributes obj) GHC.Base.<> (("customerCategoryId" Data.Aeson.Types.ToJSON..= contactCustomerCategoryId obj) GHC.Base.<> (("customerCategoryName" Data.Aeson.Types.ToJSON..= contactCustomerCategoryName obj) GHC.Base.<> (("deliveryAddressId" Data.Aeson.Types.ToJSON..= contactDeliveryAddressId obj) GHC.Base.<> (("description" Data.Aeson.Types.ToJSON..= contactDescription obj) GHC.Base.<> (("email" Data.Aeson.Types.ToJSON..= contactEmail obj) GHC.Base.<> (("fax" Data.Aeson.Types.ToJSON..= contactFax obj) GHC.Base.<> (("firstName" Data.Aeson.Types.ToJSON..= contactFirstName obj) GHC.Base.<> (("fixPhone2" Data.Aeson.Types.ToJSON..= contactFixPhone2 obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= contactId obj) GHC.Base.<> (("invoiceAddressId" Data.Aeson.Types.ToJSON..= contactInvoiceAddressId obj) GHC.Base.<> (("lastModifiedDate" Data.Aeson.Types.ToJSON..= contactLastModifiedDate obj) GHC.Base.<> (("lastName" Data.Aeson.Types.ToJSON..= contactLastName obj) GHC.Base.<> (("middleName" Data.Aeson.Types.ToJSON..= contactMiddleName obj) GHC.Base.<> (("mobilePhone1" Data.Aeson.Types.ToJSON..= contactMobilePhone1 obj) GHC.Base.<> (("mobilePhone2" Data.Aeson.Types.ToJSON..= contactMobilePhone2 obj) GHC.Base.<> (("onlineAccounts" Data.Aeson.Types.ToJSON..= contactOnlineAccounts obj) GHC.Base.<> (("optIn" Data.Aeson.Types.ToJSON..= contactOptIn obj) GHC.Base.<> (("optInLetter" Data.Aeson.Types.ToJSON..= contactOptInLetter obj) GHC.Base.<> (("optInPhone" Data.Aeson.Types.ToJSON..= contactOptInPhone obj) GHC.Base.<> (("optInSms" Data.Aeson.Types.ToJSON..= contactOptInSms obj) GHC.Base.<> (("partyType" Data.Aeson.Types.ToJSON..= contactPartyType obj) GHC.Base.<> (("personCompany" Data.Aeson.Types.ToJSON..= contactPersonCompany obj) GHC.Base.<> (("personDepartment" Data.Aeson.Types.ToJSON..= contactPersonDepartment obj) GHC.Base.<> (("personRole" Data.Aeson.Types.ToJSON..= contactPersonRole obj) GHC.Base.<> (("phone" Data.Aeson.Types.ToJSON..= contactPhone obj) GHC.Base.<> (("phoneHome" Data.Aeson.Types.ToJSON..= contactPhoneHome obj) GHC.Base.<> (("primaryAddressId" Data.Aeson.Types.ToJSON..= contactPrimaryAddressId obj) GHC.Base.<> (("salutation" Data.Aeson.Types.ToJSON..= contactSalutation obj) GHC.Base.<> (("tags" Data.Aeson.Types.ToJSON..= contactTags obj) GHC.Base.<> (("title" Data.Aeson.Types.ToJSON..= contactTitle obj) GHC.Base.<> (("titleId" Data.Aeson.Types.ToJSON..= contactTitleId obj) GHC.Base.<> (("version" Data.Aeson.Types.ToJSON..= contactVersion obj) GHC.Base.<> ("website" Data.Aeson.Types.ToJSON..= contactWebsite obj)))))))))))))))))))))))))))))))))))))))
instance Data.Aeson.Types.FromJSON.FromJSON Contact
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Contact" (\obj -> ((((((((((((((((((((((((((((((((((((((GHC.Base.pure Contact GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "addresses")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "birthDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "company")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "company2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "createdDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customAttributes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customerCategoryId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customerCategoryName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "deliveryAddressId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "fax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "firstName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "fixPhone2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoiceAddressId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lastModifiedDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lastName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "middleName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "mobilePhone1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "mobilePhone2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "onlineAccounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "optIn")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "optInLetter")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "optInPhone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "optInSms")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "partyType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "personCompany")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "personDepartment")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "personRole")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "phoneHome")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "primaryAddressId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "salutation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tags")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "title")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "titleId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "version")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "website"))
-- | Create a new 'Contact' with all required fields.
mkContact :: ContactPartyType' -- ^ 'contactPartyType'
  -> Contact
mkContact contactPartyType = Contact{contactAddresses = GHC.Maybe.Nothing,
                                     contactBirthDate = GHC.Maybe.Nothing,
                                     contactCompany = GHC.Maybe.Nothing,
                                     contactCompany2 = GHC.Maybe.Nothing,
                                     contactCreatedDate = GHC.Maybe.Nothing,
                                     contactCustomAttributes = GHC.Maybe.Nothing,
                                     contactCustomerCategoryId = GHC.Maybe.Nothing,
                                     contactCustomerCategoryName = GHC.Maybe.Nothing,
                                     contactDeliveryAddressId = GHC.Maybe.Nothing,
                                     contactDescription = GHC.Maybe.Nothing,
                                     contactEmail = GHC.Maybe.Nothing,
                                     contactFax = GHC.Maybe.Nothing,
                                     contactFirstName = GHC.Maybe.Nothing,
                                     contactFixPhone2 = GHC.Maybe.Nothing,
                                     contactId = GHC.Maybe.Nothing,
                                     contactInvoiceAddressId = GHC.Maybe.Nothing,
                                     contactLastModifiedDate = GHC.Maybe.Nothing,
                                     contactLastName = GHC.Maybe.Nothing,
                                     contactMiddleName = GHC.Maybe.Nothing,
                                     contactMobilePhone1 = GHC.Maybe.Nothing,
                                     contactMobilePhone2 = GHC.Maybe.Nothing,
                                     contactOnlineAccounts = GHC.Maybe.Nothing,
                                     contactOptIn = GHC.Maybe.Nothing,
                                     contactOptInLetter = GHC.Maybe.Nothing,
                                     contactOptInPhone = GHC.Maybe.Nothing,
                                     contactOptInSms = GHC.Maybe.Nothing,
                                     contactPartyType = contactPartyType,
                                     contactPersonCompany = GHC.Maybe.Nothing,
                                     contactPersonDepartment = GHC.Maybe.Nothing,
                                     contactPersonRole = GHC.Maybe.Nothing,
                                     contactPhone = GHC.Maybe.Nothing,
                                     contactPhoneHome = GHC.Maybe.Nothing,
                                     contactPrimaryAddressId = GHC.Maybe.Nothing,
                                     contactSalutation = GHC.Maybe.Nothing,
                                     contactTags = GHC.Maybe.Nothing,
                                     contactTitle = GHC.Maybe.Nothing,
                                     contactTitleId = GHC.Maybe.Nothing,
                                     contactVersion = GHC.Maybe.Nothing,
                                     contactWebsite = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.contact.properties.partyType@ in the specification.
-- 
-- 
data ContactPartyType' =
   ContactPartyType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | ContactPartyType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | ContactPartyType'EnumORGANIZATION -- ^ Represents the JSON value @"ORGANIZATION"@
  | ContactPartyType'EnumPERSON -- ^ Represents the JSON value @"PERSON"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ContactPartyType'
    where toJSON (ContactPartyType'Other val) = val
          toJSON (ContactPartyType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (ContactPartyType'EnumORGANIZATION) = "ORGANIZATION"
          toJSON (ContactPartyType'EnumPERSON) = "PERSON"
instance Data.Aeson.Types.FromJSON.FromJSON ContactPartyType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "ORGANIZATION" -> ContactPartyType'EnumORGANIZATION
                                            | val GHC.Classes.== "PERSON" -> ContactPartyType'EnumPERSON
                                            | GHC.Base.otherwise -> ContactPartyType'Other val)
-- | Defines the enum schema located at @components.schemas.contact.properties.salutation@ in the specification.
-- 
-- 
data ContactSalutation' =
   ContactSalutation'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | ContactSalutation'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | ContactSalutation'EnumCOMPANY -- ^ Represents the JSON value @"COMPANY"@
  | ContactSalutation'EnumFAMILY -- ^ Represents the JSON value @"FAMILY"@
  | ContactSalutation'EnumMR -- ^ Represents the JSON value @"MR"@
  | ContactSalutation'EnumMRS -- ^ Represents the JSON value @"MRS"@
  | ContactSalutation'EnumNO_SALUTATION -- ^ Represents the JSON value @"NO_SALUTATION"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON ContactSalutation'
    where toJSON (ContactSalutation'Other val) = val
          toJSON (ContactSalutation'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (ContactSalutation'EnumCOMPANY) = "COMPANY"
          toJSON (ContactSalutation'EnumFAMILY) = "FAMILY"
          toJSON (ContactSalutation'EnumMR) = "MR"
          toJSON (ContactSalutation'EnumMRS) = "MRS"
          toJSON (ContactSalutation'EnumNO_SALUTATION) = "NO_SALUTATION"
instance Data.Aeson.Types.FromJSON.FromJSON ContactSalutation'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "COMPANY" -> ContactSalutation'EnumCOMPANY
                                            | val GHC.Classes.== "FAMILY" -> ContactSalutation'EnumFAMILY
                                            | val GHC.Classes.== "MR" -> ContactSalutation'EnumMR
                                            | val GHC.Classes.== "MRS" -> ContactSalutation'EnumMRS
                                            | val GHC.Classes.== "NO_SALUTATION" -> ContactSalutation'EnumNO_SALUTATION
                                            | GHC.Base.otherwise -> ContactSalutation'Other val)
