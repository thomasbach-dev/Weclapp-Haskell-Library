-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation get_articleCategory_id__id__downloadImage
module WeclappAPI.Operations.Get_articleCategory_id__id__downloadImage where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified WeclappAPI.Common
import WeclappAPI.Types

-- | > GET /articleCategory/id/{id}/downloadImage
-- 
-- 
get_articleCategory_id__id__downloadImage :: forall m . WeclappAPI.Common.MonadHTTP m => Get_articleCategory_id__id__downloadImageParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> WeclappAPI.Common.ClientT m (Network.HTTP.Client.Types.Response Get_articleCategory_id__id__downloadImageResponse) -- ^ Monadic computation which returns the result of the operation
get_articleCategory_id__id__downloadImage parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either Get_articleCategory_id__id__downloadImageResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Get_articleCategory_id__id__downloadImageResponse200
                                                                                                                                                                                                                           | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (WeclappAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/articleCategory/id/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ WeclappAPI.Common.stringifyModel (get_articleCategory_id__id__downloadImageParametersPathId parameters))) GHC.Base.++ "/downloadImage"))) [WeclappAPI.Common.QueryParameter (Data.Text.pack "scaleWidth") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_articleCategory_id__id__downloadImageParametersQueryScaleWidth parameters) (Data.Text.pack "form") GHC.Types.False,
eclappAPI.Common.QueryParameter (Data.Text.pack "scaleHeight") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_articleCategory_id__id__downloadImageParametersQueryScaleHeight parameters) (Data.Text.pack "form") GHC.Types.False,
eclappAPI.Common.QueryParameter (Data.Text.pack "imageId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_articleCategory_id__id__downloadImageParametersQueryImageId parameters) (Data.Text.pack "form") GHC.Types.False])
-- | Defines the object schema located at @paths.\/articleCategory\/id\/{id}\/downloadImage.GET.parameters@ in the specification.
-- 
-- 
data Get_articleCategory_id__id__downloadImageParameters = Get_articleCategory_id__id__downloadImageParameters {
  -- | pathId: Represents the parameter named \'id\'
  get_articleCategory_id__id__downloadImageParametersPathId :: Data.Text.Internal.Text
  -- | queryImageId: Represents the parameter named \'imageId\'
  , get_articleCategory_id__id__downloadImageParametersQueryImageId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryScaleHeight: Represents the parameter named \'scaleHeight\'
  , get_articleCategory_id__id__downloadImageParametersQueryScaleHeight :: (GHC.Maybe.Maybe GHC.Int.Int32)
  -- | queryScaleWidth: Represents the parameter named \'scaleWidth\'
  , get_articleCategory_id__id__downloadImageParametersQueryScaleWidth :: (GHC.Maybe.Maybe GHC.Int.Int32)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Get_articleCategory_id__id__downloadImageParameters
    where toJSON obj = Data.Aeson.Types.Internal.object ("pathId" Data.Aeson.Types.ToJSON..= get_articleCategory_id__id__downloadImageParametersPathId obj : "queryImageId" Data.Aeson.Types.ToJSON..= get_articleCategory_id__id__downloadImageParametersQueryImageId obj : "queryScaleHeight" Data.Aeson.Types.ToJSON..= get_articleCategory_id__id__downloadImageParametersQueryScaleHeight obj : "queryScaleWidth" Data.Aeson.Types.ToJSON..= get_articleCategory_id__id__downloadImageParametersQueryScaleWidth obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("pathId" Data.Aeson.Types.ToJSON..= get_articleCategory_id__id__downloadImageParametersPathId obj) GHC.Base.<> (("queryImageId" Data.Aeson.Types.ToJSON..= get_articleCategory_id__id__downloadImageParametersQueryImageId obj) GHC.Base.<> (("queryScaleHeight" Data.Aeson.Types.ToJSON..= get_articleCategory_id__id__downloadImageParametersQueryScaleHeight obj) GHC.Base.<> ("queryScaleWidth" Data.Aeson.Types.ToJSON..= get_articleCategory_id__id__downloadImageParametersQueryScaleWidth obj))))
instance Data.Aeson.Types.FromJSON.FromJSON Get_articleCategory_id__id__downloadImageParameters
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Get_articleCategory_id__id__downloadImageParameters" (\obj -> (((GHC.Base.pure Get_articleCategory_id__id__downloadImageParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryImageId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryScaleHeight")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryScaleWidth"))
-- | Create a new 'Get_articleCategory_id__id__downloadImageParameters' with all required fields.
mkGet_articleCategory_id__id__downloadImageParameters :: Data.Text.Internal.Text -- ^ 'get_articleCategory_id__id__downloadImageParametersPathId'
  -> Get_articleCategory_id__id__downloadImageParameters
mkGet_articleCategory_id__id__downloadImageParameters get_articleCategory_id__id__downloadImageParametersPathId = Get_articleCategory_id__id__downloadImageParameters{get_articleCategory_id__id__downloadImageParametersPathId = get_articleCategory_id__id__downloadImageParametersPathId,
                                                                                                                                                                      get_articleCategory_id__id__downloadImageParametersQueryImageId = GHC.Maybe.Nothing,
                                                                                                                                                                      get_articleCategory_id__id__downloadImageParametersQueryScaleHeight = GHC.Maybe.Nothing,
                                                                                                                                                                      get_articleCategory_id__id__downloadImageParametersQueryScaleWidth = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'get_articleCategory_id__id__downloadImage'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'Get_articleCategory_id__id__downloadImageResponseError' is used.
data Get_articleCategory_id__id__downloadImageResponse =
   Get_articleCategory_id__id__downloadImageResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | Get_articleCategory_id__id__downloadImageResponse200 -- ^ downloadImage response
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | > GET /articleCategory/id/{id}/downloadImage
-- 
-- The same as 'get_articleCategory_id__id__downloadImage' but accepts an explicit configuration.
get_articleCategory_id__id__downloadImageWithConfiguration :: forall m . WeclappAPI.Common.MonadHTTP m => WeclappAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Get_articleCategory_id__id__downloadImageParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response Get_articleCategory_id__id__downloadImageResponse) -- ^ Monadic computation which returns the result of the operation
get_articleCategory_id__id__downloadImageWithConfiguration config
                                                           parameters = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either Get_articleCategory_id__id__downloadImageResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Get_articleCategory_id__id__downloadImageResponse200
                                                                                                                                                                                                                                            | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (WeclappAPI.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/articleCategory/id/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ WeclappAPI.Common.stringifyModel (get_articleCategory_id__id__downloadImageParametersPathId parameters))) GHC.Base.++ "/downloadImage"))) [WeclappAPI.Common.QueryParameter (Data.Text.pack "scaleWidth") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_articleCategory_id__id__downloadImageParametersQueryScaleWidth parameters) (Data.Text.pack "form") GHC.Types.False,
eclappAPI.Common.QueryParameter (Data.Text.pack "scaleHeight") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_articleCategory_id__id__downloadImageParametersQueryScaleHeight parameters) (Data.Text.pack "form") GHC.Types.False,
eclappAPI.Common.QueryParameter (Data.Text.pack "imageId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_articleCategory_id__id__downloadImageParametersQueryImageId parameters) (Data.Text.pack "form") GHC.Types.False])
-- | > GET /articleCategory/id/{id}/downloadImage
-- 
-- The same as 'get_articleCategory_id__id__downloadImage' but returns the raw 'Data.ByteString.Char8.ByteString'.
get_articleCategory_id__id__downloadImageRaw :: forall m . WeclappAPI.Common.MonadHTTP m => Get_articleCategory_id__id__downloadImageParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> WeclappAPI.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
get_articleCategory_id__id__downloadImageRaw parameters = GHC.Base.id (WeclappAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/articleCategory/id/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ WeclappAPI.Common.stringifyModel (get_articleCategory_id__id__downloadImageParametersPathId parameters))) GHC.Base.++ "/downloadImage"))) [WeclappAPI.Common.QueryParameter (Data.Text.pack "scaleWidth") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_articleCategory_id__id__downloadImageParametersQueryScaleWidth parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                WeclappAPI.Common.QueryParameter (Data.Text.pack "scaleHeight") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_articleCategory_id__id__downloadImageParametersQueryScaleHeight parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                WeclappAPI.Common.QueryParameter (Data.Text.pack "imageId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_articleCategory_id__id__downloadImageParametersQueryImageId parameters) (Data.Text.pack "form") GHC.Types.False])
-- | > GET /articleCategory/id/{id}/downloadImage
-- 
-- The same as 'get_articleCategory_id__id__downloadImage' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
get_articleCategory_id__id__downloadImageWithConfigurationRaw :: forall m . WeclappAPI.Common.MonadHTTP m => WeclappAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Get_articleCategory_id__id__downloadImageParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
get_articleCategory_id__id__downloadImageWithConfigurationRaw config
                                                              parameters = GHC.Base.id (WeclappAPI.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/articleCategory/id/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ WeclappAPI.Common.stringifyModel (get_articleCategory_id__id__downloadImageParametersPathId parameters))) GHC.Base.++ "/downloadImage"))) [WeclappAPI.Common.QueryParameter (Data.Text.pack "scaleWidth") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_articleCategory_id__id__downloadImageParametersQueryScaleWidth parameters) (Data.Text.pack "form") GHC.Types.False,
eclappAPI.Common.QueryParameter (Data.Text.pack "scaleHeight") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_articleCategory_id__id__downloadImageParametersQueryScaleHeight parameters) (Data.Text.pack "form") GHC.Types.False,
eclappAPI.Common.QueryParameter (Data.Text.pack "imageId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_articleCategory_id__id__downloadImageParametersQueryImageId parameters) (Data.Text.pack "form") GHC.Types.False])
