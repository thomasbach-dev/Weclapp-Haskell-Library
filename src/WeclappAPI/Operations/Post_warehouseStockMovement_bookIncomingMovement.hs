-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation post_warehouseStockMovement_bookIncomingMovement
module WeclappAPI.Operations.Post_warehouseStockMovement_bookIncomingMovement where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified WeclappAPI.Common
import WeclappAPI.Types

-- | > POST /warehouseStockMovement/bookIncomingMovement
-- 
-- 
post_warehouseStockMovement_bookIncomingMovement :: forall m . WeclappAPI.Common.MonadHTTP m => Post_warehouseStockMovement_bookIncomingMovementRequestBody -- ^ The request body to send
  -> WeclappAPI.Common.ClientT m (Network.HTTP.Client.Types.Response Post_warehouseStockMovement_bookIncomingMovementResponse) -- ^ Monadic computation which returns the result of the operation
post_warehouseStockMovement_bookIncomingMovement body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either Post_warehouseStockMovement_bookIncomingMovementResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Post_warehouseStockMovement_bookIncomingMovementResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
ost_warehouseStockMovement_bookIncomingMovementResponseBody200)
                                                                                                                                                                                                                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (WeclappAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/warehouseStockMovement/bookIncomingMovement") GHC.Base.mempty (GHC.Maybe.Just body) WeclappAPI.Common.RequestBodyEncodingJSON)
-- | Defines the object schema located at @paths.\/warehouseStockMovement\/bookIncomingMovement.POST.requestBody.content.application\/json.schema@ in the specification.
-- 
-- 
data Post_warehouseStockMovement_bookIncomingMovementRequestBody = Post_warehouseStockMovement_bookIncomingMovementRequestBody {
  -- | articleId
  post_warehouseStockMovement_bookIncomingMovementRequestBodyArticleId :: Data.Text.Internal.Text
  -- | articleValuationPrice
  , post_warehouseStockMovement_bookIncomingMovementRequestBodyArticleValuationPrice :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | batchNumber
  , post_warehouseStockMovement_bookIncomingMovementRequestBodyBatchNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | batchNumberExpirationDate
  , post_warehouseStockMovement_bookIncomingMovementRequestBodyBatchNumberExpirationDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | movementNote
  , post_warehouseStockMovement_bookIncomingMovementRequestBodyMovementNote :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | quantity
  , post_warehouseStockMovement_bookIncomingMovementRequestBodyQuantity :: Data.Text.Internal.Text
  -- | serialNumbers
  , post_warehouseStockMovement_bookIncomingMovementRequestBodySerialNumbers :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | targetWarehouseLevelId
  , post_warehouseStockMovement_bookIncomingMovementRequestBodyTargetWarehouseLevelId :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Post_warehouseStockMovement_bookIncomingMovementRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object ("articleId" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyArticleId obj : "articleValuationPrice" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyArticleValuationPrice obj : "batchNumber" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyBatchNumber obj : "batchNumberExpirationDate" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyBatchNumberExpirationDate obj : "movementNote" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyMovementNote obj : "quantity" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyQuantity obj : "serialNumbers" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodySerialNumbers obj : "targetWarehouseLevelId" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyTargetWarehouseLevelId obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("articleId" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyArticleId obj) GHC.Base.<> (("articleValuationPrice" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyArticleValuationPrice obj) GHC.Base.<> (("batchNumber" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyBatchNumber obj) GHC.Base.<> (("batchNumberExpirationDate" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyBatchNumberExpirationDate obj) GHC.Base.<> (("movementNote" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyMovementNote obj) GHC.Base.<> (("quantity" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyQuantity obj) GHC.Base.<> (("serialNumbers" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodySerialNumbers obj) GHC.Base.<> ("targetWarehouseLevelId" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementRequestBodyTargetWarehouseLevelId obj))))))))
instance Data.Aeson.Types.FromJSON.FromJSON Post_warehouseStockMovement_bookIncomingMovementRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Post_warehouseStockMovement_bookIncomingMovementRequestBody" (\obj -> (((((((GHC.Base.pure Post_warehouseStockMovement_bookIncomingMovementRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "articleId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "articleValuationPrice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "batchNumber")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "batchNumberExpirationDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "movementNote")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "serialNumbers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "targetWarehouseLevelId"))
-- | Create a new 'Post_warehouseStockMovement_bookIncomingMovementRequestBody' with all required fields.
mkPost_warehouseStockMovement_bookIncomingMovementRequestBody :: Data.Text.Internal.Text -- ^ 'post_warehouseStockMovement_bookIncomingMovementRequestBodyArticleId'
  -> Data.Text.Internal.Text -- ^ 'post_warehouseStockMovement_bookIncomingMovementRequestBodyQuantity'
  -> Data.Text.Internal.Text -- ^ 'post_warehouseStockMovement_bookIncomingMovementRequestBodyTargetWarehouseLevelId'
  -> Post_warehouseStockMovement_bookIncomingMovementRequestBody
mkPost_warehouseStockMovement_bookIncomingMovementRequestBody post_warehouseStockMovement_bookIncomingMovementRequestBodyArticleId post_warehouseStockMovement_bookIncomingMovementRequestBodyQuantity post_warehouseStockMovement_bookIncomingMovementRequestBodyTargetWarehouseLevelId = Post_warehouseStockMovement_bookIncomingMovementRequestBody{post_warehouseStockMovement_bookIncomingMovementRequestBodyArticleId = post_warehouseStockMovement_bookIncomingMovementRequestBodyArticleId,
                                                                                                                                                                                                                                                                                                                                                       post_warehouseStockMovement_bookIncomingMovementRequestBodyArticleValuationPrice = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                       post_warehouseStockMovement_bookIncomingMovementRequestBodyBatchNumber = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                       post_warehouseStockMovement_bookIncomingMovementRequestBodyBatchNumberExpirationDate = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                       post_warehouseStockMovement_bookIncomingMovementRequestBodyMovementNote = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                       post_warehouseStockMovement_bookIncomingMovementRequestBodyQuantity = post_warehouseStockMovement_bookIncomingMovementRequestBodyQuantity,
                                                                                                                                                                                                                                                                                                                                                       post_warehouseStockMovement_bookIncomingMovementRequestBodySerialNumbers = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                       post_warehouseStockMovement_bookIncomingMovementRequestBodyTargetWarehouseLevelId = post_warehouseStockMovement_bookIncomingMovementRequestBodyTargetWarehouseLevelId}
-- | Represents a response of the operation 'post_warehouseStockMovement_bookIncomingMovement'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'Post_warehouseStockMovement_bookIncomingMovementResponseError' is used.
data Post_warehouseStockMovement_bookIncomingMovementResponse =
   Post_warehouseStockMovement_bookIncomingMovementResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | Post_warehouseStockMovement_bookIncomingMovementResponse200 Post_warehouseStockMovement_bookIncomingMovementResponseBody200 -- ^ bookIncomingMovement response
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/warehouseStockMovement\/bookIncomingMovement.POST.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data Post_warehouseStockMovement_bookIncomingMovementResponseBody200 = Post_warehouseStockMovement_bookIncomingMovementResponseBody200 {
  -- | result
  post_warehouseStockMovement_bookIncomingMovementResponseBody200Result :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Post_warehouseStockMovement_bookIncomingMovementResponseBody200
    where toJSON obj = Data.Aeson.Types.Internal.object ("result" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementResponseBody200Result obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("result" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookIncomingMovementResponseBody200Result obj)
instance Data.Aeson.Types.FromJSON.FromJSON Post_warehouseStockMovement_bookIncomingMovementResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Post_warehouseStockMovement_bookIncomingMovementResponseBody200" (\obj -> GHC.Base.pure Post_warehouseStockMovement_bookIncomingMovementResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "result"))
-- | Create a new 'Post_warehouseStockMovement_bookIncomingMovementResponseBody200' with all required fields.
mkPost_warehouseStockMovement_bookIncomingMovementResponseBody200 :: Post_warehouseStockMovement_bookIncomingMovementResponseBody200
mkPost_warehouseStockMovement_bookIncomingMovementResponseBody200 = Post_warehouseStockMovement_bookIncomingMovementResponseBody200{post_warehouseStockMovement_bookIncomingMovementResponseBody200Result = GHC.Maybe.Nothing}
-- | > POST /warehouseStockMovement/bookIncomingMovement
-- 
-- The same as 'post_warehouseStockMovement_bookIncomingMovement' but accepts an explicit configuration.
post_warehouseStockMovement_bookIncomingMovementWithConfiguration :: forall m . WeclappAPI.Common.MonadHTTP m => WeclappAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Post_warehouseStockMovement_bookIncomingMovementRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response Post_warehouseStockMovement_bookIncomingMovementResponse) -- ^ Monadic computation which returns the result of the operation
post_warehouseStockMovement_bookIncomingMovementWithConfiguration config
                                                                  body = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either Post_warehouseStockMovement_bookIncomingMovementResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Post_warehouseStockMovement_bookIncomingMovementResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
ost_warehouseStockMovement_bookIncomingMovementResponseBody200)
                                                                                                                                                                                                                                                    | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (WeclappAPI.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/warehouseStockMovement/bookIncomingMovement") GHC.Base.mempty (GHC.Maybe.Just body) WeclappAPI.Common.RequestBodyEncodingJSON)
-- | > POST /warehouseStockMovement/bookIncomingMovement
-- 
-- The same as 'post_warehouseStockMovement_bookIncomingMovement' but returns the raw 'Data.ByteString.Char8.ByteString'.
post_warehouseStockMovement_bookIncomingMovementRaw :: forall m . WeclappAPI.Common.MonadHTTP m => Post_warehouseStockMovement_bookIncomingMovementRequestBody -- ^ The request body to send
  -> WeclappAPI.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
post_warehouseStockMovement_bookIncomingMovementRaw body = GHC.Base.id (WeclappAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/warehouseStockMovement/bookIncomingMovement") GHC.Base.mempty (GHC.Maybe.Just body) WeclappAPI.Common.RequestBodyEncodingJSON)
-- | > POST /warehouseStockMovement/bookIncomingMovement
-- 
-- The same as 'post_warehouseStockMovement_bookIncomingMovement' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
post_warehouseStockMovement_bookIncomingMovementWithConfigurationRaw :: forall m . WeclappAPI.Common.MonadHTTP m => WeclappAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Post_warehouseStockMovement_bookIncomingMovementRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
post_warehouseStockMovement_bookIncomingMovementWithConfigurationRaw config
                                                                     body = GHC.Base.id (WeclappAPI.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/warehouseStockMovement/bookIncomingMovement") GHC.Base.mempty (GHC.Maybe.Just body) WeclappAPI.Common.RequestBodyEncodingJSON)
