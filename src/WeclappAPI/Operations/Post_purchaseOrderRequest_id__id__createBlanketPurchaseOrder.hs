-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation post_purchaseOrderRequest_id__id__createBlanketPurchaseOrder
module WeclappAPI.Operations.Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrder where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified WeclappAPI.Common
import WeclappAPI.Types

-- | > POST /purchaseOrderRequest/id/{id}/createBlanketPurchaseOrder
-- 
-- 
post_purchaseOrderRequest_id__id__createBlanketPurchaseOrder :: forall m . WeclappAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ id
  -> Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody -- ^ The request body to send
  -> WeclappAPI.Common.ClientT m (Network.HTTP.Client.Types.Response Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponse) -- ^ Monadic computation which returns the result of the operation
post_purchaseOrderRequest_id__id__createBlanketPurchaseOrder id
                                                             body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
ost_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200)
                                                                                                                                                                                                                                                           | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (WeclappAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/purchaseOrderRequest/id/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ WeclappAPI.Common.stringifyModel id)) GHC.Base.++ "/createBlanketPurchaseOrder"))) GHC.Base.mempty (GHC.Maybe.Just body) WeclappAPI.Common.RequestBodyEncodingJSON)
-- | Defines the object schema located at @paths.\/purchaseOrderRequest\/id\/{id}\/createBlanketPurchaseOrder.POST.requestBody.content.application\/json.schema@ in the specification.
-- 
-- 
data Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody = Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody {
  -- | offerItemId
  post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOfferItemId :: GHC.Int.Int32
  -- | orderedQuantity
  , post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOrderedQuantity :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object ("offerItemId" Data.Aeson.Types.ToJSON..= post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOfferItemId obj : "orderedQuantity" Data.Aeson.Types.ToJSON..= post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOrderedQuantity obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("offerItemId" Data.Aeson.Types.ToJSON..= post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOfferItemId obj) GHC.Base.<> ("orderedQuantity" Data.Aeson.Types.ToJSON..= post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOrderedQuantity obj))
instance Data.Aeson.Types.FromJSON.FromJSON Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody" (\obj -> (GHC.Base.pure Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "offerItemId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderedQuantity"))
-- | Create a new 'Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody' with all required fields.
mkPost_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody :: GHC.Int.Int32 -- ^ 'post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOfferItemId'
  -> Data.Text.Internal.Text -- ^ 'post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOrderedQuantity'
  -> Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody
mkPost_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOfferItemId post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOrderedQuantity = Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody{post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOfferItemId = post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOfferItemId,
                                                                                                                                                                                                                                                                                                                              post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOrderedQuantity = post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBodyOrderedQuantity}
-- | Represents a response of the operation 'post_purchaseOrderRequest_id__id__createBlanketPurchaseOrder'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseError' is used.
data Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponse =
   Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponse200 Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200 -- ^ createBlanketPurchaseOrder response
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/purchaseOrderRequest\/id\/{id}\/createBlanketPurchaseOrder.POST.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200 = Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200 {
  -- | result
  post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200Result :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200
    where toJSON obj = Data.Aeson.Types.Internal.object ("result" Data.Aeson.Types.ToJSON..= post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200Result obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("result" Data.Aeson.Types.ToJSON..= post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200Result obj)
instance Data.Aeson.Types.FromJSON.FromJSON Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200" (\obj -> GHC.Base.pure Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "result"))
-- | Create a new 'Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200' with all required fields.
mkPost_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200 :: Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200
mkPost_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200 = Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200{post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200Result = GHC.Maybe.Nothing}
-- | > POST /purchaseOrderRequest/id/{id}/createBlanketPurchaseOrder
-- 
-- The same as 'post_purchaseOrderRequest_id__id__createBlanketPurchaseOrder' but accepts an explicit configuration.
post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderWithConfiguration :: forall m . WeclappAPI.Common.MonadHTTP m => WeclappAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Data.Text.Internal.Text -- ^ id
  -> Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponse) -- ^ Monadic computation which returns the result of the operation
post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderWithConfiguration config
                                                                              id
                                                                              body = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
ost_purchaseOrderRequest_id__id__createBlanketPurchaseOrderResponseBody200)
                                                                                                                                                                                                                                                                            | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (WeclappAPI.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/purchaseOrderRequest/id/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ WeclappAPI.Common.stringifyModel id)) GHC.Base.++ "/createBlanketPurchaseOrder"))) GHC.Base.mempty (GHC.Maybe.Just body) WeclappAPI.Common.RequestBodyEncodingJSON)
-- | > POST /purchaseOrderRequest/id/{id}/createBlanketPurchaseOrder
-- 
-- The same as 'post_purchaseOrderRequest_id__id__createBlanketPurchaseOrder' but returns the raw 'Data.ByteString.Char8.ByteString'.
post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRaw :: forall m . WeclappAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ id
  -> Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody -- ^ The request body to send
  -> WeclappAPI.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRaw id
                                                                body = GHC.Base.id (WeclappAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/purchaseOrderRequest/id/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ WeclappAPI.Common.stringifyModel id)) GHC.Base.++ "/createBlanketPurchaseOrder"))) GHC.Base.mempty (GHC.Maybe.Just body) WeclappAPI.Common.RequestBodyEncodingJSON)
-- | > POST /purchaseOrderRequest/id/{id}/createBlanketPurchaseOrder
-- 
-- The same as 'post_purchaseOrderRequest_id__id__createBlanketPurchaseOrder' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderWithConfigurationRaw :: forall m . WeclappAPI.Common.MonadHTTP m => WeclappAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Data.Text.Internal.Text -- ^ id
  -> Post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
post_purchaseOrderRequest_id__id__createBlanketPurchaseOrderWithConfigurationRaw config
                                                                                 id
                                                                                 body = GHC.Base.id (WeclappAPI.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/purchaseOrderRequest/id/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ WeclappAPI.Common.stringifyModel id)) GHC.Base.++ "/createBlanketPurchaseOrder"))) GHC.Base.mempty (GHC.Maybe.Just body) WeclappAPI.Common.RequestBodyEncodingJSON)
