-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation post_warehouseStockMovement_bookTransferMovement
module WeclappAPI.Operations.Post_warehouseStockMovement_bookTransferMovement where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified WeclappAPI.Common
import WeclappAPI.Types

-- | > POST /warehouseStockMovement/bookTransferMovement
-- 
-- 
post_warehouseStockMovement_bookTransferMovement :: forall m . WeclappAPI.Common.MonadHTTP m => Post_warehouseStockMovement_bookTransferMovementRequestBody -- ^ The request body to send
  -> WeclappAPI.Common.ClientT m (Network.HTTP.Client.Types.Response Post_warehouseStockMovement_bookTransferMovementResponse) -- ^ Monadic computation which returns the result of the operation
post_warehouseStockMovement_bookTransferMovement body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either Post_warehouseStockMovement_bookTransferMovementResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Post_warehouseStockMovement_bookTransferMovementResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
ost_warehouseStockMovement_bookTransferMovementResponseBody200)
                                                                                                                                                                                                                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (WeclappAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/warehouseStockMovement/bookTransferMovement") GHC.Base.mempty (GHC.Maybe.Just body) WeclappAPI.Common.RequestBodyEncodingJSON)
-- | Defines the object schema located at @paths.\/warehouseStockMovement\/bookTransferMovement.POST.requestBody.content.application\/json.schema@ in the specification.
-- 
-- 
data Post_warehouseStockMovement_bookTransferMovementRequestBody = Post_warehouseStockMovement_bookTransferMovementRequestBody {
  -- | articleId
  post_warehouseStockMovement_bookTransferMovementRequestBodyArticleId :: Data.Text.Internal.Text
  -- | batchNumber
  , post_warehouseStockMovement_bookTransferMovementRequestBodyBatchNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | movementNote
  , post_warehouseStockMovement_bookTransferMovementRequestBodyMovementNote :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | quantity
  , post_warehouseStockMovement_bookTransferMovementRequestBodyQuantity :: Data.Text.Internal.Text
  -- | serialNumbers
  , post_warehouseStockMovement_bookTransferMovementRequestBodySerialNumbers :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | sourceWarehouseLevelId
  , post_warehouseStockMovement_bookTransferMovementRequestBodySourceWarehouseLevelId :: Data.Text.Internal.Text
  -- | targetWarehouseLevelId
  , post_warehouseStockMovement_bookTransferMovementRequestBodyTargetWarehouseLevelId :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Post_warehouseStockMovement_bookTransferMovementRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object ("articleId" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodyArticleId obj : "batchNumber" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodyBatchNumber obj : "movementNote" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodyMovementNote obj : "quantity" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodyQuantity obj : "serialNumbers" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodySerialNumbers obj : "sourceWarehouseLevelId" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodySourceWarehouseLevelId obj : "targetWarehouseLevelId" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodyTargetWarehouseLevelId obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("articleId" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodyArticleId obj) GHC.Base.<> (("batchNumber" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodyBatchNumber obj) GHC.Base.<> (("movementNote" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodyMovementNote obj) GHC.Base.<> (("quantity" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodyQuantity obj) GHC.Base.<> (("serialNumbers" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodySerialNumbers obj) GHC.Base.<> (("sourceWarehouseLevelId" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodySourceWarehouseLevelId obj) GHC.Base.<> ("targetWarehouseLevelId" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementRequestBodyTargetWarehouseLevelId obj)))))))
instance Data.Aeson.Types.FromJSON.FromJSON Post_warehouseStockMovement_bookTransferMovementRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Post_warehouseStockMovement_bookTransferMovementRequestBody" (\obj -> ((((((GHC.Base.pure Post_warehouseStockMovement_bookTransferMovementRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "articleId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "batchNumber")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "movementNote")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "serialNumbers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "sourceWarehouseLevelId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "targetWarehouseLevelId"))
-- | Create a new 'Post_warehouseStockMovement_bookTransferMovementRequestBody' with all required fields.
mkPost_warehouseStockMovement_bookTransferMovementRequestBody :: Data.Text.Internal.Text -- ^ 'post_warehouseStockMovement_bookTransferMovementRequestBodyArticleId'
  -> Data.Text.Internal.Text -- ^ 'post_warehouseStockMovement_bookTransferMovementRequestBodyQuantity'
  -> Data.Text.Internal.Text -- ^ 'post_warehouseStockMovement_bookTransferMovementRequestBodySourceWarehouseLevelId'
  -> Data.Text.Internal.Text -- ^ 'post_warehouseStockMovement_bookTransferMovementRequestBodyTargetWarehouseLevelId'
  -> Post_warehouseStockMovement_bookTransferMovementRequestBody
mkPost_warehouseStockMovement_bookTransferMovementRequestBody post_warehouseStockMovement_bookTransferMovementRequestBodyArticleId post_warehouseStockMovement_bookTransferMovementRequestBodyQuantity post_warehouseStockMovement_bookTransferMovementRequestBodySourceWarehouseLevelId post_warehouseStockMovement_bookTransferMovementRequestBodyTargetWarehouseLevelId = Post_warehouseStockMovement_bookTransferMovementRequestBody{post_warehouseStockMovement_bookTransferMovementRequestBodyArticleId = post_warehouseStockMovement_bookTransferMovementRequestBodyArticleId,
                                                                                                                                                                                                                                                                                                                                                                                                                                         post_warehouseStockMovement_bookTransferMovementRequestBodyBatchNumber = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                         post_warehouseStockMovement_bookTransferMovementRequestBodyMovementNote = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                         post_warehouseStockMovement_bookTransferMovementRequestBodyQuantity = post_warehouseStockMovement_bookTransferMovementRequestBodyQuantity,
                                                                                                                                                                                                                                                                                                                                                                                                                                         post_warehouseStockMovement_bookTransferMovementRequestBodySerialNumbers = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                         post_warehouseStockMovement_bookTransferMovementRequestBodySourceWarehouseLevelId = post_warehouseStockMovement_bookTransferMovementRequestBodySourceWarehouseLevelId,
                                                                                                                                                                                                                                                                                                                                                                                                                                         post_warehouseStockMovement_bookTransferMovementRequestBodyTargetWarehouseLevelId = post_warehouseStockMovement_bookTransferMovementRequestBodyTargetWarehouseLevelId}
-- | Represents a response of the operation 'post_warehouseStockMovement_bookTransferMovement'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'Post_warehouseStockMovement_bookTransferMovementResponseError' is used.
data Post_warehouseStockMovement_bookTransferMovementResponse =
   Post_warehouseStockMovement_bookTransferMovementResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | Post_warehouseStockMovement_bookTransferMovementResponse200 Post_warehouseStockMovement_bookTransferMovementResponseBody200 -- ^ bookTransferMovement response
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/warehouseStockMovement\/bookTransferMovement.POST.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data Post_warehouseStockMovement_bookTransferMovementResponseBody200 = Post_warehouseStockMovement_bookTransferMovementResponseBody200 {
  -- | result
  post_warehouseStockMovement_bookTransferMovementResponseBody200Result :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Post_warehouseStockMovement_bookTransferMovementResponseBody200
    where toJSON obj = Data.Aeson.Types.Internal.object ("result" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementResponseBody200Result obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("result" Data.Aeson.Types.ToJSON..= post_warehouseStockMovement_bookTransferMovementResponseBody200Result obj)
instance Data.Aeson.Types.FromJSON.FromJSON Post_warehouseStockMovement_bookTransferMovementResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Post_warehouseStockMovement_bookTransferMovementResponseBody200" (\obj -> GHC.Base.pure Post_warehouseStockMovement_bookTransferMovementResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "result"))
-- | Create a new 'Post_warehouseStockMovement_bookTransferMovementResponseBody200' with all required fields.
mkPost_warehouseStockMovement_bookTransferMovementResponseBody200 :: Post_warehouseStockMovement_bookTransferMovementResponseBody200
mkPost_warehouseStockMovement_bookTransferMovementResponseBody200 = Post_warehouseStockMovement_bookTransferMovementResponseBody200{post_warehouseStockMovement_bookTransferMovementResponseBody200Result = GHC.Maybe.Nothing}
-- | > POST /warehouseStockMovement/bookTransferMovement
-- 
-- The same as 'post_warehouseStockMovement_bookTransferMovement' but accepts an explicit configuration.
post_warehouseStockMovement_bookTransferMovementWithConfiguration :: forall m . WeclappAPI.Common.MonadHTTP m => WeclappAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Post_warehouseStockMovement_bookTransferMovementRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response Post_warehouseStockMovement_bookTransferMovementResponse) -- ^ Monadic computation which returns the result of the operation
post_warehouseStockMovement_bookTransferMovementWithConfiguration config
                                                                  body = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either Post_warehouseStockMovement_bookTransferMovementResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Post_warehouseStockMovement_bookTransferMovementResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
ost_warehouseStockMovement_bookTransferMovementResponseBody200)
                                                                                                                                                                                                                                                    | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (WeclappAPI.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/warehouseStockMovement/bookTransferMovement") GHC.Base.mempty (GHC.Maybe.Just body) WeclappAPI.Common.RequestBodyEncodingJSON)
-- | > POST /warehouseStockMovement/bookTransferMovement
-- 
-- The same as 'post_warehouseStockMovement_bookTransferMovement' but returns the raw 'Data.ByteString.Char8.ByteString'.
post_warehouseStockMovement_bookTransferMovementRaw :: forall m . WeclappAPI.Common.MonadHTTP m => Post_warehouseStockMovement_bookTransferMovementRequestBody -- ^ The request body to send
  -> WeclappAPI.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
post_warehouseStockMovement_bookTransferMovementRaw body = GHC.Base.id (WeclappAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/warehouseStockMovement/bookTransferMovement") GHC.Base.mempty (GHC.Maybe.Just body) WeclappAPI.Common.RequestBodyEncodingJSON)
-- | > POST /warehouseStockMovement/bookTransferMovement
-- 
-- The same as 'post_warehouseStockMovement_bookTransferMovement' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
post_warehouseStockMovement_bookTransferMovementWithConfigurationRaw :: forall m . WeclappAPI.Common.MonadHTTP m => WeclappAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Post_warehouseStockMovement_bookTransferMovementRequestBody -- ^ The request body to send
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
post_warehouseStockMovement_bookTransferMovementWithConfigurationRaw config
                                                                     body = GHC.Base.id (WeclappAPI.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/warehouseStockMovement/bookTransferMovement") GHC.Base.mempty (GHC.Maybe.Just body) WeclappAPI.Common.RequestBodyEncodingJSON)
