-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation get_user_id__id__userImageThumbnail
module WeclappAPI.Operations.Get_user_id__id__userImageThumbnail where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified WeclappAPI.Common
import WeclappAPI.Types

-- | > GET /user/id/{id}/userImageThumbnail
-- 
-- 
get_user_id__id__userImageThumbnail :: forall m . WeclappAPI.Common.MonadHTTP m => Get_user_id__id__userImageThumbnailParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> WeclappAPI.Common.ClientT m (Network.HTTP.Client.Types.Response Get_user_id__id__userImageThumbnailResponse) -- ^ Monadic computation which returns the result of the operation
get_user_id__id__userImageThumbnail parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either Get_user_id__id__userImageThumbnailResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Get_user_id__id__userImageThumbnailResponse200
                                                                                                                                                                                                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (WeclappAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/user/id/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ WeclappAPI.Common.stringifyModel (get_user_id__id__userImageThumbnailParametersPathId parameters))) GHC.Base.++ "/userImageThumbnail"))) [WeclappAPI.Common.QueryParameter (Data.Text.pack "scaleWidth") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_user_id__id__userImageThumbnailParametersQueryScaleWidth parameters) (Data.Text.pack "form") GHC.Types.False,
eclappAPI.Common.QueryParameter (Data.Text.pack "scaleHeight") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_user_id__id__userImageThumbnailParametersQueryScaleHeight parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               WeclappAPI.Common.QueryParameter (Data.Text.pack "imageId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_user_id__id__userImageThumbnailParametersQueryImageId parameters) (Data.Text.pack "form") GHC.Types.False])
-- | Defines the object schema located at @paths.\/user\/id\/{id}\/userImageThumbnail.GET.parameters@ in the specification.
-- 
-- 
data Get_user_id__id__userImageThumbnailParameters = Get_user_id__id__userImageThumbnailParameters {
  -- | pathId: Represents the parameter named \'id\'
  get_user_id__id__userImageThumbnailParametersPathId :: Data.Text.Internal.Text
  -- | queryImageId: Represents the parameter named \'imageId\'
  , get_user_id__id__userImageThumbnailParametersQueryImageId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryScaleHeight: Represents the parameter named \'scaleHeight\'
  , get_user_id__id__userImageThumbnailParametersQueryScaleHeight :: (GHC.Maybe.Maybe GHC.Int.Int32)
  -- | queryScaleWidth: Represents the parameter named \'scaleWidth\'
  , get_user_id__id__userImageThumbnailParametersQueryScaleWidth :: (GHC.Maybe.Maybe GHC.Int.Int32)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Get_user_id__id__userImageThumbnailParameters
    where toJSON obj = Data.Aeson.Types.Internal.object ("pathId" Data.Aeson.Types.ToJSON..= get_user_id__id__userImageThumbnailParametersPathId obj : "queryImageId" Data.Aeson.Types.ToJSON..= get_user_id__id__userImageThumbnailParametersQueryImageId obj : "queryScaleHeight" Data.Aeson.Types.ToJSON..= get_user_id__id__userImageThumbnailParametersQueryScaleHeight obj : "queryScaleWidth" Data.Aeson.Types.ToJSON..= get_user_id__id__userImageThumbnailParametersQueryScaleWidth obj : GHC.Base.mempty)
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("pathId" Data.Aeson.Types.ToJSON..= get_user_id__id__userImageThumbnailParametersPathId obj) GHC.Base.<> (("queryImageId" Data.Aeson.Types.ToJSON..= get_user_id__id__userImageThumbnailParametersQueryImageId obj) GHC.Base.<> (("queryScaleHeight" Data.Aeson.Types.ToJSON..= get_user_id__id__userImageThumbnailParametersQueryScaleHeight obj) GHC.Base.<> ("queryScaleWidth" Data.Aeson.Types.ToJSON..= get_user_id__id__userImageThumbnailParametersQueryScaleWidth obj))))
instance Data.Aeson.Types.FromJSON.FromJSON Get_user_id__id__userImageThumbnailParameters
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Get_user_id__id__userImageThumbnailParameters" (\obj -> (((GHC.Base.pure Get_user_id__id__userImageThumbnailParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryImageId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryScaleHeight")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryScaleWidth"))
-- | Create a new 'Get_user_id__id__userImageThumbnailParameters' with all required fields.
mkGet_user_id__id__userImageThumbnailParameters :: Data.Text.Internal.Text -- ^ 'get_user_id__id__userImageThumbnailParametersPathId'
  -> Get_user_id__id__userImageThumbnailParameters
mkGet_user_id__id__userImageThumbnailParameters get_user_id__id__userImageThumbnailParametersPathId = Get_user_id__id__userImageThumbnailParameters{get_user_id__id__userImageThumbnailParametersPathId = get_user_id__id__userImageThumbnailParametersPathId,
                                                                                                                                                    get_user_id__id__userImageThumbnailParametersQueryImageId = GHC.Maybe.Nothing,
                                                                                                                                                    get_user_id__id__userImageThumbnailParametersQueryScaleHeight = GHC.Maybe.Nothing,
                                                                                                                                                    get_user_id__id__userImageThumbnailParametersQueryScaleWidth = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'get_user_id__id__userImageThumbnail'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'Get_user_id__id__userImageThumbnailResponseError' is used.
data Get_user_id__id__userImageThumbnailResponse =
   Get_user_id__id__userImageThumbnailResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | Get_user_id__id__userImageThumbnailResponse200 -- ^ userImageThumbnail response
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | > GET /user/id/{id}/userImageThumbnail
-- 
-- The same as 'get_user_id__id__userImageThumbnail' but accepts an explicit configuration.
get_user_id__id__userImageThumbnailWithConfiguration :: forall m . WeclappAPI.Common.MonadHTTP m => WeclappAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Get_user_id__id__userImageThumbnailParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response Get_user_id__id__userImageThumbnailResponse) -- ^ Monadic computation which returns the result of the operation
get_user_id__id__userImageThumbnailWithConfiguration config
                                                     parameters = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either Get_user_id__id__userImageThumbnailResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Data.Either.Right Get_user_id__id__userImageThumbnailResponse200
                                                                                                                                                                                                                                | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (WeclappAPI.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/user/id/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ WeclappAPI.Common.stringifyModel (get_user_id__id__userImageThumbnailParametersPathId parameters))) GHC.Base.++ "/userImageThumbnail"))) [WeclappAPI.Common.QueryParameter (Data.Text.pack "scaleWidth") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_user_id__id__userImageThumbnailParametersQueryScaleWidth parameters) (Data.Text.pack "form") GHC.Types.False,
eclappAPI.Common.QueryParameter (Data.Text.pack "scaleHeight") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_user_id__id__userImageThumbnailParametersQueryScaleHeight parameters) (Data.Text.pack "form") GHC.Types.False,
eclappAPI.Common.QueryParameter (Data.Text.pack "imageId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_user_id__id__userImageThumbnailParametersQueryImageId parameters) (Data.Text.pack "form") GHC.Types.False])
-- | > GET /user/id/{id}/userImageThumbnail
-- 
-- The same as 'get_user_id__id__userImageThumbnail' but returns the raw 'Data.ByteString.Char8.ByteString'.
get_user_id__id__userImageThumbnailRaw :: forall m . WeclappAPI.Common.MonadHTTP m => Get_user_id__id__userImageThumbnailParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> WeclappAPI.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
get_user_id__id__userImageThumbnailRaw parameters = GHC.Base.id (WeclappAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/user/id/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ WeclappAPI.Common.stringifyModel (get_user_id__id__userImageThumbnailParametersPathId parameters))) GHC.Base.++ "/userImageThumbnail"))) [WeclappAPI.Common.QueryParameter (Data.Text.pack "scaleWidth") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_user_id__id__userImageThumbnailParametersQueryScaleWidth parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              WeclappAPI.Common.QueryParameter (Data.Text.pack "scaleHeight") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_user_id__id__userImageThumbnailParametersQueryScaleHeight parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              WeclappAPI.Common.QueryParameter (Data.Text.pack "imageId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_user_id__id__userImageThumbnailParametersQueryImageId parameters) (Data.Text.pack "form") GHC.Types.False])
-- | > GET /user/id/{id}/userImageThumbnail
-- 
-- The same as 'get_user_id__id__userImageThumbnail' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
get_user_id__id__userImageThumbnailWithConfigurationRaw :: forall m . WeclappAPI.Common.MonadHTTP m => WeclappAPI.Common.Configuration -- ^ The configuration to use in the request
  -> Get_user_id__id__userImageThumbnailParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
get_user_id__id__userImageThumbnailWithConfigurationRaw config
                                                        parameters = GHC.Base.id (WeclappAPI.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/user/id/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ WeclappAPI.Common.stringifyModel (get_user_id__id__userImageThumbnailParametersPathId parameters))) GHC.Base.++ "/userImageThumbnail"))) [WeclappAPI.Common.QueryParameter (Data.Text.pack "scaleWidth") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_user_id__id__userImageThumbnailParametersQueryScaleWidth parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     WeclappAPI.Common.QueryParameter (Data.Text.pack "scaleHeight") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_user_id__id__userImageThumbnailParametersQueryScaleHeight parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     WeclappAPI.Common.QueryParameter (Data.Text.pack "imageId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_user_id__id__userImageThumbnailParametersQueryImageId parameters) (Data.Text.pack "form") GHC.Types.False])
